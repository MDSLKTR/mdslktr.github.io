var DataWrapper=React.createClass({displayName:"DataWrapper",getInitialState:function(){return{skills:[],passives:[],stats:[],heroes:{},items:{},attributes:[],"class":"",name:"",level:"",paragon:"",helmItem:{},amuletItem:{},shouldersItem:{},bracersItem:{},chestItem:{},ringItemLeft:{},ringItemRight:{},mainItem:{},offItem:{},legsItem:{},bootsItem:{},glovesItem:{},beltItem:{},additionalStats:[],atkSpd:0,eliteDmg:0,eliteDmgRed:0,areaDmg:0,goldPickup:0,dmgRedMelee:0,dmgRedRanged:0,maxEleDmg:0,maxHealth:0,trigger:!0,count:0,toggleItem:"toggle",paragonCdr:parseInt(localStorage.getItem("paragonCdr")),paragonResRed:parseInt(localStorage.getItem("paragonResRed")),paragonAtkSpd:parseInt(localStorage.getItem("paragonAtkSpd")),paragonCritDmg:parseInt(localStorage.getItem("paragonCritDmg")),paragonCritChance:parseInt(localStorage.getItem("paragonCritChance")),paragonAreaDmg:parseInt(localStorage.getItem("paragonAreaDmg")),paragonResource:parseInt(localStorage.getItem("paragonResource")),paragonResistAll:parseInt(localStorage.getItem("paragonResistAll")),paragonArmor:parseInt(localStorage.getItem("paragonArmor")),paragonMaxHealth:parseInt(localStorage.getItem("paragonMaxHealth")),invalid:!1,time:0,isOpen:"",skillDescOpen:"",passiveDescOpen:"",url:"",itemUrl:"",battleTag:localStorage.getItem("battleTag"),apiKey:"?locale=en_GB&apikey=65d63bvh7spjgmce3gjq2mv5nzjfsggy",profile:"https://eu.api.battle.net/d3/profile/",itemIconBase:"http://media.blizzard.com/d3/icons/items/large/",skillIconBase:"http://media.blizzard.com/d3/icons/skills/64/",itemToolTipBase:"https://eu.api.battle.net/d3/data/"}},loadHeroesData:function(){this.state.battleTag&&(this.setState({url:this.state.profile.concat(this.state.battleTag.replace(/#/g,"-"),"/",this.state.apiKey)}),$.ajax({url:this.state.url,dataType:"jsonp",success:function(a){this.setState({heroes:a})}.bind(this),error:function(a,b,c){console.error(this.state.url,b,c.toString())}.bind(this)}),console.log(this.state.url))},loadHeroData:function(){this.state.selected&&(this.setState({url:this.state.profile.concat(this.state.battleTag.replace(/#/g,"-"),"/hero/",this.state.selected,this.state.apiKey)}),$.ajax({url:this.state.url,dataType:"jsonp",success:function(a){this.setState({name:a.name,"class":a["class"],level:a.level,paragon:a.paragonLevel,skills:a.skills.active,passives:a.skills.passive,stats:a.stats,items:a.items,time:a["last-updated"]})}.bind(this),error:function(a,b,c){console.error(this.state.url,b,c.toString())}.bind(this)}),console.log(this.state.url))},loadItemData:function(a){this.setState({item:a}),this.setState({itemUrl:this.state.itemToolTipBase.concat(this.state.item,this.state.apiKey)}),$.ajax({url:this.state.itemUrl,dataType:"jsonp",success:function(a){switch(a.type.id){case"GenericHelm":case"Helm":case"Helm_Barbarian":case"Helm_DemonHunter":case"Helm_WitchDoctor":case"Helm_Crusader":case"Helm_Wizard":case"Helm_Monk":case"VoodooMask":this.setState({helmItem:a});break;case"GenericShoulders":case"Shoulders":case"Shoulders_Barbarian":case"Shoulders_DemonHunter":case"Shoulders_WitchDoctor":case"Shoulders_Crusader":case"Shoulders_Wizard":case"Shoulders_Monk":this.setState({shouldersItem:a});break;case"Bracers":this.setState({bracersItem:a});break;case"ChestArmor":case"GenericChestArmor":case"ChestArmor_Barbarian":case"ChestArmor_DemonHunter":case"ChestArmor_WitchDoctor":case"ChestArmor_Crusader":case"ChestArmor_Wizard":case"ChestArmor_Monk":case"Cloak":this.setState({chestItem:a});break;case"GenericLegs":case"Legs":case"Legs_Barbarian":case"Legs_DemonHunter":case"Legs_WitchDoctor":case"Legs_Crusader":case"Legs_Wizard":case"Legs_Monk":this.setState({legsItem:a});break;case"GenericBoots":case"Boots":case"Boots_Barbarian":case"Boots_DemonHunter":case"Boots_WitchDoctor":case"Boots_Crusader":case"Boots_Wizard":case"Boots_Monk":this.setState({bootsItem:a});break;case"Polearm":case"Crossbow":case"Dagger":case"Sword":case"Sword2H":case"Mace":case"Axe":case"FistWeapon":case"CeremonialKnife":case"MightyWeapon1H":case"Flail2H":case"Flail1H":case"HandXbow":case"Bow2H":case"Bow":case"Wand":case"Staff":case"Staff2H":case"CeremonialDagger":case"MightyWeapon2H":case"Mace2H":this.setState({mainItem:a});break;case"GenericGloves":case"Gloves":case"Gloves_Barbarian":case"Gloves_DemonHunter":case"Gloves_WitchDoctor":case"Gloves_Crusader":case"Gloves_Wizard":case"Gloves_Monk":this.setState({glovesItem:a});break;case"Belt":case"GenericBelt":case"Belt_Barbarian":this.setState({beltItem:a});break;case"Amulet":this.setState({amuletItem:a})}}.bind(this),error:function(a,b,c){console.error(this.state.url,b,c.toString())}.bind(this)}),console.log(this.state.itemUrl)},loadItemDataWithProps:function(a,b){this.setState({item:a}),this.setState({itemUrl:this.state.itemToolTipBase.concat(this.state.item,this.state.apiKey)}),$.ajax({url:this.state.itemUrl,dataType:"jsonp",success:function(a){switch(a.type.id){case"Ring":this.setState(b===!0?{ringItemLeft:a}:{ringItemRight:a});break;case"Quiver":case"CrusaderShield":case"Shield":case"Orb":case"Source":case"Mojo":this.setState({offItem:a});break;case"Dagger":case"Sword":case"Mace":case"Axe":case"FistWeapon":case"MightyWeapon1H":case"Flail1H":case"HandXbow":case"Bow":case"Wand":case"Staff":this.setState({offItem:a})}}.bind(this),error:function(a,b,c){console.error(this.state.url,b,c.toString())}.bind(this)}),console.log(this.state.itemUrl)},checkTrigger:function(){this.state.trigger===!0&&this.state.count<2&&(setTimeout(this.loadHeroesData(),200),setTimeout(this.loadHeroData(),200),setTimeout(this.getItemData(),200),this.setState({count:this.state.count+1}))},componentDidMount:function(){setInterval(this.checkTrigger,2e3),setInterval(this.loadHeroesData,this.props.pollInterval),setInterval(this.loadHeroData,this.props.pollInterval),setInterval(this.getItemData,this.props.pollInterval),setInterval(this.collectStats,2e3),parseInt(localStorage.getItem("paragonCdr"))||this.setState({paragonCdr:0}),parseInt(localStorage.getItem("paragonResRed"))||this.setState({paragonResRed:0}),parseInt(localStorage.getItem("paragonAtkSpd"))||this.setState({paragonAtkSpd:0}),parseInt(localStorage.getItem("paragonCritChance"))||this.setState({paragonCritChance:0}),parseInt(localStorage.getItem("paragonCritDmg"))||this.setState({paragonCritDmg:0}),parseInt(localStorage.getItem("paragonAreaDmg"))||this.setState({paragonAreaDmg:0}),parseInt(localStorage.getItem("paragonResource"))||this.setState({paragonResource:0}),parseInt(localStorage.getItem("paragonResistAll"))||this.setState({paragonResistAll:0}),parseInt(localStorage.getItem("paragonArmor"))||this.setState({paragonArmor:0}),parseInt(localStorage.getItem("paragonMaxHealth"))||this.setState({paragonMaxHealth:0})},handleChange:function(a){var b=a.target.value;this.setState({battleTag:b}),localStorage.setItem("battleTag",b),this.setState({count:0,items:{},skills:[],passives:[],stats:[],heroes:{},attributes:[],"class":{},name:{},level:{},paragon:{},time:0,isOpen:"",skillDescOpen:"",passiveDescOpen:""})},setSelect:function(){var a=this.refs.select.getDOMNode().value;this.setState({selected:a}),this.setState({trigger:!0}),this.setState({count:0}),this.setState(this.state.heroes.code?{invalid:!0}:{invalid:!1})},handleBonusStatsClick:function(){return this.setState("open"===this.state.isOpen?{isOpen:""}:{isOpen:"open"})},handleSkillDescClick:function(){return this.setState("open"===this.state.skillDescOpen?{skillDescOpen:""}:{skillDescOpen:"open"})},handlePassiveDescClick:function(){return this.setState("open"===this.state.passiveDescOpen?{passiveDescOpen:""}:{passiveDescOpen:"open"})},handleItemClick:function(a){!$(a.target).hasClass("open")&&$(a.target).hasClass("toggle")?($(a.target).addClass("open"),$(a.target).parent().children().hasClass("open")&&$(a.target).parent().children().not($(a.target)).removeClass("open")):$(a.target).removeClass("open")},handleParagon:function(a){var b=$(a.target).parent(),c=$(a.target);b.hasClass("cdr")?c.hasClass("paragon-stat-increment")?this.state.paragonCdr<10&&this.setState({paragonCdr:Math.round(10*(this.state.paragonCdr+.2))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonCdr:10})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonCdr:0})):this.state.paragonCdr>0&&this.setState({paragonCdr:Math.round(10*(this.state.paragonCdr-.2))/10}):b.hasClass("resred")?c.hasClass("paragon-stat-increment")?this.state.paragonResRed<10&&this.setState({paragonResRed:Math.round(10*(this.state.paragonResRed+.2))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonResRed:10})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonResRed:0})):this.state.paragonResRed>0&&this.setState({paragonResRed:Math.round(10*(this.state.paragonResRed-.2))/10}):b.hasClass("atkspd")?c.hasClass("paragon-stat-increment")?this.state.paragonAtkSpd<10&&this.setState({paragonAtkSpd:Math.round(10*(this.state.paragonAtkSpd+.2))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonAtkSpd:10})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonAtkSpd:0})):this.state.paragonAtkSpd>0&&this.setState({paragonAtkSpd:Math.round(10*(this.state.paragonAtkSpd-.2))/10}):b.hasClass("critdmg")?c.hasClass("paragon-stat-increment")?this.state.paragonCritDmg<50&&this.setState({paragonCritDmg:Math.round(10*(this.state.paragonCritDmg+1))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonCritDmg:50})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonCritDmg:0})):this.state.paragonCritDmg>0&&this.setState({paragonCritDmg:Math.round(10*(this.state.paragonCritDmg-1))/10}):b.hasClass("critchance")?c.hasClass("paragon-stat-increment")?this.state.paragonCritChance<5&&this.setState({paragonCritChance:Math.round(10*(this.state.paragonCritChance+.1))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonCritChance:5})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonCritChance:0})):this.state.paragonCritChance>0&&this.setState({paragonCritChance:Math.round(10*(this.state.paragonCritChance-.1))/10}):b.hasClass("areadmg")?c.hasClass("paragon-stat-increment")?this.state.paragonAreaDmg<50&&this.setState({paragonAreaDmg:Math.round(10*(this.state.paragonAreaDmg+1))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonAreaDmg:50})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonAreaDmg:0})):this.state.paragonAreaDmg>0&&this.setState({paragonAreaDmg:Math.round(10*(this.state.paragonAreaDmg-1))/10}):b.hasClass("resource")?c.hasClass("paragon-stat-increment")?this.state.paragonResource<25&&this.setState({paragonResource:Math.round(10*(this.state.paragonResource+.5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonResource:25})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonResource:0})):this.state.paragonResource>0&&this.setState({paragonResource:Math.round(10*(this.state.paragonResource-.5))/10}):b.hasClass("resistall")?c.hasClass("paragon-stat-increment")?this.state.paragonResistAll<250&&this.setState({paragonResistAll:Math.round(10*(this.state.paragonResistAll+5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonResistAll:250})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonResistAll:0})):this.state.paragonResistAll>0&&this.setState({paragonResistAll:Math.round(10*(this.state.paragonResistAll-5))/10}):b.hasClass("armor")?c.hasClass("paragon-stat-increment")?this.state.paragonArmor<25&&this.setState({paragonArmor:Math.round(10*(this.state.paragonArmor+.5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonArmor:25})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonArmor:0})):this.state.paragonArmor>0&&this.setState({paragonArmor:Math.round(10*(this.state.paragonArmor-.5))/10}):b.hasClass("maxlife")&&(c.hasClass("paragon-stat-increment")?this.state.paragonMaxHealth<25&&this.setState({paragonMaxHealth:Math.round(10*(this.state.paragonMaxHealth+.5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonMaxHealth:25})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonMaxHealth:0})):this.state.paragonMaxHealth>0&&this.setState({paragonMaxHealth:Math.round(10*(this.state.paragonMaxHealth-.5))/10}))},getItemData:function(){var a,b;if(this.setState({helmItem:{},amuletItem:{},chestItem:{},bootsItem:{},glovesItem:{},shouldersItem:{},legsItem:{},bracersItem:{},mainItem:{},offItem:{},beltItem:{},ringItemLeft:{},ringItemRight:{}}),this.state.items){var c=[this.state.items.neck,this.state.items.head,this.state.items.torso,this.state.items.feet,this.state.items.hands,this.state.items.shoulders,this.state.items.legs,this.state.items.bracers,this.state.items.mainHand,this.state.items.waist],d=[[this.state.items.leftFinger,"left"],[this.state.items.rightFinger,"right"],[this.state.items.offHand,null]];for(a=0;a<c.length;a++)c[a]&&(b=c[a].tooltipParams,this.loadItemData(b));for(a=0;a<d.length;a++)d[a][0]&&(b=d[a][0].tooltipParams,"left"===d[a][1]?this.loadItemDataWithProps(b,!0):this.loadItemDataWithProps(b,!1))}},objToString:function(a){var b="";for(var c in a)a.hasOwnProperty(c)&&(b+=c+" x"+a[c]+"</br>");return b},collectStats:function(){var a,b,c,d,e,f,g=["Damage_Dealt_Percent_Bonus#Fire","Damage_Dealt_Percent_Bonus#Physical","Damage_Dealt_Percent_Bonus#Cold","Damage_Dealt_Percent_Bonus#Poison","Damage_Dealt_Percent_Bonus#Lightning","Power_Cooldown_Reduction_Percent_All","Resource_Cost_Reduction_Percent_All","Damage_Percent_Bonus_Vs_Elites","Damage_Percent_Reduction_From_Elites","Splash_Damage_Effect_Percent","Gold_PickUp_Radius","Damage_Percent_Reduction_From_Melee","Damage_Percent_Reduction_From_Ranged","Hitpoints_Max_Percent_Bonus_Item"],h=[],i=1,j=1,k=1,l=1,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;if(this.state.items){var w=[this.state.helmItem,this.state.amuletItem,this.state.chestItem,this.state.bootsItem,this.state.glovesItem,this.state.shouldersItem,this.state.legsItem,this.state.bracersItem,this.state.mainItem,this.state.offItem,this.state.beltItem,this.state.ringItemLeft,this.state.ringItemRight];for(a=0;a<w.length;a++)if(w[a]&&w[a].attributesRaw)for(b=0;b<g.length;b++)if(w[a].attributesRaw[g[b]]&&w[a].attributesRaw[g[b]].min)switch(h[b]=Math.round(1e3*w[a].attributesRaw[g[b]].min)/1e3,g[b]){case"Damage_Dealt_Percent_Bonus#Fire":p+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Cold":q+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Lightning":r+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Physical":s+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Poison":t+=100*h[b];break;case"Power_Cooldown_Reduction_Percent_All":i*=1-h[b];break;case"Resource_Cost_Reduction_Percent_All":j*=1-h[b];break;case"Damage_Percent_Bonus_Vs_Elites":m+=100*h[b];break;case"Damage_Percent_Reduction_From_Elites":n+=100*h[b];break;case"Splash_Damage_Effect_Percent":o+=100*h[b];break;case"Gold_PickUp_Radius":u+=h[b];break;case"Damage_Percent_Reduction_From_Melee":k*=1-h[b];break;case"Damage_Percent_Reduction_From_Ranged":l*=1-h[b];break;case"Hitpoints_Max_Percent_Bonus_Item":v+=100*h[b];break;default:console.log("default")}if(this.state["class"]&&this.state.skills&&this.state.skills.length){var x=[];for(d=0;d<this.state.skills.length;d++)if(this.state.skills[d].skill)switch(this.state["class"]){case"demon-hunter":x.push("Power_Damage_Percent_Bonus#DemonHunter_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"witch-doctor":x.push("Power_Damage_Percent_Bonus#Witchdoctor_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"barbarian":x.push("Power_Damage_Percent_Bonus#Barbarian_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"crusader":x.push("Power_Damage_Percent_Bonus#Crusader_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"monk":x.push("Power_Damage_Percent_Bonus#Monk_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"wizard":x.push("Power_Damage_Percent_Bonus#Wizard_"+this.state.skills[d].skill.name.replace(/ /g,""))}var y=[];for(a=0;a<w.length;a++)if(w[a]&&w[a].attributesRaw)for(b=0;b<x.length;b++)w[a].attributesRaw[x[b]]&&w[a].attributesRaw[x[b]].min&&(h[b]=Math.round(1e3*w[a].attributesRaw[x[b]].min)/1e3,Object.getOwnPropertyNames(w[a].attributesRaw[x[b]]===x[b])&&(y.push(this.state.skills[b].skill.name+" "+Math.round(1e4*w[a].attributesRaw[x[b]].min)/100+"%"),f=y.reduce(function(a,b){return b in a?a[b]++:a[b]=1,a},{})))}var z=[];for(a=0;a<w.length;a++)if(w[a]&&w[a].set&&w[a].set.ranks){if(z.indexOf(w[a].set.name)>-1)continue;for(z.push(w[a].set.name),c=0;c<w[a].set.ranks.length;c++)for(b=0;b<g.length;b++)if(w[a].set.ranks[c].attributesRaw[g[b]]&&w[a].set.ranks[c].attributesRaw[g[b]].min)switch(h[b]=Math.round(1e3*w[a].set.ranks[c].attributesRaw[g[b]].min)/1e3,g[b]){case"Damage_Dealt_Percent_Bonus#Fire":p+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Cold":q+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Lightning":r+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Physical":s+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Poison":t+=100*h[b];break;case"Power_Cooldown_Reduction_Percent_All":i*=1-h[b];break;case"Resource_Cost_Reduction_Percent_All":j*=1-h[b];break;case"Damage_Percent_Bonus_Vs_Elites":m+=100*h[b];break;case"Damage_Percent_Reduction_From_Elites":n+=100*h[b];break;case"Splash_Damage_Effect_Percent":o+=100*h[b];break;case"Gold_PickUp_Radius":u+=h[b];break;case"Damage_Percent_Reduction_From_Melee":k*=1-h[b];break;case"Damage_Percent_Reduction_From_Ranged":l*=1-h[b];break;case"Hitpoints_Max_Percent_Bonus_Item":v+=100*h[b]}}this.state.helmItem&&this.state.helmItem.gems&&this.state.helmItem.gems[0]&&(this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All&&(i*=1-this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All.min),this.state.helmItem.gems[0].attributesRaw.Hitpoints_Max_Percent_Bonus_Item&&(v+=100*this.state.helmItem.gems[0].Hitpoints_Max_Percent_Bonus_Item.min));var A,B=[p,t,r,s,q],C=B.reduce(function(a,b){return a>=b?a:b},-(1/0));switch(C){case p:A="Fire Damage Increase: "+Math.round(100*C)/100+"%";break;case q:A="Cold Damage Increase: "+Math.round(100*C)/100+"%";break;case s:A="Physical Damage Increase: "+Math.round(100*C)/100+"%";break;case r:A="Lightning Damage Increase: "+Math.round(100*C)/100+"%";break;case t:A="Poison Damage Increase: "+Math.round(100*C)/100+"%"}i*=1-this.state.paragonCdr/100,j*=1-this.state.paragonResRed/100,v+=this.state.paragonMaxHealth,e=this.objToString(f),this.setState(0!==C?{maxEleDmg:A}:{maxEleDmg:""}),this.setState({cdrRed:i}),this.setState({resRed:j}),this.setState({eliteDmg:m}),this.setState({eliteDmgRed:n}),this.setState({areaDmg:o}),this.setState({goldPickup:u}),this.setState({dmgRedMelee:k}),this.setState({dmgRedRanged:l}),this.setState({maxHealth:v}),this.setState({skillDmg:e})}},render:function(){var a,b,c,d,e,f,g=this.state.skills,h=[],i=[],j=this.state.passives,k=[],l=[],m=this.state.stats,n=[],o=this.state.name,p=[],q=this.state.heroes,r=this.state.items,s=this.state["class"],t=this.state.level,u=this.state.paragon,v=this.state.amuletItem,w=this.state.shouldersItem,x=[],y=this.state.helmItem,z=[],A=this.state.chestItem,B=[],C=this.state.glovesItem,D=[],E=this.state.bootsItem,F=[],G=this.state.bracersItem,H=[],I=this.state.legsItem,J=[],K=this.state.mainItem,L=[],M=this.state.offItem,N=[],O=this.state.beltItem,P=[],Q=this.state.amuletItem,R=[],S=this.state.ringItemLeft,T=[],U=[],V=this.state.ringItemRight,W=[],X=[],Y=[],Z=this.state.items,$=[],_=this.state.skillIconBase,aa=this.state.itemIconBase,ba=this.state.toggleItem,ca=this.state.time,da=[],ea=[],fa=this.state.cdrRed,ga=this.state.resRed,ha=this.state.eliteDmg,ia=this.state.eliteDmgRed,ja=this.state.areaDmg,ka=this.state.goldPickup,la=this.state.dmgRedMelee,ma=this.state.dmgRedRanged,na=this.state.maxEleDmg,oa=this.state.maxHealth,pa=this.state.skillDmg,qa=[],ra=this.state.paragonCdr,sa=this.state.paragonAtkSpd,ta=this.state.paragonResRed,ua=this.state.paragonCritDmg,va=this.state.paragonCritChance,wa=this.state.paragonAreaDmg,xa=this.state.paragonResource,ya=this.state.paragonResistAll,za=this.state.paragonArmor,Aa=this.state.paragonMaxHealth,Ba=["Damage_Weapon_Min#Arcane","Damage_Weapon_Min#Fire","Damage_Weapon_Min#Lightning","Damage_Weapon_Min#Cold"],Ca=["Damage_Weapon_Delta#Arcane","Damage_Weapon_Delta#Fire","Damage_Weapon_Delta#Lightning","Damage_Weapon_Delta#Cold"];switch(s){case"demon-hunter":Y={backgroundImage:'url("../../assets/images/dh.png")'};break;case"witch-doctor":Y={backgroundImage:'url("../../assets/images/wd.png")'};break;case"barbarian":Y={backgroundImage:'url("../../assets/images/barbarian.png")'};break;case"crusader":Y={backgroundImage:'url("../../assets/images/crusader.png")'};break;case"monk":Y={backgroundImage:'url("../../assets/images/monk.png")'};break;case"wizard":Y={backgroundImage:'url("../../assets/images/wiz.jpg")'};break;default:Y={backgroundImage:"none"}}if(q.heroes?(p.push(React.DOM.option({key:q.heroes.key,value:"",style:{display:"none"}},"click to select hero")),q.heroes.forEach(function(a){p.push(React.DOM.option({key:q.heroes.key,value:a.id},"["+a["class"]+"] "+a.name+" (id: "+a.id+")"))})):p.push(q.code?React.DOM.option({key:q.code.key,value:"",style:{display:"none"}},"invalid battleTag"):null===this.state.battleTag?React.DOM.option({value:"",style:{display:"none"}},"enter your battleTag in the field below"):React.DOM.option({value:"",style:{display:"none"}},"loading herolist...")),o&&s&&t&&(X.push(React.DOM.div({key:o.key},"Name: ",o)),X.push(React.DOM.div({key:s.key},"Class: ",s.toString().replace(/-/g,"").charAt(0).toUpperCase()+s.toString().replace(/-/g,"").slice(1).toLowerCase())),X.push(React.DOM.div({key:t.key},"Level: ",t)),u&&X.push(React.DOM.div({key:u.key},"Paragon: ",u))),ca&&1e3*ca!==0){var Da=new Date(1e3*ca),Ea=Da.toLocaleDateString()+" - "+Da.toLocaleTimeString();X.push(React.DOM.div({key:ca.key,className:"last-updated"},"last-updated on: "+Ea))}if(g!==[]&&g.forEach(function(b){var c;if(b.rune){switch(a=_.concat(b.skill.icon),b.rune.type){case"a":c={backgroundPosition:"0 0"};break;case"b":c={backgroundPosition:"0 25%"};break;case"c":c={backgroundPosition:"0 49%"};break;case"d":c={backgroundPosition:"0 73%"};break;case"e":c={backgroundPosition:"0 97%"}}h.push(React.DOM.div({key:g.key,className:"hasIcon"},b.skill.name," with ",b.rune.name,React.DOM.div({key:g.key,className:"icon-front",style:{backgroundImage:"url("+a+".png)"}}),React.DOM.div({key:g.key,className:"icon-back",style:c}))),i.push(React.DOM.div({key:g.key,className:"description"},React.DOM.div({key:g.key,className:"desc-icon",style:{backgroundImage:"url("+a+".png)"}}),b.skill.name+" with "+b.rune.name,React.DOM.p({dangerouslySetInnerHTML:{__html:b.skill.description.replace(/\n/g,"<br/>")},key:g.key,className:"skill-desc"}),React.DOM.p({dangerouslySetInnerHTML:{__html:b.rune.description.replace(/\n/g,"<br/>")},key:g.key,className:"rune-desc"})))}else b.skill&&(a=_.concat(b.skill.icon),h.push(React.DOM.div({key:g.key,className:"hasIcon"},b.skill.name,React.DOM.div({key:g.key,className:"icon-front no-rune",style:{backgroundImage:"url("+a+".png)"}}))),i.push(React.DOM.div({key:g.key,className:"description"},React.DOM.div({key:g.key,className:"desc-icon",style:{backgroundImage:"url("+a+".png)"}}),b.skill.name,React.DOM.p({dangerouslySetInnerHTML:{__html:b.skill.description.replace(/\n/g,"<br/>")},key:g.key,className:"skill-desc"}))))}),j!==[]&&j.forEach(function(b){b.skill&&(a=_.concat(b.skill.icon),k.push(React.DOM.div({key:j.key,className:"hasIcon"},b.skill.name,React.DOM.div({key:j.key,className:"icon",style:{backgroundImage:"url("+a+".png)"}}))),l.push(React.DOM.div({key:j.key,className:"description"},React.DOM.div({key:j.key,className:"desc-icon",style:{backgroundImage:"url("+a+".png)"}}),b.skill.name,React.DOM.p({dangerouslySetInnerHTML:{__html:b.skill.description.replace(/\n/g,"<br/>")},key:j.key,className:"passive-desc"}))))}),Z.head&&y){switch(a=aa.concat(Z.head.icon,".png"),r.head.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(y.attributesRaw&&(y.attributesRaw.Ancient_Rank&&1===y.attributesRaw.Ancient_Rank.min?(c="ancient",z.push(React.DOM.li({key:y.key,className:b+" name"},c+" "+r.head.name))):(c="",z.push(React.DOM.li({key:y.key,className:b+" name"},r.head.name)))),y.attributes&&(y.attributes.primary&&y.attributes.primary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"primary"},a.text))}),y.attributes.secondary&&y.attributes.secondary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"secondary"},a.text))}),y.attributes.passive&&y.attributes.passive.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"passive"},a.text))})),y.set&&y.set.ranks)for(e=0;e<y.set.ranks.length;e++)for(f=1;6>=f;f++)y.set.ranks[e].required===f&&y.set.ranks[e].attributes.primary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"set-bonus-"+f},a.text))}),y.set.ranks[e].required===f&&y.set.ranks[e].attributes.secondary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"set-bonus-"+f},a.text))}),y.set.ranks[e].required===f&&y.set.ranks[e].attributes.passive.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"set-bonus-"+f},a.text))});y.attributesRaw&&y.attributesRaw.Sockets&&y.gems[0]&&(d=aa.concat(y.gems[0].item.icon,".png"),z.push(React.DOM.li({key:y.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),y.gems[0].attributes.primary&&y.gems[0].attributes.primary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"gem-passive"},a.text))}),y.gems[0].attributes.secondary&&y.gems[0].attributes.secondary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"gem-passive"},a.text))})),$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" head",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:y.key,className:"desc"},React.DOM.ul({key:y.key,className:"stats"},z))))}if(Z.torso&&A){switch(a=aa.concat(Z.torso.icon,".png"),r.torso.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(A.attributesRaw&&(A.attributesRaw.Ancient_Rank&&1===A.attributesRaw.Ancient_Rank.min?(c="ancient",B.push(React.DOM.li({key:A.key,className:b+" name"},c+" "+r.torso.name))):(c="",B.push(React.DOM.li({key:A.key,className:b+" name"},r.torso.name)))),A.attributes&&(A.attributes.primary&&A.attributes.primary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"primary"},a.text))}),A.attributes.secondary&&A.attributes.secondary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"secondary"},a.text))}),A.attributes.passive&&A.attributes.passive.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"passive"},a.text))})),A.set&&A.set.ranks)for(e=0;e<A.set.ranks.length;e++)for(f=1;6>=f;f++)A.set.ranks[e].required===f&&A.set.ranks[e].attributes.primary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"set-bonus-"+f},a.text))}),A.set.ranks[e].required===f&&A.set.ranks[e].attributes.secondary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"set-bonus-"+f},a.text))}),A.set.ranks[e].required===f&&A.set.ranks[e].attributes.passive.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"set-bonus-"+f},a.text))});A.attributesRaw&&A.attributesRaw.Sockets&&A.gems[0]?(d=aa.concat(A.gems[0].item.icon,".png"),A.gems[0].attributes.primary&&A.gems[0].attributes.primary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),B.push(React.DOM.li({key:A.key,className:"gem-passive"},a.text)),B.push(React.DOM.li({key:A.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),B.push(React.DOM.li({key:A.key,className:"gem-passive"},a.text)),B.push(React.DOM.li({key:A.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),B.push(React.DOM.li({key:A.key,className:"gem-passive"},a.text))})):A.attributesRaw&&A.attributesRaw.Sockets&&(B.push(React.DOM.li({key:A.key,className:"socket"})),B.push(React.DOM.li({key:A.key,className:"socket"})),B.push(React.DOM.li({key:A.key,className:"socket"}))),$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" torso",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:A.key,className:"desc"},React.DOM.ul({key:A.key,className:"stats"},B))))}if(Z.hands&&C){switch(a=aa.concat(Z.hands.icon,".png"),r.hands.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(C.attributesRaw&&(C.attributesRaw.Ancient_Rank&&1===C.attributesRaw.Ancient_Rank.min?(c="ancient",D.push(React.DOM.li({key:C.key,className:b+" name"},c+" "+r.hands.name))):(c="",D.push(React.DOM.li({key:C.key,className:b+" name"},r.hands.name)))),C.attributes&&(C.attributes.primary&&C.attributes.primary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"primary"},a.text))}),C.attributes.secondary&&C.attributes.secondary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"secondary"},a.text))}),C.attributes.passive&&C.attributes.passive.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"passive"},a.text))})),C.set&&C.set.ranks)for(e=0;e<C.set.ranks.length;e++)for(f=1;6>=f;f++)C.set.ranks[e].required===f&&C.set.ranks[e].attributes.primary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"set-bonus-"+f},a.text))}),C.set.ranks[e].required===f&&C.set.ranks[e].attributes.secondary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"set-bonus-"+f},a.text))}),C.set.ranks[e].required===f&&C.set.ranks[e].attributes.passive.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"set-bonus-"+f},a.text))});$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" hands",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:C.key,className:"desc"},React.DOM.ul({key:C.key,className:"stats"},D))))}if(Z.feet&&E){switch(a=aa.concat(Z.feet.icon,".png"),r.feet.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(E.attributesRaw&&(E.attributesRaw.Ancient_Rank&&1===E.attributesRaw.Ancient_Rank.min?(c="ancient",F.push(React.DOM.li({key:E.key,className:b+" name"},c+" "+r.feet.name))):(c="",F.push(React.DOM.li({key:E.key,className:b+" name"},r.feet.name)))),E.attributes&&(E.attributes.primary&&E.attributes.primary.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"primary"},a.text))}),E.attributes.secondary&&E.attributes.secondary.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"secondary"},a.text))}),E.attributes.passive&&E.attributes.passive.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"passive"},a.text))})),E.set&&E.set.ranks)for(e=0;e<E.set.ranks.length;e++)for(f=1;6>=f;f++)E.set.ranks[e].required===f&&E.set.ranks[e].attributes.primary.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"set-bonus-"+f},a.text))}),E.set.ranks[e].required===f&&E.set.ranks[e].attributes.secondary.forEach(function(a){
F.push(React.DOM.li({key:E.key,className:"set-bonus-"+f},a.text))}),E.set.ranks[e].required===f&&E.set.ranks[e].attributes.passive.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"set-bonus-"+f},a.text))});$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" feet",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:E.key,className:"desc"},React.DOM.ul({key:E.key,className:"stats"},F))))}if(Z.shoulders&&w){switch(a=aa.concat(Z.shoulders.icon,".png"),r.shoulders.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(w.attributesRaw&&(w.attributesRaw.Ancient_Rank&&1===w.attributesRaw.Ancient_Rank.min?(c="ancient",x.push(React.DOM.li({key:w.key,className:b+" name"},c+" "+r.shoulders.name))):(c="",x.push(React.DOM.li({key:w.key,className:b+" name"},r.shoulders.name)))),w.attributes&&(w.attributes.primary&&w.attributes.primary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"primary"},a.text))}),w.attributes.secondary&&w.attributes.secondary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"secondary"},a.text))}),w.attributes.passive&&w.attributes.passive.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"passive"},a.text))})),w.set&&w.set.ranks)for(e=0;e<w.set.ranks.length;e++)for(f=1;6>=f;f++)w.set.ranks[e].required===f&&w.set.ranks[e].attributes.primary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"set-bonus-"+f},a.text))}),w.set.ranks[e].required===f&&w.set.ranks[e].attributes.secondary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"set-bonus-"+f},a.text))}),w.set.ranks[e].required===f&&w.set.ranks[e].attributes.passive.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"set-bonus-"+f},a.text))});$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" shoulders",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:w.key,className:"desc"},React.DOM.ul({key:w.key,className:"stats"},x))))}if(Z.legs&&I){switch(a=aa.concat(Z.legs.icon,".png"),r.legs.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(I.attributesRaw&&(I.attributesRaw.Ancient_Rank&&1===I.attributesRaw.Ancient_Rank.min?(c="ancient",J.push(React.DOM.li({key:I.key,className:b+" name"},c+" "+r.legs.name))):(c="",J.push(React.DOM.li({key:I.key,className:b+" name"},r.legs.name)))),I.attributes&&(I.attributes.primary&&I.attributes.primary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"primary"},a.text))}),I.attributes.secondary&&I.attributes.secondary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"secondary"},a.text))}),I.attributes.passive&&I.attributes.passive.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"passive"},a.text))})),I.set&&I.set.ranks)for(e=0;e<I.set.ranks.length;e++)for(f=1;6>=f;f++)I.set.ranks[e].required===f&&I.set.ranks[e].attributes.primary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"set-bonus-"+f},a.text))}),I.set.ranks[e].required===f&&I.set.ranks[e].attributes.secondary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"set-bonus-"+f},a.text))}),I.set.ranks[e].required===f&&I.set.ranks[e].attributes.passive.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"set-bonus-"+f},a.text))});I.attributesRaw&&I.attributesRaw.Sockets&&I.gems[0]?(d=aa.concat(I.gems[0].item.icon,".png"),I.gems[0].attributes.primary&&I.gems[0].attributes.primary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),J.push(React.DOM.li({key:I.key,className:"gem-passive"},a.text)),J.push(React.DOM.li({key:I.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),J.push(React.DOM.li({key:I.key,className:"gem-passive"},a.text))})):I.attributesRaw&&I.attributesRaw.Sockets&&(J.push(React.DOM.li({key:I.key,className:"socket"})),J.push(React.DOM.li({key:I.key,className:"socket"}))),$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" legs",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:I.key,className:"desc"},React.DOM.ul({key:I.key,className:"stats"},J))))}if(Z.bracers&&G){switch(a=aa.concat(Z.bracers.icon,".png"),r.bracers.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(G.attributesRaw&&(G.attributesRaw.Ancient_Rank&&1===G.attributesRaw.Ancient_Rank.min?(c="ancient",H.push(React.DOM.li({key:G.key,className:b+" name"},c+" "+r.bracers.name))):(c="",H.push(React.DOM.li({key:G.key,className:b+" name"},r.bracers.name)))),G.attributes&&(G.attributes.primary&&G.attributes.primary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"primary"},a.text))}),G.attributes.secondary&&G.attributes.secondary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"secondary"},a.text))}),G.attributes.passive&&G.attributes.passive.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"passive"},a.text))})),G.set&&G.set.ranks)for(e=0;e<G.set.ranks.length;e++)for(f=1;6>=f;f++)G.set.ranks[e].required===f&&G.set.ranks[e].attributes.primary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"set-bonus-"+f},a.text))}),G.set.ranks[e].required===f&&G.set.ranks[e].attributes.secondary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"set-bonus-"+f},a.text))}),G.set.ranks[e].required===f&&G.set.ranks[e].attributes.passive.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"set-bonus-"+f},a.text))});$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" bracers",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:G.key,className:"desc"},React.DOM.ul({key:G.key,className:"stats"},H))))}if(Z.mainHand&&K){switch(a=aa.concat(Z.mainHand.icon,".png"),r.mainHand.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(K.attributesRaw&&K.type){var Fa="";Fa=K.type.twoHanded===!0?"(2h)":"(1h)",K.attributesRaw.Ancient_Rank&&1===K.attributesRaw.Ancient_Rank.min?(c="ancient",L.push(React.DOM.li({key:K.key,className:b+" name"},c+" "+r.mainHand.name+" "+Fa))):(c="",L.push(React.DOM.li({key:K.key,className:b+" name"},r.mainHand.name+" "+Fa)))}if(K.dps&&L.push(React.DOM.li({key:K.key,className:"dps"},K.dps.max.toString().substring(0,7)+" DPS")),K.minDamage&&K.maxDamage&&K.attributesRaw)for(e=0;e<Ba.length;e++)K.attributesRaw[Ba[e]]&&L.push(K.attributesRaw.Damage_Weapon_Percent_All?React.DOM.li({key:K.key,className:"raw-damage"},Math.round(K.minDamage.max+K.attributesRaw[Ba[e]].max+K.attributesRaw[Ba[e]].max*K.attributesRaw.Damage_Weapon_Percent_All.max)+" - "+Math.round(K.maxDamage.max+K.attributesRaw[Ba[e]].max+K.attributesRaw[Ca[e]].max+(K.attributesRaw[Ba[e]].max+K.attributesRaw[Ca[e]].max)*K.attributesRaw.Damage_Weapon_Percent_All.max)+" Damage"):React.DOM.li({key:K.key,className:"raw-damage"},Math.round(K.minDamage.max+K.attributesRaw[Ba[e]].max)+" - "+Math.round(K.maxDamage.max+K.attributesRaw[Ba[e]].max+K.attributesRaw[Ca[e]].max)+" Damage"));if(K.attributes&&(K.attributes.primary&&K.attributes.primary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"primary"},a.text))}),K.attributes.secondary&&K.attributes.secondary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"secondary"},a.text))}),K.attributes.passive&&K.attributes.passive.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"passive"},a.text))})),K.set&&K.set.ranks)for(e=0;e<K.set.ranks.length;e++)for(f=1;6>=f;f++)K.set.ranks[e].required===f&&K.set.ranks[e].attributes.primary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"set-bonus-"+f},a.text))}),K.set.ranks[e].required===f&&K.set.ranks[e].attributes.secondary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"set-bonus-"+f},a.text))}),K.set.ranks[e].required===f&&K.set.ranks[e].attributes.passive.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"set-bonus-"+f},a.text))});K.attributesRaw&&K.attributesRaw.Sockets&&K.gems[0]?(K.gems[0].attributesRaw.Jewel_Rank?K.gems[0].attributesRaw.Jewel_Rank&&(d=aa.concat(K.gems[0].item.icon,".png"),L.push(React.DOM.li({key:K.key,className:"socket",style:{backgroundImage:"url("+d+")"}},React.DOM.span({key:K.key,className:"gem-level"},K.gems[0].attributesRaw.Jewel_Rank.min)))):(d=aa.concat(K.gems[0].item.icon,".png"),L.push(React.DOM.li({key:K.key,className:"socket",style:{backgroundImage:"url("+d+")"}}))),K.gems[0].attributes.primary&&K.gems[0].attributes.primary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"gem-passive"},a.text))}),K.gems[0].attributes.passive&&K.gems[0].attributes.passive.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"gem-passive"},a.text))})):K.attributesRaw&&K.attributesRaw.Sockets&&L.push(React.DOM.li({key:K.key,className:"socket"})),$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" mainHand",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:K.key,className:"desc"},React.DOM.ul({key:K.key,className:"stats"},L))))}if(Z.offHand&&M){switch(a=aa.concat(Z.offHand.icon,".png"),r.offHand.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(M.attributesRaw&&M.type){var Ga="";Ga=M.type.twoHanded===!0?"(2h)":M.type.twoHanded!==!0&&M.dps?"(1h)":"",M.attributesRaw.Ancient_Rank&&1===M.attributesRaw.Ancient_Rank.min?(c="ancient",N.push(React.DOM.li({key:M.key,className:b+" name"},c+" "+r.offHand.name+" "+Ga))):(c="",N.push(React.DOM.li({key:M.key,className:b+" name"},r.offHand.name+" "+Ga)))}if(M.dps&&N.push(React.DOM.li({key:M.key,className:"dps"},M.dps.max.toString().substring(0,8)+" DPS")),M.minDamage&&M.maxDamage&&M.attributesRaw)for(e=0;e<Ba.length;e++)M.attributesRaw[Ba[e]]&&N.push(M.attributesRaw.Damage_Weapon_Percent_All?React.DOM.li({key:M.key,className:"raw-damage"},Math.round(M.minDamage.max+M.attributesRaw[Ba[e]].max+M.attributesRaw[Ba[e]].max*M.attributesRaw.Damage_Weapon_Percent_All.max)+" - "+Math.round(M.maxDamage.max+M.attributesRaw[Ba[e]].max+M.attributesRaw[Ca[e]].max+(M.attributesRaw[Ba[e]].max+M.attributesRaw[Ca[e]].max)*M.attributesRaw.Damage_Weapon_Percent_All.max)+" Damage"):React.DOM.li({key:M.key,className:"raw-damage"},Math.round(M.minDamage.max+M.attributesRaw[Ba[e]].max)+" - "+Math.round(M.maxDamage.max+M.attributesRaw[Ba[e]].max+M.attributesRaw[Ca[e]].max)+" Damage"));if(M.attributes&&(M.attributes.primary&&M.attributes.primary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"primary"},a.text))}),M.attributes.secondary&&M.attributes.secondary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"secondary"},a.text))}),M.attributes.passive&&M.attributes.passive.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"passive"},a.text))})),M.set&&M.set.ranks)for(e=0;e<M.set.ranks.length;e++)for(f=1;6>=f;f++)M.set.ranks[e].required===f&&M.set.ranks[e].attributes.primary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+f},a.text))}),M.set.ranks[e].required===f&&M.set.ranks[e].attributes.secondary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+f},a.text))}),M.set.ranks[e].required===f&&M.set.ranks[e].attributes.passive.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+f},a.text))});$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" offHand",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:M.key,className:"desc"},React.DOM.ul({key:M.key,className:"stats"},N))))}if(Z.waist&&O){switch(a=aa.concat(Z.waist.icon,".png"),r.waist.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(O.attributesRaw&&(O.attributesRaw.Ancient_Rank&&1===O.attributesRaw.Ancient_Rank.min?(c="ancient",P.push(React.DOM.li({key:O.key,className:b+" name"},c+" "+r.waist.name))):(c="",P.push(React.DOM.li({key:O.key,className:b+" name"},r.waist.name)))),O.attributes&&(O.attributes.primary&&O.attributes.primary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"primary"},a.text))}),O.attributes.secondary&&O.attributes.secondary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"secondary"},a.text))}),O.attributes.passive&&O.attributes.passive.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"passive"},a.text))})),O.set&&O.set.ranks)for(e=0;e<O.set.ranks.length;e++)for(f=1;6>=f;f++)O.set.ranks[e].required===f&&O.set.ranks[e].attributes.primary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+f},a.text))}),O.set.ranks[e].required===f&&O.set.ranks[e].attributes.secondary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+f},a.text))}),O.set.ranks[e].required===f&&O.set.ranks[e].attributes.passive.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+f},a.text))});$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" waist",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:O.key,className:"desc"},React.DOM.ul({key:O.key,className:"stats"},P))))}if(Z.rightFinger&&V){switch(a=aa.concat(Z.rightFinger.icon,".png"),r.rightFinger.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(V.attributesRaw&&(V.attributesRaw.Ancient_Rank&&1===V.attributesRaw.Ancient_Rank.min?(c="ancient",U.push(React.DOM.li({key:V.key,className:b+" name"},c+" "+r.rightFinger.name))):(c="",U.push(React.DOM.li({key:V.key,className:b+" name"},r.rightFinger.name)))),V.attributes&&(V.attributes.primary&&V.attributes.primary.forEach(function(a){U.push(React.DOM.li({key:V.key,className:"primary"},a.text))}),V.attributes.secondary&&V.attributes.secondary.forEach(function(a){U.push("orange"!==a.color?React.DOM.li({key:V.key,className:"secondary"},a.text):React.DOM.li({key:V.key,className:"passive"},a.text))}),V.attributes.passive&&V.attributes.passive.forEach(function(a){U.push(React.DOM.li({key:V.key,className:"passive"},a.text))})),V.set&&V.set.ranks)for(e=0;e<V.set.ranks.length;e++)for(f=1;6>=f;f++)V.set.ranks[e].required===f&&V.set.ranks[e].attributes.primary.forEach(function(a){U.push(React.DOM.li({key:V.key,className:"set-bonus-"+f},a.text))}),V.set.ranks[e].required===f&&V.set.ranks[e].attributes.secondary.forEach(function(a){U.push(React.DOM.li({key:V.key,className:"set-bonus-"+f},a.text))}),V.set.ranks[e].required===f&&V.set.ranks[e].attributes.passive.forEach(function(a){U.push(React.DOM.li({key:V.key,className:"set-bonus-"+f},a.text))});V.attributesRaw&&V.attributesRaw.Sockets&&V.gems[0]&&V.gems[0].attributesRaw.Jewel_Rank?(d=aa.concat(V.gems[0].item.icon,".png"),U.push(React.DOM.li({key:V.key,className:"socket",style:{backgroundImage:"url("+d+")"}},React.DOM.span({key:V.key,className:"gem-level"},V.gems[0].attributesRaw.Jewel_Rank.min))),V.gems[0].attributes.passive.forEach(function(a){U.push(React.DOM.li({key:V.key,className:"gem-passive unique"},a.text))})):V.attributesRaw&&V.attributesRaw.Sockets&&U.push(React.DOM.li({key:V.key,className:"socket"})),$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" rightFinger",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:V.key,className:"desc"},React.DOM.ul({key:V.key,className:"stats"},U))))}if(Z.leftFinger&&S){switch(a=aa.concat(Z.leftFinger.icon,".png"),r.leftFinger.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(S.attributesRaw&&(S.attributesRaw.Ancient_Rank&&1===S.attributesRaw.Ancient_Rank.min?(c="ancient",T.push(React.DOM.li({key:S.key,className:b+" name"},c+" "+r.leftFinger.name))):(c="",T.push(React.DOM.li({key:S.key,className:b+" name"},r.leftFinger.name)))),S.attributes&&(S.attributes.primary&&S.attributes.primary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"primary"},a.text))}),S.attributes.secondary&&S.attributes.secondary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"secondary"},a.text))}),S.attributes.passive?S.attributes.passive.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"passive"},a.text))}):c=""),S.set&&S.set.ranks)for(e=0;e<S.set.ranks.length;e++)for(f=1;6>=f;f++)S.set.ranks[e].required===f&&S.set.ranks[e].attributes.primary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"set-bonus-"+f},a.text))}),S.set.ranks[e].required===f&&S.set.ranks[e].attributes.secondary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"set-bonus-"+f},a.text))}),S.set.ranks[e].required===f&&S.set.ranks[e].attributes.passive.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"set-bonus-"+f},a.text))});S.attributesRaw&&S.attributesRaw.Sockets&&S.gems[0]&&S.gems[0].attributesRaw.Jewel_Rank?(d=aa.concat(S.gems[0].item.icon,".png"),T.push(React.DOM.li({key:S.key,className:"socket",style:{backgroundImage:"url("+d+")"}},React.DOM.span({key:S.key,className:"gem-level"},S.gems[0].attributesRaw.Jewel_Rank.min))),S.gems[0].attributes.passive.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"gem-passive unique"},a.text))})):S.attributesRaw&&S.attributesRaw.Sockets&&T.push(React.DOM.li({key:S.key,className:"socket"})),$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" leftFinger",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:S.key,className:"desc"},React.DOM.ul({key:S.key,className:"stats"},T))))}if(Z.neck&&Q){switch(a=aa.concat(Z.neck.icon,".png"),r.neck.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(Q.attributesRaw&&(Q.attributesRaw.Ancient_Rank&&1===Q.attributesRaw.Ancient_Rank.min?(c="ancient",R.push(React.DOM.li({key:Q.key,className:b+" name"},c+" "+r.neck.name))):(c="",R.push(React.DOM.li({key:Q.key,className:b+" name"},r.neck.name)))),Q.attributes&&(Q.attributes.primary&&Q.attributes.primary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"primary"},a.text))}),Q.attributes.secondary&&Q.attributes.secondary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"secondary"},a.text))}),Q.attributes.passive&&Q.attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"passive"},a.text))})),Q.set&&Q.set.ranks)for(e=0;e<Q.set.ranks.length;e++)for(f=1;6>=f;f++)Q.set.ranks[e].required===f&&Q.set.ranks[e].attributes.primary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+f},a.text))}),Q.set.ranks[e].required===f&&Q.set.ranks[e].attributes.secondary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+f},a.text))}),Q.set.ranks[e].required===f&&Q.set.ranks[e].attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+f},a.text))});Q.attributesRaw&&Q.attributesRaw.Sockets&&Q.gems[0]?(d=aa.concat(Q.gems[0].item.icon,".png"),R.push(React.DOM.li({key:Q.key,className:"socket",style:{backgroundImage:"url("+d+")"}},React.DOM.span({key:Q.key,className:"gem-level"},Q.gems[0].attributesRaw.Jewel_Rank.min))),Q.gems[0].attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"gem-passive unique"},a.text))})):Q.attributesRaw&&Q.attributesRaw.Sockets&&R.push(React.DOM.li({key:Q.key,className:"socket"})),$.push(React.DOM.div({key:Z.key,className:ba+" "+c+" "+b+" neck",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:Q.key,className:"desc"},React.DOM.ul({key:Q.key,className:"stats"},R))))}if(v.attributes&&r&&v.attributes.passive[0]&&r.neck&&"Hellfire Amulet"===r.neck.name){var Ha=v.attributes.passive[0].text.substring(9).replace(" passive.","").replace(/ /g,"").toLowerCase(),Ia=v.attributes.passive[0].text.substring(9).replace(" passive.","");switch(s){case"demon-hunter":a=_.concat("demonhunter_passive_",Ha);break;case"witch-doctor":a=_.concat("witchdoctor_passive_",Ha);break;case"barbarian":a=_.concat("barbarian_passive_",Ha);break;case"crusader":a=_.concat("crusader_passive_",Ha);break;case"monk":a=_.concat("monk_passive_",Ha);break;case"wizard":a=_.concat("wizard_passive_",Ha);break;default:console.log("new class?")}W.push(React.DOM.div({key:v.key,className:"hasIcon"},Ia," (HA)",React.DOM.div({key:v.key,className:"icon",style:{backgroundImage:"url("+a+".png)"}})))}return m.life&&m.damage&&m.toughness&&m.vitality&&(n.push(React.DOM.div({key:m.key},"Life: ",Math.round(m.life+m.life*Aa/100).toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),n.push(React.DOM.div({key:m.key},"Damage: ",Math.round(m.damage).toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),n.push(React.DOM.div({key:m.key},"Toughness: ",Math.round(m.toughness).toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),"demon-hunter"===s||"monk"===s?(n.push(React.DOM.div({key:m.key},"Dexterity: ",m.dexterity.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),m.strength>1e3&&n.push(React.DOM.div({key:m.key},"Strength: ",m.strength.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),m.intelligence>1e3&&n.push(React.DOM.div({key:m.key},"Intelligence: ",m.intelligence.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")))):"witch-doctor"===s||"wizard"===s?(n.push(React.DOM.div({key:m.key},"Intelligence: ",m.intelligence.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),m.strength>1e3&&n.push(React.DOM.div({key:m.key},"Strength: ",m.strength.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),m.dexterity>1e3&&n.push(React.DOM.div({key:m.key},"Dexterity: ",m.dexterity.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")))):("barbarian"===s||"crusader"===s)&&(n.push(React.DOM.div({key:m.key},"Strength: ",m.strength.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),m.dexterity>1e3&&n.push(React.DOM.div({key:m.key},"Dexterity: ",m.dexterity.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),m.intelligence>1e3&&n.push(React.DOM.div({key:m.key},"Intelligence: ",m.intelligence.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")))),n.push(React.DOM.div({key:m.key},"Vitality: ",m.vitality.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),n.push(React.DOM.div({key:m.key},"Armor: ",Math.round(m.armor+m.armor*za/100))),0!==m.damageIncrease&&n.push(React.DOM.div({key:m.key},"Damage Increase: ",m.damageIncrease)),0!==m.damageReduction&&n.push(React.DOM.div({key:m.key},"Damage Increase: ",m.damageReduction))),da&&m&&(m.critChance?da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Critical Hit Chance: "+Math.round(1e3*(100*m.critChance+va))/1e3+"%")):0!==va&&da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Critical Hit Chance: "+Math.round(1e3*va)/1e3+"%")),m.critDamage?da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Critical Damage increase: "+Math.round(1e3*(100*m.critDamage+ua-100))/1e3+"%")):0!==ua&&da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Critical Damage increase: "+Math.round(1e3*(ua-100))/1e3+"%")),1!==fa&&da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Cooldown Reduction: "+Math.round(100*(1-fa)*100)/100+"%")),1!==ga&&da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Resource Cost Reduction: "+Math.round(100*(1-ga)*100)/100+"%")),m.attackSpeed?da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Attacks per Second: "+Math.round(1e3*(m.attackSpeed+sa/100))/1e3)):0!==sa&&da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Attacks per Second: "+Math.round(sa/100*1e3)/1e3)),0!==ha&&da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Bonus Damage to Elites: "+ha+"%")),0!==ja?da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Area Bonus Damage: "+(ja+wa)+"%")):0!==wa&&da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Area Bonus Damage: "+wa+"%")),0!==na&&da.push(React.DOM.div({key:da.key,className:"bonusstat"},na)),m.primaryResource?da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Primary Resource: "+(m.primaryResource+xa))):0!==xa&&da.push(React.DOM.div({key:da.key,className:"bonusstat"},"Primary Resource: "+xa)),pa&&da.push(React.DOM.div({dangerouslySetInnerHTML:{__html:"Skill Damage: "+pa},key:da.key,className:"bonusstat"}))),ea&&m&&(m.secondaryResource&&ea.push(React.DOM.div({key:da.key,className:"bonusstat"},"Secondary Resource: "+m.secondaryResource)),m.physicalResist?ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Physical Resist: "+(m.physicalResist+ya))):0!==ya&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Physical Resist: "+ya)),m.fireResist?ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Fire Resist: "+(m.fireResist+ya))):0!==ya&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Fire Resist: "+ya)),m.coldResist?ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Cold Resist: "+(m.coldResist+ya))):0!==ya&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Cold Resist: "+ya)),m.lightningResist?ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Lighting Resist: "+(m.lightningResist+ya))):0!==ya&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Lighting Resist: "+ya)),m.poisonResist?ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Poison Resist: "+(m.poisonResist+ya))):0!==ya&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Poison Resist: "+ya)),0!==ka&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Gold Pick-up Radius: "+ka+" yards")),1!==la&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Melee Damage Reduction: "+Math.round(100*(1-la)*1e3)/1e3+"%")),1!==ma&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Ranged Damage Reduction: "+Math.round(100*(1-ma)*1e3)/1e3+"%")),0!==ia&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Damage Reduction from Elites: "+ia+"%")),0!==oa&&ea.push(React.DOM.div({key:ea.key,className:"bonusstat"},"Bonus Max Health: "+oa+"%"))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat cdr"},"cdr: "+Math.round(10*ra)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat resred"},"res: "+Math.round(10*ta)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat atkspd"},"atkspd: "+Math.round(10*sa)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat critdmg"},"critdmg: "+Math.round(ua)+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat critchance"},"critchance: "+Math.round(10*va)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat areadmg"},"areadmg: "+Math.round(wa)+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat resource"},"resource: "+Math.round(xa),React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat resistall"},"allres: "+Math.round(ya),React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat armor"},"armor: "+Math.round(10*za)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat maxlife"},"maxlife: "+Math.round(10*Aa)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),localStorage.setItem("paragonCdr",this.state.paragonCdr),localStorage.setItem("paragonResRed",this.state.paragonResRed),localStorage.setItem("paragonAtkSpd",this.state.paragonAtkSpd),localStorage.setItem("paragonCritDmg",this.state.paragonCritDmg),localStorage.setItem("paragonCritChance",this.state.paragonCritChance),localStorage.setItem("paragonAreaDmg",this.state.paragonAreaDmg),localStorage.setItem("paragonResource",this.state.paragonResource),localStorage.setItem("paragonResistAll",this.state.paragonResistAll),localStorage.setItem("paragonArmor",this.state.paragonArmor),localStorage.setItem("paragonMaxHealth",this.state.paragonMaxHealth),React.DOM.div({className:"d3-container"},React.DOM.div({className:"d3-item-wrapper"},$),React.DOM.div({className:"d3-char-bg",style:Y}),React.DOM.div({className:"d3-api-url"},"1 - Enter your BattleTag: ",React.DOM.input({value:this.state.battleTag,placeholder:"NAME#1234",onChange:this.handleChange})),React.DOM.div({className:"d3-char-wrapper"},"2 - Click below to select your hero: ",React.DOM.select({className:"d3-chars",ref:"select",value:this.state.selected,onChange:this.setSelect},p)),React.DOM.div({id:"panel-left"},"General",X,React.DOM.div({className:"d3-paragon-selector"},"Paragon Points: ",qa)),React.DOM.div({className:this.state.skillDescOpen,onClick:this.handleSkillDescClick,title:"click to open detailed description",id:"panel-bottom-left"},"Skills",h),React.DOM.div({className:this.state.skillDescOpen,onClick:this.handleSkillDescClick,title:"click to close",id:"panel-bottom-left-desc"},i),React.DOM.div({className:this.state.passiveDescOpen,onClick:this.handlePassiveDescClick,title:"click to open detailed description",id:"panel-bottom-right"},"Passives",k,W),React.DOM.div({
className:this.state.passiveDescOpen,onClick:this.handlePassiveDescClick,id:"panel-bottom-right-desc",title:"click to close"},l,"Note: your Hellfire Passive cannot be displayed here, courtesy of blizzard"),React.DOM.div({className:this.state.isOpen,id:"panel-right",title:"click to show/hide more stats",onClick:this.handleBonusStatsClick},"Stats (without amplification by skills)",n),React.DOM.div({id:"panel-right-additional"},"Offensive Stats",da,"Defensive Stats",ea))}});React.render(React.createElement(DataWrapper,{pollInterval:6e5}),document.getElementById("profile-data"));