var statPool=["Damage_Dealt_Percent_Bonus#Fire","Damage_Dealt_Percent_Bonus#Physical","Damage_Dealt_Percent_Bonus#Cold","Damage_Dealt_Percent_Bonus#Poison","Damage_Dealt_Percent_Bonus#Lightning","Power_Cooldown_Reduction_Percent_All","Resource_Cost_Reduction_Percent_All","Damage_Percent_Bonus_Vs_Elites","Damage_Percent_Reduction_From_Elites","Splash_Damage_Effect_Percent","Gold_PickUp_Radius","Damage_Percent_Reduction_From_Melee","Damage_Percent_Reduction_From_Ranged","Hitpoints_Max_Percent_Bonus_Item","Attacks_Per_Second_Percent"],DamagePercentAll="Damage_Weapon_Percent_All",DamageBonusMinPhysical="Damage_Weapon_Bonus_Min_X1#Physical",weaponElementsMin=["Damage_Weapon_Min#Arcane","Damage_Weapon_Min#Fire","Damage_Weapon_Min#Lightning","Damage_Weapon_Min#Cold","Damage_Weapon_Min#Poison","Damage_Weapon_Bonus_Min_X1#Physical"],weaponElementsDelta=["Damage_Weapon_Delta#Arcane","Damage_Weapon_Delta#Fire","Damage_Weapon_Delta#Lightning","Damage_Weapon_Delta#Cold","Damage_Weapon_Delta#Poison","Damage_Weapon_Bonus_Delta_X1#Physical"],hellfirePassiveDisplay,hellfirePassiveLink,setPool=[["Cain's Fate",0],["Bastions of Will",0],["Aughild's Victory",0],["Aughild's Authority",0],["Guardian's Contingency",0],["Immortal King's Call",0],["Natalya's Vengeance",0],["Tal Rasha's Elements",0],["Sage's Plight",0],["Sage's Journey",0],["Born's Defiance",0],["Born's Command",0],["Unhallowed Essence",0],["Aughild's Authority",0],["Cain's Destiny",0],["Thorns of the Invoker",0],["Might of the Earth",0],["Firebird's Finery",0],["Guardian's Jeopardy",0],["Helltooth Harness",0],["Armor of Akkhan",0],["Wrath of the Wastes",0],["Raiment of the Jade Harvester",0],["Embodiment of the Marauder",0],["Raiment of a Thousand Storms",0],["The Legacy of Raekor",0],["Roland's Legacy",0],["Delsere's Magnum Opus",0],["Monkey King's Garb",0],["Asheara's Uniform",0],["Demon's Skin",0],["Demon's Hide",0],["Asheara's Vestments",0],["Thorns of the Invoker",0],["Delsere's Magnum Opus",0],["Blackthorne's Battlegear",0],["Inna's Mantra",0],["Vyr's Amazing Arcana",0],["Krelm's Buff Bulwark",0],["The Shadow's Mantle",0],["Endless Walk",0],["Legacy of Nightmares",0],["Hallowed Defenders",0],["Hallowed Protectors",0],["Manajuma's Way",0],["Zunimassa's Haunt",0],["Chantodo's Resolve",0],["Istvan's Paired Blades",0],["Shenlong's Spirit",0],["Bul-Kathos's Oath",0],["Danetta's Hatred",0],["Captain Crimson's Trimmings",0]],passiveBuffPool=[["Cull the Weak","Damage",.2],["Single Out","Crit Chance",.25],["Archery","Damage",.08],["Archery","Crit Damage",.5],["Archery","Crit Chance",.05],["Custom Engineering","Sentries",2],["Ambush","Damage",.4],["Ballistics","Damage",1],["Sharpshooter","Crit Chance",.04],["Grenadier","Damage",.1],["Steady Aim","Damage",.2]],skillBuffPool=[["Bait the Trap","Crit Chance",.1],["Wolf Companion","Damage",.3]],debuffPool=[["Marked for Death","Damage",.2]],gemPool=[["Zei's Stone of Vengeance","Item_Power_Passive#ItemPassive_Unique_Gem_012_x1"],["Bane of the Trapped","Item_Power_Passive#ItemPassive_Unique_Gem_002_x1"],["Gogok of the Swiftness","Item_Power_Passive#ItemPassive_Unique_Gem_008U_x1"]],fetchHerolist,fetchHeroData,fetchHeroItems,updateHerolist,updateHeroData,updateHeroItems,helmCount,torsoCount,handsCount,feetCount,shouldersCount,legsCount,bracersCount,mainCount,offCount,beltCount,ringRCount,ringLCount,neckCount,i,k,m,constructedLink,itemQuality,isAncient,gemLink,start,end,DataWrapper=React.createClass({displayName:"DataWrapper",getInitialState:function(){var a;return a=localStorage.getItem("realm")?localStorage.getItem("realm"):"eu",{skills:[],passives:[],stats:[],heroes:{},items:{},attributes:[],"class":"",name:"",level:"",paragon:"",helmItem:{},amuletItem:{},shouldersItem:{},bracersItem:{},chestItem:{},ringItemLeft:{},ringItemRight:{},mainItem:{},offItem:{},legsItem:{},bootsItem:{},glovesItem:{},beltItem:{},additionalStats:[],atkSpd:0,eliteDmg:0,eliteDmgRed:0,areaDmg:0,goldPickup:0,dmgRedMelee:0,dmgRedRanged:0,maxEleDmg:0,maxHealth:0,toggleItem:"toggle",paragonCdr:parseInt(localStorage.getItem("paragonCdr")),paragonResRed:parseInt(localStorage.getItem("paragonResRed")),paragonAtkSpd:parseInt(localStorage.getItem("paragonAtkSpd")),paragonCritDmg:parseInt(localStorage.getItem("paragonCritDmg")),paragonCritChance:parseInt(localStorage.getItem("paragonCritChance")),paragonAreaDmg:parseInt(localStorage.getItem("paragonAreaDmg")),paragonResource:parseInt(localStorage.getItem("paragonResource")),paragonResistAll:parseInt(localStorage.getItem("paragonResistAll")),paragonArmor:parseInt(localStorage.getItem("paragonArmor")),paragonMaxHealth:parseInt(localStorage.getItem("paragonMaxHealth")),invalid:!1,setRing:!1,time:0,toggle:"more",skillDescOpen:"",passiveDescOpen:"",hellfire_clear:"",heroesDataUrl:"",heroDataUrl:"",itemUrl:"",realm:a,battleTag:localStorage.getItem("battleTag"),apiKey:"?locale=en_GB&apikey=65d63bvh7spjgmce3gjq2mv5nzjfsggy",profile:".api.battle.net/d3/profile/",itemIconBase:"http://media.blizzard.com/d3/icons/items/large/",skillIconBase:"http://media.blizzard.com/d3/icons/skills/64/",itemToolTipBase:".api.battle.net/d3/data/"}},loadHeroesData:function(){start=(new Date).getTime(),this.state.battleTag&&(this.setState({heroesDataUrl:"https://"+this.state.realm+this.state.profile.concat(this.state.battleTag.replace(/#/g,"-"),"/",this.state.apiKey)}),$.ajax({url:this.state.heroesDataUrl,cache:!1,dataType:"jsonp",success:function(a){this.setState({heroes:a}),clearInterval(fetchHerolist),clearInterval(updateHerolist),end=(new Date).getTime(),console.log("Heroes Data fetched in",end-start,"ms")}.bind(this),error:function(a,b,c){console.error(this.state.url,b,c.toString())}.bind(this)}),console.log(this.state.heroesDataUrl))},loadHeroData:function(){start=(new Date).getTime(),this.state.selected&&(this.setState({heroDataUrl:"https://"+this.state.realm+this.state.profile.concat(this.state.battleTag.replace(/#/g,"-"),"/hero/",this.state.selected,this.state.apiKey)}),$.ajax({url:this.state.heroDataUrl,cache:!1,dataType:"jsonp",success:function(a){this.setState({name:a.name,"class":a["class"],level:a.level,paragon:a.paragonLevel,stats:a.stats,items:a.items,time:a["last-updated"]}),a.skills&&this.setState({skills:a.skills.active,passives:a.skills.passive}),clearInterval(fetchHeroData),clearInterval(updateHeroData),end=(new Date).getTime(),console.log("Hero Data fetched in",end-start,"ms")}.bind(this),error:function(a,b,c){console.error(this.state.heroDataUrl,b,c.toString())}.bind(this)}),console.log(this.state.heroDataUrl))},loadItemData:function(a){start=(new Date).getTime(),this.setState({item:a}),this.setState({itemUrl:"https://"+this.state.realm+this.state.itemToolTipBase.concat(this.state.item,this.state.apiKey)}),$.ajax({url:this.state.itemUrl,cache:!1,dataType:"jsonp",success:function(a){switch(a.type.id){case"GenericHelm":case"Helm":case"Helm_Barbarian":case"Helm_DemonHunter":case"Helm_WitchDoctor":case"Helm_Crusader":case"Helm_Wizard":case"Helm_Monk":case"VoodooMask":this.setState({helmItem:a});break;case"GenericShoulders":case"Shoulders":case"Shoulders_Barbarian":case"Shoulders_DemonHunter":case"Shoulders_WitchDoctor":case"Shoulders_Crusader":case"Shoulders_Wizard":case"Shoulders_Monk":this.setState({shouldersItem:a});break;case"Bracers":this.setState({bracersItem:a});break;case"ChestArmor":case"GenericChestArmor":case"ChestArmor_Barbarian":case"ChestArmor_DemonHunter":case"ChestArmor_WitchDoctor":case"ChestArmor_Crusader":case"ChestArmor_Wizard":case"ChestArmor_Monk":case"Cloak":this.setState({chestItem:a});break;case"GenericLegs":case"Legs":case"Legs_Barbarian":case"Legs_DemonHunter":case"Legs_WitchDoctor":case"Legs_Crusader":case"Legs_Wizard":case"Legs_Monk":this.setState({legsItem:a});break;case"GenericBoots":case"Boots":case"Boots_Barbarian":case"Boots_DemonHunter":case"Boots_WitchDoctor":case"Boots_Crusader":case"Boots_Wizard":case"Boots_Monk":this.setState({bootsItem:a});break;case"Polearm":case"Crossbow":case"Dagger":case"Sword":case"Sword2H":case"Mace":case"Axe":case"FistWeapon":case"CeremonialKnife":case"MightyWeapon1H":case"Flail2H":case"Flail1H":case"HandXbow":case"Bow2H":case"Bow":case"Wand":case"Staff":case"Staff2H":case"CeremonialDagger":case"MightyWeapon2H":case"Mace2H":this.setState({mainItem:a});break;case"GenericGloves":case"Gloves":case"Gloves_Barbarian":case"Gloves_DemonHunter":case"Gloves_WitchDoctor":case"Gloves_Crusader":case"Gloves_Wizard":case"Gloves_Monk":this.setState({glovesItem:a});break;case"Belt":case"GenericBelt":case"Belt_Barbarian":this.setState({beltItem:a});break;case"Amulet":this.setState({amuletItem:a})}end=(new Date).getTime(),console.log("Item Data fetched in",end-start,"ms")}.bind(this),error:function(a,b,c){console.error(this.state.itemUrl,b,c.toString())}.bind(this)}),console.log(this.state.itemUrl)},loadItemDataWithProps:function(a,b){start=(new Date).getTime(),this.setState({item:a}),this.setState({itemUrl:"https://"+this.state.realm+this.state.itemToolTipBase.concat(this.state.item,this.state.apiKey)}),$.ajax({url:this.state.itemUrl,cache:!1,dataType:"jsonp",success:function(a){switch(a.type.id){case"Ring":b===!0?this.setState({ringItemLeft:a}):this.setState({ringItemRight:a});break;case"Quiver":case"CrusaderShield":case"Shield":case"Orb":case"Source":case"Mojo":this.setState({offItem:a});break;case"Dagger":case"Sword":case"Mace":case"Axe":case"FistWeapon":case"MightyWeapon1H":case"Flail1H":case"HandXbow":case"Bow":case"Wand":case"Staff":this.setState({offItem:a})}end=(new Date).getTime(),console.log("Item Data fetched in",end-start,"ms")}.bind(this),error:function(a,b,c){console.error(this.state.itemUrl,b,c.toString())}.bind(this)}),console.log(this.state.itemUrl)},changeChar:function(){updateHeroData=setInterval(this.loadHeroData,500),updateHeroItems=setInterval(this.getItemData,2500)},changeBattleTag:function(){clearInterval(updateHerolist),updateHerolist=setInterval(this.loadHeroesData,1e3)},triggerStatCollector:function(){this.collectStats(),console.log("manual stat collector")},componentDidMount:function(){fetchHerolist=setInterval(this.loadHeroesData,1e3),fetchHeroData=setInterval(this.loadHeroData,1500),fetchHeroItems=setInterval(this.getItemData,2500),setInterval(this.collectStats,2e3),setInterval(this.loadHeroesData,this.props.pollInterval),setInterval(this.loadHeroData,this.props.pollInterval),setInterval(this.getItemData,this.props.pollInterval),parseInt(localStorage.getItem("paragonCdr"))||this.setState({paragonCdr:0}),parseInt(localStorage.getItem("paragonResRed"))||this.setState({paragonResRed:0}),parseInt(localStorage.getItem("paragonAtkSpd"))||this.setState({paragonAtkSpd:0}),parseInt(localStorage.getItem("paragonCritChance"))||this.setState({paragonCritChance:0}),parseInt(localStorage.getItem("paragonCritDmg"))||this.setState({paragonCritDmg:0}),parseInt(localStorage.getItem("paragonAreaDmg"))||this.setState({paragonAreaDmg:0}),parseInt(localStorage.getItem("paragonResource"))||this.setState({paragonResource:0}),parseInt(localStorage.getItem("paragonResistAll"))||this.setState({paragonResistAll:0}),parseInt(localStorage.getItem("paragonArmor"))||this.setState({paragonArmor:0}),parseInt(localStorage.getItem("paragonMaxHealth"))||this.setState({paragonMaxHealth:0})},handleChange:function(a){var b=a.target.value;this.setState({battleTag:b}),localStorage.setItem("battleTag",b),this.setState({heroes:{},items:{},skills:[],passives:[],stats:[],attributes:[],"class":{},name:{},level:{},paragon:{},time:0,toggle:"more",skillDescOpen:"",passiveDescOpen:"",setRing:!1}),this.changeBattleTag()},setRealm:function(a){var b=a.target.value;this.setState({realm:b}),localStorage.setItem("realm",b),this.setState({heroes:{},items:{},skills:[],passives:[],stats:[],attributes:[],"class":{},name:{},level:{},paragon:{},time:0,toggle:"more",skillDescOpen:"",passiveDescOpen:"",setRing:!1}),this.changeBattleTag()},setSelect:function(){var a=this.refs.select.getDOMNode().value;this.setState({selected:a}),this.setState({panels:"visible"}),this.changeChar(),this.state.heroes.code?this.setState({invalid:!0}):this.setState({invalid:!1})},handleBonusStatsClick:function(){return this.triggerStatCollector(),"more"!==this.state.toggle?this.setState({toggle:"more"}):this.setState({toggle:"less"})},handleSkillDescClick:function(){return"open"===this.state.skillDescOpen?this.setState({skillDescOpen:""}):this.setState({skillDescOpen:"open"})},handlePassiveDescClick:function(){return"open"===this.state.passiveDescOpen?this.setState({passiveDescOpen:""}):this.setState({passiveDescOpen:"open"})},handleItemClick:function(a){!$(a.target).hasClass("open")&&$(a.target).hasClass("toggle")?($(a.target).addClass("open"),$(a.target).parent().children().hasClass("open")&&$(a.target).parent().children().not($(a.target)).removeClass("open")):$(a.target).removeClass("open")},handleParagon:function(a){var b=$(a.target).parent(),c=$(a.target);b.hasClass("cdr")?c.hasClass("paragon-stat-increment")?this.state.paragonCdr<10&&this.setState({paragonCdr:Math.round(10*(this.state.paragonCdr+.2))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonCdr:10})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonCdr:0})):this.state.paragonCdr>0&&this.setState({paragonCdr:Math.round(10*(this.state.paragonCdr-.2))/10}):b.hasClass("resred")?c.hasClass("paragon-stat-increment")?this.state.paragonResRed<10&&this.setState({paragonResRed:Math.round(10*(this.state.paragonResRed+.2))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonResRed:10})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonResRed:0})):this.state.paragonResRed>0&&this.setState({paragonResRed:Math.round(10*(this.state.paragonResRed-.2))/10}):b.hasClass("atkspd")?c.hasClass("paragon-stat-increment")?this.state.paragonAtkSpd<10&&this.setState({paragonAtkSpd:Math.round(10*(this.state.paragonAtkSpd+.2))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonAtkSpd:10})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonAtkSpd:0})):this.state.paragonAtkSpd>0&&this.setState({paragonAtkSpd:Math.round(10*(this.state.paragonAtkSpd-.2))/10}):b.hasClass("critdmg")?c.hasClass("paragon-stat-increment")?this.state.paragonCritDmg<50&&this.setState({paragonCritDmg:Math.round(10*(this.state.paragonCritDmg+1))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonCritDmg:50})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonCritDmg:0})):this.state.paragonCritDmg>0&&this.setState({paragonCritDmg:Math.round(10*(this.state.paragonCritDmg-1))/10}):b.hasClass("critchance")?c.hasClass("paragon-stat-increment")?this.state.paragonCritChance<5&&this.setState({paragonCritChance:Math.round(10*(this.state.paragonCritChance+.1))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonCritChance:5})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonCritChance:0})):this.state.paragonCritChance>0&&this.setState({paragonCritChance:Math.round(10*(this.state.paragonCritChance-.1))/10}):b.hasClass("areadmg")?c.hasClass("paragon-stat-increment")?this.state.paragonAreaDmg<50&&this.setState({paragonAreaDmg:Math.round(10*(this.state.paragonAreaDmg+1))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonAreaDmg:50})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonAreaDmg:0})):this.state.paragonAreaDmg>0&&this.setState({paragonAreaDmg:Math.round(10*(this.state.paragonAreaDmg-1))/10}):b.hasClass("resource")?c.hasClass("paragon-stat-increment")?this.state.paragonResource<25&&this.setState({paragonResource:Math.round(10*(this.state.paragonResource+.5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonResource:25})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonResource:0})):this.state.paragonResource>0&&this.setState({paragonResource:Math.round(10*(this.state.paragonResource-.5))/10}):b.hasClass("resistall")?c.hasClass("paragon-stat-increment")?this.state.paragonResistAll<250&&this.setState({paragonResistAll:Math.round(10*(this.state.paragonResistAll+5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonResistAll:250})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonResistAll:0})):this.state.paragonResistAll>0&&this.setState({paragonResistAll:Math.round(10*(this.state.paragonResistAll-5))/10}):b.hasClass("armor")?c.hasClass("paragon-stat-increment")?this.state.paragonArmor<25&&this.setState({paragonArmor:Math.round(10*(this.state.paragonArmor+.5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonArmor:25})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonArmor:0})):this.state.paragonArmor>0&&this.setState({paragonArmor:Math.round(10*(this.state.paragonArmor-.5))/10}):b.hasClass("maxlife")&&(c.hasClass("paragon-stat-increment")?this.state.paragonMaxHealth<25&&this.setState({paragonMaxHealth:Math.round(10*(this.state.paragonMaxHealth+.5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonMaxHealth:25})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonMaxHealth:0})):this.state.paragonMaxHealth>0&&this.setState({paragonMaxHealth:Math.round(10*(this.state.paragonMaxHealth-.5))/10})),this.triggerStatCollector()},getItemData:function(){var a,b;if(this.setState({helmItem:{},amuletItem:{},chestItem:{},bootsItem:{},glovesItem:{},shouldersItem:{},legsItem:{},bracersItem:{},mainItem:{},offItem:{},beltItem:{},ringItemLeft:{},ringItemRight:{}}),this.state.items){var c=[this.state.items.neck,this.state.items.head,this.state.items.torso,this.state.items.feet,this.state.items.hands,this.state.items.shoulders,this.state.items.legs,this.state.items.bracers,this.state.items.mainHand,this.state.items.waist],d=[[this.state.items.leftFinger,"left"],[this.state.items.rightFinger,"right"],[this.state.items.offHand,null]];for(a=0;a<c.length;a++)c[a]&&(b=c[a].tooltipParams,this.loadItemData(b));for(a=0;a<d.length;a++)d[a][0]&&(b=d[a][0].tooltipParams,"left"===d[a][1]?this.loadItemDataWithProps(b,!0):this.loadItemDataWithProps(b,!1))}clearInterval(updateHeroItems),clearInterval(fetchHeroItems)},skillDmgSanitize:function(a){var b="",c="",d=0,e=[];for(var f in a)a.hasOwnProperty(f)&&(c=f.toString().slice(4),parseFloat(f)&&(d=parseFloat(f)*parseFloat(a[f])),0!==d&&(b+=c+" "+Math.round(1e4*d)/100+"%<br>",e.push(d+" "+c)));return""!==b?(this.setState({skillDmgRaw:e}),b):void 0},collectStats:function(){var a,b,c,d,e,f,g=[],h=1,i=1,j=1,k=1,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;if(this.state.items){var w=[this.state.helmItem,this.state.amuletItem,this.state.chestItem,this.state.bootsItem,this.state.glovesItem,this.state.shouldersItem,this.state.legsItem,this.state.bracersItem,this.state.mainItem,this.state.offItem,this.state.beltItem,this.state.ringItemLeft,this.state.ringItemRight];for(a=0;a<w.length;a++)if(w[a]&&w[a].attributesRaw)for(b=0;b<statPool.length;b++)if(w[a].attributesRaw[statPool[b]]&&w[a].attributesRaw[statPool[b]].min)switch(g[b]=Math.round(1e3*w[a].attributesRaw[statPool[b]].min)/1e3,statPool[b]){case"Damage_Dealt_Percent_Bonus#Fire":o+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Cold":p+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Lightning":q+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Physical":r+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Poison":s+=100*g[b];break;case"Power_Cooldown_Reduction_Percent_All":h*=1-g[b];break;case"Resource_Cost_Reduction_Percent_All":i*=1-g[b];break;case"Damage_Percent_Bonus_Vs_Elites":l+=100*g[b];break;case"Damage_Percent_Reduction_From_Elites":m+=100*g[b];break;case"Splash_Damage_Effect_Percent":n+=100*g[b];break;case"Gold_PickUp_Radius":t+=g[b];break;case"Damage_Percent_Reduction_From_Melee":j*=1-g[b];break;case"Damage_Percent_Reduction_From_Ranged":k*=1-g[b];break;case"Hitpoints_Max_Percent_Bonus_Item":u+=100*g[b];break;case"Attacks_Per_Second_Percent":v+=g[b];break;default:console.log("default")}if(this.state["class"]&&this.state.skills&&this.state.skills.length>0){var x=[];for(d=0;d<this.state.skills.length;d++)if(this.state.skills[d].skill)switch(this.state["class"]){case"demon-hunter":x.push("Power_Damage_Percent_Bonus#DemonHunter_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"witch-doctor":x.push("Power_Damage_Percent_Bonus#Witchdoctor_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"barbarian":x.push("Power_Damage_Percent_Bonus#Barbarian_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"crusader":x.push("Power_Damage_Percent_Bonus#Crusader_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"monk":x.push("Power_Damage_Percent_Bonus#Monk_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"wizard":x.push("Power_Damage_Percent_Bonus#Wizard_"+this.state.skills[d].skill.name.replace(/ /g,""))}var y=[],z=[];for(a=0;a<w.length;a++)if(w[a]&&w[a].attributesRaw)for(b=0;b<x.length;b++)w[a].attributesRaw[x[b]]&&w[a].attributesRaw[x[b]].min&&(g[b]=Math.round(1e3*w[a].attributesRaw[x[b]].min)/1e3,Object.getOwnPropertyNames(w[a].attributesRaw[x[b]]===x[b])&&(y.push(this.state.skills[b].skill.name+" "+Math.round(1e4*w[a].attributesRaw[x[b]].min)/100+"%"),z.push(w[a].attributesRaw[x[b]].min+this.state.skills[b].skill.name),f=z.reduce(function(a,b){return b in a?a[b]++:a[b]=1,a},{})))}var A=[],B=[];for(a=0;a<w.length;a++)A.push(w[a].name),A.indexOf("Ring of Royal Grandeur")>-1?this.setState({setRing:!0}):this.setState({setRing:!1});for(a=0;a<w.length;a++)if(w[a]&&w[a].set&&w[a].set.ranks){for(d=0;d<setPool.length;d++)for(w[a].set.name===setPool[d][0]&&setPool[d][1]++,c=0;c<w[a].set.ranks.length;c++)if(this.state.setRing===!0&&w[a].set.name===setPool[d][0]&&w[a].set.ranks[c].required<=setPool[d][1]+1&&setPool[d][1]>=2){for(b=0;b<statPool.length;b++)if(w[a].set.ranks[c].attributesRaw[statPool[b]]&&w[a].set.ranks[c].attributesRaw[statPool[b]].min)switch(g[b]=Math.round(1e3*w[a].set.ranks[c].attributesRaw[statPool[b]].min)/1e3,statPool[b]){case"Damage_Dealt_Percent_Bonus#Fire":o+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Cold":p+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Lightning":q+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Physical":r+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Poison":s+=100*g[b];break;case"Power_Cooldown_Reduction_Percent_All":h*=1-g[b];break;case"Resource_Cost_Reduction_Percent_All":i*=1-g[b];break;case"Damage_Percent_Bonus_Vs_Elites":l+=100*g[b];break;case"Damage_Percent_Reduction_From_Elites":m+=100*g[b];break;case"Splash_Damage_Effect_Percent":n+=100*g[b];break;case"Gold_PickUp_Radius":t+=g[b];break;case"Damage_Percent_Reduction_From_Melee":j*=1-g[b];break;case"Damage_Percent_Reduction_From_Ranged":k*=1-g[b];break;case"Hitpoints_Max_Percent_Bonus_Item":u+=100*g[b];break;case"Attacks_Per_Second_Percent":v+=g[b]}}else if(this.state.setRing===!1&&w[a].set.name===setPool[d][0]&&w[a].set.ranks[c].required<=setPool[d][1])for(b=0;b<statPool.length;b++)if(w[a].set.ranks[c].attributesRaw[statPool[b]]&&w[a].set.ranks[c].attributesRaw[statPool[b]].min)switch(g[b]=Math.round(1e3*w[a].set.ranks[c].attributesRaw[statPool[b]].min)/1e3,statPool[b]){case"Damage_Dealt_Percent_Bonus#Fire":o+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Cold":p+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Lightning":q+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Physical":r+=100*g[b];break;case"Damage_Dealt_Percent_Bonus#Poison":s+=100*g[b];break;case"Power_Cooldown_Reduction_Percent_All":h*=1-g[b];break;case"Resource_Cost_Reduction_Percent_All":i*=1-g[b];break;case"Damage_Percent_Bonus_Vs_Elites":l+=100*g[b];break;case"Damage_Percent_Reduction_From_Elites":m+=100*g[b];break;case"Splash_Damage_Effect_Percent":n+=100*g[b];break;case"Gold_PickUp_Radius":t+=g[b];break;case"Damage_Percent_Reduction_From_Melee":j*=1-g[b];break;case"Damage_Percent_Reduction_From_Ranged":k*=1-g[b];break;case"Hitpoints_Max_Percent_Bonus_Item":u+=100*g[b];break;case"Attacks_Per_Second_Percent":v+=g[b]}if(B.indexOf(w[a].set.name)>-1)continue;B.push(w[a].set.name)}this.state.helmItem&&this.state.helmItem.gems&&this.state.helmItem.gems[0]&&this.state.helmItem.attributesRaw&&(this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All&&this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier?h*=1-this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All.min-this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All.min*this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier.min:this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All&&!this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier&&(h*=1-this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All.min),this.state.helmItem.gems[0].attributesRaw.Hitpoints_Max_Percent_Bonus_Item&&this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier?u+=100*this.state.helmItem.gems[0].Hitpoints_Max_Percent_Bonus_Item.min+100*this.state.helmItem.gems[0].Hitpoints_Max_Percent_Bonus_Item.min*this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier.min:this.state.helmItem.gems[0].attributesRaw.Hitpoints_Max_Percent_Bonus_Item&&!this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier&&(u+=100*this.state.helmItem.gems[0].Hitpoints_Max_Percent_Bonus_Item.min));var C,D=[o,s,q,r,p],E=D.reduce(function(a,b){return a>=b?a:b},-(1/0));switch(E){case o:C="Fire Damage Increase: "+Math.round(100*E)/100+"%";break;case p:C="Cold Damage Increase: "+Math.round(100*E)/100+"%";break;case r:C="Physical Damage Increase: "+Math.round(100*E)/100+"%";break;case q:C="Lightning Damage Increase: "+Math.round(100*E)/100+"%";break;case s:C="Poison Damage Increase: "+Math.round(100*E)/100+"%"}h*=1-this.state.paragonCdr/100,i*=1-this.state.paragonResRed/100,u+=this.state.paragonMaxHealth,e=this.skillDmgSanitize(f),0!==E?(this.setState({maxEleDmg:C}),this.setState({maxEleDmgValue:E})):(this.setState({maxEleDmg:""}),this.setState({maxEleDmgValue:0})),this.setState({cdrRed:h}),this.setState({resRed:i}),this.setState({eliteDmg:l}),this.setState({eliteDmgRed:m}),this.setState({areaDmg:n}),this.setState({goldPickup:t}),this.setState({dmgRedMelee:j}),this.setState({dmgRedRanged:k}),this.setState({maxHealth:u}),this.setState({skillDmg:e}),this.setState({atkSpd:v})}},render:function(){var a=this.state.skills,b=[],c=[],d=this.state.passives,e=[],f=[],g=this.state.stats,h=[],j=this.state.name,l=[],n=[],o=this.state.heroes,p=this.state.items,q=this.state["class"],r=this.state.level,s=this.state.paragon,t=this.state.amuletItem,u=this.state.shouldersItem,v=[],w=this.state.helmItem,x=[],y=this.state.chestItem,z=[],A=this.state.glovesItem,B=[],C=this.state.bootsItem,D=[],E=this.state.bracersItem,F=[],G=this.state.legsItem,H=[],I=this.state.mainItem,J=[],K=this.state.offItem,L=[],M=this.state.beltItem,N=[],O=this.state.amuletItem,P=[],Q=this.state.ringItemLeft,R=[],S=[],T=this.state.ringItemRight,U=[],V=[],W=[],X=this.state.items,Y=[],Z=this.state.skillIconBase,$=this.state.itemIconBase,_=this.state.toggleItem,aa=this.state.time,ba=[],ca=[],da=this.state.cdrRed,ea=this.state.resRed,fa=this.state.eliteDmg,ga=this.state.eliteDmgRed,ha=this.state.areaDmg,ia=this.state.goldPickup,ja=this.state.dmgRedMelee,ka=this.state.dmgRedRanged,la=this.state.maxEleDmg,ma=this.state.maxHealth,na=this.state.skillDmg,oa=this.state.skillDmgRaw,pa=this.state.atkSpd,qa=[],ra=this.state.paragonCdr,sa=this.state.paragonAtkSpd,ta=this.state.paragonResRed,ua=this.state.paragonCritDmg,va=this.state.paragonCritChance,wa=this.state.paragonAreaDmg,xa=this.state.paragonResource,ya=this.state.paragonResistAll,za=this.state.paragonArmor,Aa=this.state.paragonMaxHealth,Ba=0,Ca=0,Da=0,Ea=[this.state.helmItem,this.state.amuletItem,this.state.chestItem,this.state.bootsItem,this.state.glovesItem,this.state.shouldersItem,this.state.legsItem,this.state.bracersItem,this.state.mainItem,this.state.offItem,this.state.beltItem,this.state.ringItemLeft,this.state.ringItemRight];for(i=0;i<Ea.length;i++)for(m=0;m<setPool.length;m++)Ea[i]&&Ea[i].set&&Ea[i].set.name===setPool[m][0]&&setPool[m][1]++;switch(n.push(React.DOM.option({key:"eu",value:"eu"},"EU")),n.push(React.DOM.option({key:"us",value:"us"},"US")),n.push(React.DOM.option({key:"kr",value:"kr"},"KR")),q){case"demon-hunter":W={backgroundImage:'url("../../assets/images/dh.png")'};break;case"witch-doctor":W={backgroundImage:'url("../../assets/images/wd.png")'};break;case"barbarian":W={backgroundImage:'url("../../assets/images/barbarian.png")'};break;case"crusader":W={backgroundImage:'url("../../assets/images/crusader.png")'};break;case"monk":W={backgroundImage:'url("../../assets/images/monk.png")'};break;case"wizard":W={backgroundImage:'url("../../assets/images/wiz.jpg")'};break;default:W={backgroundImage:"none"}}if(o.heroes?(l.push(React.DOM.option({key:o.heroes.key,value:"",style:{display:"none"}},"click to select hero")),o.heroes.forEach(function(a){l.push(React.DOM.option({key:o.heroes.key,value:a.id},"["+a["class"]+"] "+a.name+" (id: "+a.id+")"))})):o.code?l.push(React.DOM.option({key:o.code.key,value:"",style:{display:"none"}},"invalid battleTag")):null===this.state.battleTag||""===this.state.battleTag?l.push(React.DOM.option({value:"",style:{display:"none"}},"enter your battleTag in the field below")):l.push(React.DOM.option({value:"",style:{display:"none"}},"loading herolist...")),j&&q&&r){var Fa=q.toString().replace(/-/g,"").charAt(0).toUpperCase()+q.toString().replace(/-/g,"").slice(1).toLowerCase();V.push(React.DOM.div({key:j.key},"Name: ",j)),V.push(React.DOM.div({key:"class-name"},"Class: ",Fa)),V.push(React.DOM.div({key:r.key},"Level: ",r)),s&&V.push(React.DOM.div({key:s.key},"Paragon: ",s))}else V.push(React.DOM.div({key:"class-name"},"Class: "));if(aa&&1e3*aa!==0){var Ga=new Date(1e3*aa),Ha=Ga.toLocaleDateString()+" - "+Ga.toLocaleTimeString();V.push(React.DOM.div({key:aa.key,className:"last-updated"},"last-updated on: "+Ha))}if(a!==[]&&a.forEach(function(d){var e;if(d.rune){switch(constructedLink=Z.concat(d.skill.icon),d.rune.type){case"a":e={backgroundPosition:"0 0"};break;case"b":e={backgroundPosition:"0 25%"};break;case"c":e={backgroundPosition:"0 49%"};break;case"d":e={backgroundPosition:"0 73%"};break;case"e":e={backgroundPosition:"0 97%"}}b.push(React.DOM.div({key:a.key,className:"hasIcon"},d.skill.name," with ",d.rune.name,React.DOM.div({key:a.key,className:"icon-front",style:{backgroundImage:"url("+constructedLink+".png)"}}),React.DOM.div({key:a.key,className:"icon-back",style:e}))),c.push(React.DOM.div({key:a.key,className:"description"},React.DOM.div({key:a.key,className:"desc-icon",style:{backgroundImage:"url("+constructedLink+".png)"}}),d.skill.name+" with "+d.rune.name,React.DOM.p({dangerouslySetInnerHTML:{__html:d.skill.description.replace(/\n/g,"<br/>")},key:a.key,className:"skill-desc"}),React.DOM.p({dangerouslySetInnerHTML:{__html:d.rune.description.replace(/\n/g,"<br/>")},key:a.key,className:"rune-desc"})))}else d.skill&&(constructedLink=Z.concat(d.skill.icon),b.push(React.DOM.div({key:a.key,className:"hasIcon"},d.skill.name,React.DOM.div({key:a.key,className:"icon-front no-rune",style:{backgroundImage:"url("+constructedLink+".png)"}}))),c.push(React.DOM.div({key:a.key,className:"description"},React.DOM.div({key:a.key,className:"desc-icon",style:{backgroundImage:"url("+constructedLink+".png)"}}),d.skill.name,React.DOM.p({
dangerouslySetInnerHTML:{__html:d.skill.description.replace(/\n/g,"<br/>")},key:a.key,className:"skill-desc"}))))}),d!==[]&&d.forEach(function(a){a.skill&&(constructedLink=Z.concat(a.skill.icon),e.push(React.DOM.div({key:d.key,className:"hasIcon"},a.skill.name,React.DOM.div({key:d.key,className:"icon",style:{backgroundImage:"url("+constructedLink+".png)"}}))),f.push(React.DOM.div({key:d.key,className:"description"},React.DOM.div({key:d.key,className:"desc-icon",style:{backgroundImage:"url("+constructedLink+".png)"}}),a.skill.name,React.DOM.p({dangerouslySetInnerHTML:{__html:a.skill.description.replace(/\n/g,"<br/>")},key:d.key,className:"passive-desc"}))))}),X&&X.head&&w){switch(constructedLink=$.concat(X.head.icon,".png"),p.head.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(w.attributesRaw&&(w.attributesRaw.Ancient_Rank&&1===w.attributesRaw.Ancient_Rank.min?(isAncient="ancient",x.push(React.DOM.li({key:w.key,className:itemQuality+" name"},isAncient+" "+p.head.name))):(isAncient="",x.push(React.DOM.li({key:w.key,className:itemQuality+" name"},p.head.name)))),w.attributes&&(w.attributes.primary&&w.attributes.primary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"primary"},a.text))}),w.attributes.secondary&&w.attributes.secondary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"secondary"},a.text))}),w.attributes.passive&&w.attributes.passive.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"passive"},a.text))})),w.set&&w.set.ranks)for(i=0;i<w.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)w.set.name===setPool[m][0]&&this.state.setRing?helmCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:w.set.name!==setPool[m][0]||this.state.setRing||(helmCount=setPool[m][1]);w.set.ranks[i].required===k&&w.set.ranks[i].required<=helmCount?w.set.ranks[i].attributes.primary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"set-bonus-"+k},a.text))}):w.set.ranks[i].required===k&&w.set.ranks[i].attributes.primary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"set-bonus-"+k+" inactive"},a.text))}),w.set.ranks[i].required===k&&w.set.ranks[i].required<=helmCount?w.set.ranks[i].attributes.secondary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"set-bonus-"+k},a.text))}):w.set.ranks[i].required===k&&w.set.ranks[i].attributes.secondary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"set-bonus-"+k+" inactive"},a.text))}),w.set.ranks[i].required===k&&w.set.ranks[i].required<=helmCount?w.set.ranks[i].attributes.passive.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"set-bonus-"+k},a.text))}):w.set.ranks[i].required===k&&w.set.ranks[i].attributes.passive.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"set-bonus-"+k+" inactive"},a.text))})}w.attributesRaw&&w.attributesRaw.Sockets&&w.gems[0]&&(gemLink=$.concat(w.gems[0].item.icon,".png"),x.push(React.DOM.li({key:w.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}})),w.gems[0].attributes.primary&&w.gems[0].attributes.primary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"gem-passive"},a.text))}),w.gems[0].attributes.secondary&&w.gems[0].attributes.secondary.forEach(function(a){x.push(React.DOM.li({key:w.key,className:"gem-passive"},a.text))})),Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" head",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:w.key,className:"desc"},React.DOM.ul({key:w.key,className:"stats"},x))))}if(X&&X.torso&&y){switch(constructedLink=$.concat(X.torso.icon,".png"),p.torso.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(y.attributesRaw&&(y.attributesRaw.Ancient_Rank&&1===y.attributesRaw.Ancient_Rank.min?(isAncient="ancient",z.push(React.DOM.li({key:y.key,className:itemQuality+" name"},isAncient+" "+p.torso.name))):(isAncient="",z.push(React.DOM.li({key:y.key,className:itemQuality+" name"},p.torso.name)))),y.attributes&&(y.attributes.primary&&y.attributes.primary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"primary"},a.text))}),y.attributes.secondary&&y.attributes.secondary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"secondary"},a.text))}),y.attributes.passive&&y.attributes.passive.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"passive"},a.text))})),y.set&&y.set.ranks)for(i=0;i<y.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)y.set.name===setPool[m][0]&&this.state.setRing?torsoCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:y.set.name!==setPool[m][0]||this.state.setRing||(torsoCount=setPool[m][1]);y.set.ranks[i].required===k&&y.set.ranks[i].required<=torsoCount?y.set.ranks[i].attributes.primary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"set-bonus-"+k},a.text))}):y.set.ranks[i].required===k&&y.set.ranks[i].attributes.primary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"set-bonus-"+k+" inactive"},a.text))}),y.set.ranks[i].required===k&&y.set.ranks[i].required<=torsoCount?y.set.ranks[i].attributes.secondary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"set-bonus-"+k},a.text))}):y.set.ranks[i].required===k&&y.set.ranks[i].attributes.secondary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"set-bonus-"+k+" inactive"},a.text))}),y.set.ranks[i].required===k&&y.set.ranks[i].required<=torsoCount?y.set.ranks[i].attributes.passive.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"set-bonus-"+k},a.text))}):y.set.ranks[i].required===k&&y.set.ranks[i].attributes.passive.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"set-bonus-"+k+" inactive"},a.text))})}y.attributesRaw&&y.attributesRaw.Sockets&&y.gems[0]?(gemLink=$.concat(y.gems[0].item.icon,".png"),y.gems[0].attributes.primary&&y.gems[0].attributes.primary.forEach(function(a){z.push(React.DOM.li({key:y.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}})),z.push(React.DOM.li({key:y.key,className:"gem-passive"},a.text)),z.push(React.DOM.li({key:y.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}})),z.push(React.DOM.li({key:y.key,className:"gem-passive"},a.text)),z.push(React.DOM.li({key:y.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}})),z.push(React.DOM.li({key:y.key,className:"gem-passive"},a.text))})):y.attributesRaw&&y.attributesRaw.Sockets&&(z.push(React.DOM.li({key:y.key,className:"socket"})),z.push(React.DOM.li({key:y.key,className:"socket"})),z.push(React.DOM.li({key:y.key,className:"socket"}))),Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" torso",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:y.key,className:"desc"},React.DOM.ul({key:y.key,className:"stats"},z))))}if(X&&X.hands&&A){switch(constructedLink=$.concat(X.hands.icon,".png"),p.hands.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(A.attributesRaw&&(A.attributesRaw.Ancient_Rank&&1===A.attributesRaw.Ancient_Rank.min?(isAncient="ancient",B.push(React.DOM.li({key:A.key,className:itemQuality+" name"},isAncient+" "+p.hands.name))):(isAncient="",B.push(React.DOM.li({key:A.key,className:itemQuality+" name"},p.hands.name)))),A.attributes&&(A.attributes.primary&&A.attributes.primary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"primary"},a.text))}),A.attributes.secondary&&A.attributes.secondary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"secondary"},a.text))}),A.attributes.passive&&A.attributes.passive.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"passive"},a.text))})),A.set&&A.set.ranks)for(i=0;i<A.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)A.set.name===setPool[m][0]&&this.state.setRing?handsCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:A.set.name!==setPool[m][0]||this.state.setRing||(handsCount=setPool[m][1]);A.set.ranks[i].required===k&&A.set.ranks[i].required<=handsCount?A.set.ranks[i].attributes.primary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"set-bonus-"+k},a.text))}):A.set.ranks[i].required===k&&A.set.ranks[i].attributes.primary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"set-bonus-"+k+" inactive"},a.text))}),A.set.ranks[i].required===k&&A.set.ranks[i].required<=handsCount?A.set.ranks[i].attributes.secondary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"set-bonus-"+k},a.text))}):A.set.ranks[i].required===k&&A.set.ranks[i].attributes.secondary.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"set-bonus-"+k+" inactive"},a.text))}),A.set.ranks[i].required===k&&A.set.ranks[i].required<=handsCount?A.set.ranks[i].attributes.passive.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"set-bonus-"+k},a.text))}):A.set.ranks[i].required===k&&A.set.ranks[i].attributes.passive.forEach(function(a){B.push(React.DOM.li({key:A.key,className:"set-bonus-"+k+" inactive"},a.text))})}Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" hands",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:A.key,className:"desc"},React.DOM.ul({key:A.key,className:"stats"},B))))}if(X&&X.feet&&C){switch(constructedLink=$.concat(X.feet.icon,".png"),p.feet.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(C.attributesRaw&&(C.attributesRaw.Ancient_Rank&&1===C.attributesRaw.Ancient_Rank.min?(isAncient="ancient",D.push(React.DOM.li({key:C.key,className:itemQuality+" name"},isAncient+" "+p.feet.name))):(isAncient="",D.push(React.DOM.li({key:C.key,className:itemQuality+" name"},p.feet.name)))),C.attributes&&(C.attributes.primary&&C.attributes.primary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"primary"},a.text))}),C.attributes.secondary&&C.attributes.secondary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"secondary"},a.text))}),C.attributes.passive&&C.attributes.passive.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"passive"},a.text))})),C.set&&C.set.ranks)for(i=0;i<C.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)C.set.name===setPool[m][0]&&this.state.setRing?feetCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:C.set.name!==setPool[m][0]||this.state.setRing||(feetCount=setPool[m][1]);C.set.ranks[i].required===k&&C.set.ranks[i].required<=feetCount?C.set.ranks[i].attributes.primary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"set-bonus-"+k},a.text))}):C.set.ranks[i].required===k&&C.set.ranks[i].attributes.primary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"set-bonus-"+k+" inactive"},a.text))}),C.set.ranks[i].required===k&&C.set.ranks[i].required<=feetCount?C.set.ranks[i].attributes.secondary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"set-bonus-"+k},a.text))}):C.set.ranks[i].required===k&&C.set.ranks[i].attributes.secondary.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"set-bonus-"+k+" inactive"},a.text))}),C.set.ranks[i].required===k&&C.set.ranks[i].required<=feetCount?C.set.ranks[i].attributes.passive.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"set-bonus-"+k},a.text))}):C.set.ranks[i].required===k&&C.set.ranks[i].attributes.passive.forEach(function(a){D.push(React.DOM.li({key:C.key,className:"set-bonus-"+k+" inactive"},a.text))})}Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" feet",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:C.key,className:"desc"},React.DOM.ul({key:C.key,className:"stats"},D))))}if(X&&X.shoulders&&u){switch(constructedLink=$.concat(X.shoulders.icon,".png"),p.shoulders.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(u.attributesRaw&&(u.attributesRaw.Ancient_Rank&&1===u.attributesRaw.Ancient_Rank.min?(isAncient="ancient",v.push(React.DOM.li({key:u.key,className:itemQuality+" name"},isAncient+" "+p.shoulders.name))):(isAncient="",v.push(React.DOM.li({key:u.key,className:itemQuality+" name"},p.shoulders.name)))),u.attributes&&(u.attributes.primary&&u.attributes.primary.forEach(function(a){v.push(React.DOM.li({key:u.key,className:"primary"},a.text))}),u.attributes.secondary&&u.attributes.secondary.forEach(function(a){v.push(React.DOM.li({key:u.key,className:"secondary"},a.text))}),u.attributes.passive&&u.attributes.passive.forEach(function(a){v.push(React.DOM.li({key:u.key,className:"passive"},a.text))})),u.set&&u.set.ranks)for(i=0;i<u.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)u.set.name===setPool[m][0]&&this.state.setRing?shouldersCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:u.set.name!==setPool[m][0]||this.state.setRing||(shouldersCount=setPool[m][1]);u.set.ranks[i].required===k&&u.set.ranks[i].required<=shouldersCount?u.set.ranks[i].attributes.primary.forEach(function(a){v.push(React.DOM.li({key:u.key,className:"set-bonus-"+k},a.text))}):u.set.ranks[i].required===k&&u.set.ranks[i].attributes.primary.forEach(function(a){v.push(React.DOM.li({key:u.key,className:"set-bonus-"+k+" inactive"},a.text))}),u.set.ranks[i].required===k&&u.set.ranks[i].required<=shouldersCount?u.set.ranks[i].attributes.secondary.forEach(function(a){v.push(React.DOM.li({key:u.key,className:"set-bonus-"+k},a.text))}):u.set.ranks[i].required===k&&u.set.ranks[i].attributes.secondary.forEach(function(a){v.push(React.DOM.li({key:u.key,className:"set-bonus-"+k+" inactive"},a.text))}),u.set.ranks[i].required===k&&u.set.ranks[i].required<=shouldersCount?u.set.ranks[i].attributes.passive.forEach(function(a){v.push(React.DOM.li({key:u.key,className:"set-bonus-"+k},a.text))}):u.set.ranks[i].required===k&&u.set.ranks[i].attributes.passive.forEach(function(a){v.push(React.DOM.li({key:u.key,className:"set-bonus-"+k+" inactive"},a.text))})}Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" shoulders",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:u.key,className:"desc"},React.DOM.ul({key:u.key,className:"stats"},v))))}if(X&&X.legs&&G){switch(constructedLink=$.concat(X.legs.icon,".png"),p.legs.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(G.attributesRaw&&(G.attributesRaw.Ancient_Rank&&1===G.attributesRaw.Ancient_Rank.min?(isAncient="ancient",H.push(React.DOM.li({key:G.key,className:itemQuality+" name"},isAncient+" "+p.legs.name))):(isAncient="",H.push(React.DOM.li({key:G.key,className:itemQuality+" name"},p.legs.name)))),G.attributes&&(G.attributes.primary&&G.attributes.primary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"primary"},a.text))}),G.attributes.secondary&&G.attributes.secondary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"secondary"},a.text))}),G.attributes.passive&&G.attributes.passive.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"passive"},a.text))})),G.set&&G.set.ranks)for(i=0;i<G.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)G.set.name===setPool[m][0]&&this.state.setRing?legsCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:G.set.name!==setPool[m][0]||this.state.setRing||(legsCount=setPool[m][1]);G.set.ranks[i].required===k&&G.set.ranks[i].required<=legsCount?G.set.ranks[i].attributes.primary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"set-bonus-"+k},a.text))}):G.set.ranks[i].required===k&&G.set.ranks[i].attributes.primary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"set-bonus-"+k+" inactive"},a.text))}),G.set.ranks[i].required===k&&G.set.ranks[i].required<=legsCount?G.set.ranks[i].attributes.secondary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"set-bonus-"+k},a.text))}):G.set.ranks[i].required===k&&G.set.ranks[i].attributes.secondary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"set-bonus-"+k+" inactive"},a.text))}),G.set.ranks[i].required===k&&G.set.ranks[i].required<=legsCount?G.set.ranks[i].attributes.passive.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"set-bonus-"+k},a.text))}):G.set.ranks[i].required===k&&G.set.ranks[i].attributes.passive.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"set-bonus-"+k+" inactive"},a.text))})}G.attributesRaw&&G.attributesRaw.Sockets&&G.gems[0]?(gemLink=$.concat(G.gems[0].item.icon,".png"),G.gems[0].attributes.primary&&G.gems[0].attributes.primary.forEach(function(a){H.push(React.DOM.li({key:G.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}})),H.push(React.DOM.li({key:G.key,className:"gem-passive"},a.text)),H.push(React.DOM.li({key:G.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}})),H.push(React.DOM.li({key:G.key,className:"gem-passive"},a.text))})):G.attributesRaw&&G.attributesRaw.Sockets&&(H.push(React.DOM.li({key:G.key,className:"socket"})),H.push(React.DOM.li({key:G.key,className:"socket"}))),Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" legs",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:G.key,className:"desc"},React.DOM.ul({key:G.key,className:"stats"},H))))}if(X&&X.bracers&&E){switch(constructedLink=$.concat(X.bracers.icon,".png"),p.bracers.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(E.attributesRaw&&(E.attributesRaw.Ancient_Rank&&1===E.attributesRaw.Ancient_Rank.min?(isAncient="ancient",F.push(React.DOM.li({key:E.key,className:itemQuality+" name"},isAncient+" "+p.bracers.name))):(isAncient="",F.push(React.DOM.li({key:E.key,className:itemQuality+" name"},p.bracers.name)))),E.attributes&&(E.attributes.primary&&E.attributes.primary.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"primary"},a.text))}),E.attributes.secondary&&E.attributes.secondary.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"secondary"},a.text))}),E.attributes.passive&&E.attributes.passive.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"passive"},a.text))})),E.set&&E.set.ranks)for(i=0;i<E.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)E.set.name===setPool[m][0]&&this.state.setRing?bracersCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:E.set.name!==setPool[m][0]||this.state.setRing||(bracersCount=setPool[m][1]);E.set.ranks[i].required===k&&E.set.ranks[i].required<=bracersCount?E.set.ranks[i].attributes.primary.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"set-bonus-"+k},a.text))}):E.set.ranks[i].required===k&&E.set.ranks[i].attributes.primary.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"set-bonus-"+k+" inactive"},a.text))}),E.set.ranks[i].required===k&&E.set.ranks[i].required<=bracersCount?E.set.ranks[i].attributes.secondary.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"set-bonus-"+k},a.text))}):E.set.ranks[i].required===k&&E.set.ranks[i].attributes.secondary.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"set-bonus-"+k+" inactive"},a.text))}),E.set.ranks[i].required===k&&E.set.ranks[i].required<=bracersCount?E.set.ranks[i].attributes.passive.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"set-bonus-"+k},a.text))}):E.set.ranks[i].required===k&&E.set.ranks[i].attributes.passive.forEach(function(a){F.push(React.DOM.li({key:E.key,className:"set-bonus-"+k+" inactive"},a.text))})}Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" bracers",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:E.key,className:"desc"},React.DOM.ul({key:E.key,className:"stats"},F))))}if(X&&X.mainHand&&I){switch(constructedLink=$.concat(X.mainHand.icon,".png"),p.mainHand.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(I.attributesRaw&&I.type){var Ia="";Ia=I.type.twoHanded===!0?"(2h)":"(1h)",I.attributesRaw.Ancient_Rank&&1===I.attributesRaw.Ancient_Rank.min?(isAncient="ancient",J.push(React.DOM.li({key:I.key,className:itemQuality+" name"},isAncient+" "+p.mainHand.name+" "+Ia))):(isAncient="",J.push(React.DOM.li({key:I.key,className:itemQuality+" name"},p.mainHand.name+" "+Ia)))}if(I.dps&&J.push(React.DOM.li({key:I.key,className:"dps"},I.dps.max.toString().substring(0,7)+" DPS")),I.minDamage&&I.maxDamage&&I.attributesRaw)for(i=0;i<weaponElementsMin.length;i++)I.attributesRaw[weaponElementsMin[i]]&&(I.attributesRaw[DamagePercentAll]&&!I.attributesRaw[DamageBonusMinPhysical]?(Ca=I.minDamage.max+I.attributesRaw[weaponElementsMin[i]].max+I.attributesRaw[weaponElementsMin[i]].max*I.attributesRaw[DamagePercentAll].max,Da=I.maxDamage.max+I.attributesRaw[weaponElementsMin[i]].max+I.attributesRaw[weaponElementsDelta[i]].max+(I.attributesRaw[weaponElementsMin[i]].max+I.attributesRaw[weaponElementsDelta[i]].max)*I.attributesRaw[DamagePercentAll].max,J.push(React.DOM.li({key:I.key,className:"raw-damage"},Math.round(Ca)+" - "+Math.round(Da)+" Damage"))):I.attributesRaw[DamagePercentAll]||I.attributesRaw[DamageBonusMinPhysical]?(Ca=I.minDamage.max,Da=I.maxDamage.max,J.push(React.DOM.li({key:I.key,className:"raw-damage"},Math.round(Ca)+" - "+Math.round(Da)+" Damage"))):(Ca=I.minDamage.max+I.attributesRaw[weaponElementsMin[i]].max,Da=I.maxDamage.max+I.attributesRaw[weaponElementsMin[i]].max+I.attributesRaw[weaponElementsDelta[i]].max,J.push(React.DOM.li({key:I.key,className:"raw-damage"},Math.round(Ca)+" - "+Math.round(Da)+" Damage"))));if(I.attributes&&(I.attributes.primary&&I.attributes.primary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"primary"},a.text))}),I.attributes.secondary&&I.attributes.secondary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"secondary"},a.text))}),I.attributes.passive&&I.attributes.passive.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"passive"},a.text))})),I.set&&I.set.ranks)for(i=0;i<I.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)I.set.name===setPool[m][0]&&this.state.setRing?mainCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:I.set.name!==setPool[m][0]||this.state.setRing||(mainCount=setPool[m][1]);I.set.ranks[i].required===k&&I.set.ranks[i].required<=mainCount?I.set.ranks[i].attributes.primary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"set-bonus-"+k},a.text))}):I.set.ranks[i].required===k&&I.set.ranks[i].attributes.primary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"set-bonus-"+k+" inactive"},a.text))}),I.set.ranks[i].required===k&&I.set.ranks[i].required<=mainCount?I.set.ranks[i].attributes.secondary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"set-bonus-"+k},a.text))}):I.set.ranks[i].required===k&&I.set.ranks[i].attributes.secondary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"set-bonus-"+k+" inactive"},a.text))}),I.set.ranks[i].required===k&&I.set.ranks[i].required<=mainCount?I.set.ranks[i].attributes.passive.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"set-bonus-"+k},a.text))}):I.set.ranks[i].required===k&&I.set.ranks[i].attributes.passive.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"set-bonus-"+k+" inactive"},a.text))})}I.attributesRaw&&I.attributesRaw.Sockets&&I.gems[0]?(I.gems[0].attributesRaw.Jewel_Rank?I.gems[0].attributesRaw.Jewel_Rank&&(gemLink=$.concat(I.gems[0].item.icon,".png"),J.push(React.DOM.li({key:I.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}},React.DOM.span({key:I.key,className:"gem-level"},I.gems[0].attributesRaw.Jewel_Rank.min)))):(gemLink=$.concat(I.gems[0].item.icon,".png"),J.push(React.DOM.li({key:I.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}}))),I.gems[0].attributes.primary&&I.gems[0].attributes.primary.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"gem-passive"},a.text))}),I.gems[0].attributes.passive&&I.gems[0].attributes.passive.forEach(function(a){J.push(React.DOM.li({key:I.key,className:"gem-passive"},a.text))})):I.attributesRaw&&I.attributesRaw.Sockets&&J.push(React.DOM.li({key:I.key,className:"socket"})),Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" mainHand",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:I.key,className:"desc"},React.DOM.ul({key:I.key,className:"stats"},J))))}if(X&&X.offHand&&K){switch(constructedLink=$.concat(X.offHand.icon,".png"),p.offHand.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(K.attributesRaw&&K.type){var Ja="";Ja=K.type.twoHanded===!0?"(2h)":K.type.twoHanded!==!0&&K.dps?"(1h)":"",K.attributesRaw.Ancient_Rank&&1===K.attributesRaw.Ancient_Rank.min?(isAncient="ancient",L.push(React.DOM.li({key:K.key,className:itemQuality+" name"},isAncient+" "+p.offHand.name+" "+Ja))):(isAncient="",L.push(React.DOM.li({key:K.key,className:itemQuality+" name"},p.offHand.name+" "+Ja)))}if(K.dps&&L.push(React.DOM.li({key:K.key,className:"dps"},K.dps.max.toString().substring(0,8)+" DPS")),K.minDamage&&K.maxDamage&&K.attributesRaw)for(i=0;i<weaponElementsMin.length;i++)K.attributesRaw[weaponElementsMin[i]]&&(K.attributesRaw[DamagePercentAll]&&!K.attributesRaw[DamageBonusMinPhysical]?L.push(React.DOM.li({key:K.key,className:"raw-damage"},Math.round(K.minDamage.max+K.attributesRaw[weaponElementsMin[i]].max+K.attributesRaw[weaponElementsMin[i]].max*K.attributesRaw[DamagePercentAll].max)+" - "+Math.round(K.maxDamage.max+K.attributesRaw[weaponElementsMin[i]].max+K.attributesRaw[weaponElementsDelta[i]].max+(K.attributesRaw[weaponElementsMin[i]].max+K.attributesRaw[weaponElementsDelta[i]].max)*K.attributesRaw[DamagePercentAll].max)+" Damage")):K.attributesRaw[DamagePercentAll]||K.attributesRaw[DamageBonusMinPhysical]?L.push(React.DOM.li({key:K.key,className:"raw-damage"},Math.round(K.minDamage.max)+" - "+Math.round(K.maxDamage.max)+" Damage")):L.push(React.DOM.li({key:K.key,className:"raw-damage"},Math.round(K.minDamage.max+K.attributesRaw[weaponElementsMin[i]].max)+" - "+Math.round(K.maxDamage.max+K.attributesRaw[weaponElementsMin[i]].max+K.attributesRaw[weaponElementsDelta[i]].max)+" Damage")));if(K.attributes&&(K.attributes.primary&&K.attributes.primary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"primary"},a.text))}),K.attributes.secondary&&K.attributes.secondary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"secondary"},a.text))}),K.attributes.passive&&K.attributes.passive.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"passive"},a.text))})),K.set&&K.set.ranks)for(i=0;i<K.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)K.set.name===setPool[m][0]&&this.state.setRing?offCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:K.set.name!==setPool[m][0]||this.state.setRing||(offCount=setPool[m][1]);K.set.ranks[i].required===k&&K.set.ranks[i].required<=offCount?K.set.ranks[i].attributes.primary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"set-bonus-"+k},a.text))}):K.set.ranks[i].required===k&&K.set.ranks[i].attributes.primary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"set-bonus-"+k+" inactive"},a.text))}),K.set.ranks[i].required===k&&K.set.ranks[i].required<=offCount?K.set.ranks[i].attributes.secondary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"set-bonus-"+k},a.text))}):K.set.ranks[i].required===k&&K.set.ranks[i].attributes.secondary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"set-bonus-"+k+" inactive"},a.text))}),K.set.ranks[i].required===k&&K.set.ranks[i].required<=offCount?K.set.ranks[i].attributes.passive.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"set-bonus-"+k},a.text))}):K.set.ranks[i].required===k&&K.set.ranks[i].attributes.passive.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"set-bonus-"+k+" inactive"},a.text))})}K.attributesRaw&&K.attributesRaw.Sockets&&K.gems[0]?(K.gems[0].attributesRaw.Jewel_Rank?K.gems[0].attributesRaw.Jewel_Rank&&(gemLink=$.concat(K.gems[0].item.icon,".png"),L.push(React.DOM.li({key:K.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}},React.DOM.span({key:K.key,className:"gem-level"},K.gems[0].attributesRaw.Jewel_Rank.min)))):(gemLink=$.concat(K.gems[0].item.icon,".png"),L.push(React.DOM.li({key:K.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}}))),K.gems[0].attributes.primary&&K.gems[0].attributes.primary.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"gem-passive"},a.text))}),K.gems[0].attributes.passive&&K.gems[0].attributes.passive.forEach(function(a){L.push(React.DOM.li({key:K.key,className:"gem-passive"},a.text))})):K.attributesRaw&&K.attributesRaw.Sockets&&L.push(React.DOM.li({key:K.key,className:"socket"})),Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" offHand",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:K.key,className:"desc"},React.DOM.ul({key:K.key,className:"stats"},L))))}if(X&&X.waist&&M){switch(constructedLink=$.concat(X.waist.icon,".png"),p.waist.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(M.attributesRaw&&(M.attributesRaw.Ancient_Rank&&1===M.attributesRaw.Ancient_Rank.min?(isAncient="ancient",N.push(React.DOM.li({key:M.key,className:itemQuality+" name"},isAncient+" "+p.waist.name))):(isAncient="",N.push(React.DOM.li({key:M.key,className:itemQuality+" name"},p.waist.name)))),M.attributes&&(M.attributes.primary&&M.attributes.primary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"primary"},a.text))}),M.attributes.secondary&&M.attributes.secondary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"secondary"},a.text))}),M.attributes.passive&&M.attributes.passive.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"passive"},a.text))})),M.set&&M.set.ranks)for(i=0;i<M.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)M.set.name===setPool[m][0]&&this.state.setRing?beltCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:M.set.name!==setPool[m][0]||this.state.setRing||(beltCount=setPool[m][1]);M.set.ranks[i].required===k&&M.set.ranks[i].required<=beltCount?M.set.ranks[i].attributes.primary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+k},a.text));
}):M.set.ranks[i].required===k&&M.set.ranks[i].attributes.primary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+k+" inactive"},a.text))}),M.set.ranks[i].required===k&&M.set.ranks[i].required<=beltCount?M.set.ranks[i].attributes.secondary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+k},a.text))}):M.set.ranks[i].required===k&&M.set.ranks[i].attributes.secondary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+k+" inactive"},a.text))}),M.set.ranks[i].required===k&&M.set.ranks[i].required<=beltCount?M.set.ranks[i].attributes.passive.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+k},a.text))}):M.set.ranks[i].required===k&&M.set.ranks[i].attributes.passive.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+k+" inactive"},a.text))})}Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" waist",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:M.key,className:"desc"},React.DOM.ul({key:M.key,className:"stats"},N))))}if(X&&X.rightFinger&&T){switch(constructedLink=$.concat(X.rightFinger.icon,".png"),p.rightFinger.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(T.attributesRaw&&(T.attributesRaw.Ancient_Rank&&1===T.attributesRaw.Ancient_Rank.min?(isAncient="ancient",S.push(React.DOM.li({key:T.key,className:itemQuality+" name"},isAncient+" "+p.rightFinger.name))):(isAncient="",S.push(React.DOM.li({key:T.key,className:itemQuality+" name"},p.rightFinger.name)))),T.attributes&&(T.attributes.primary&&T.attributes.primary.forEach(function(a){S.push(React.DOM.li({key:T.key,className:"primary"},a.text))}),T.attributes.secondary&&T.attributes.secondary.forEach(function(a){"orange"!==a.color?S.push(React.DOM.li({key:T.key,className:"secondary"},a.text)):S.push(React.DOM.li({key:T.key,className:"passive"},a.text))}),T.attributes.passive&&T.attributes.passive.forEach(function(a){S.push(React.DOM.li({key:T.key,className:"passive"},a.text))})),T.set&&T.set.ranks)for(i=0;i<T.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)T.set.name===setPool[m][0]&&this.state.setRing?ringRCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:T.set.name!==setPool[m][0]||this.state.setRing||(ringRCount=setPool[m][1]);T.set.ranks[i].required===k&&T.set.ranks[i].required<=ringRCount?T.set.ranks[i].attributes.primary.forEach(function(a){S.push(React.DOM.li({key:T.key,className:"set-bonus-"+k},a.text))}):T.set.ranks[i].required===k&&T.set.ranks[i].attributes.primary.forEach(function(a){S.push(React.DOM.li({key:T.key,className:"set-bonus-"+k+" inactive"},a.text))}),T.set.ranks[i].required===k&&T.set.ranks[i].required<=ringRCount?T.set.ranks[i].attributes.secondary.forEach(function(a){S.push(React.DOM.li({key:T.key,className:"set-bonus-"+k},a.text))}):T.set.ranks[i].required===k&&T.set.ranks[i].attributes.secondary.forEach(function(a){S.push(React.DOM.li({key:T.key,className:"set-bonus-"+k+" inactive"},a.text))}),T.set.ranks[i].required===k&&T.set.ranks[i].required<=ringRCount?T.set.ranks[i].attributes.passive.forEach(function(a){S.push(React.DOM.li({key:T.key,className:"set-bonus-"+k},a.text))}):T.set.ranks[i].required===k&&T.set.ranks[i].attributes.passive.forEach(function(a){S.push(React.DOM.li({key:T.key,className:"set-bonus-"+k+" inactive"},a.text))})}T.attributesRaw&&T.attributesRaw.Sockets&&T.gems[0]&&T.gems[0].attributesRaw.Jewel_Rank?(gemLink=$.concat(T.gems[0].item.icon,".png"),S.push(React.DOM.li({key:T.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}},React.DOM.span({key:T.key,className:"gem-level"},T.gems[0].attributesRaw.Jewel_Rank.min))),T.gems[0].attributes.passive.forEach(function(a){S.push(React.DOM.li({key:T.key,className:"gem-passive unique"},a.text))})):T.attributesRaw&&T.attributesRaw.Sockets&&S.push(React.DOM.li({key:T.key,className:"socket"})),Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" rightFinger",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:T.key,className:"desc"},React.DOM.ul({key:T.key,className:"stats"},S))))}if(X&&X.leftFinger&&Q){switch(constructedLink=$.concat(X.leftFinger.icon,".png"),p.leftFinger.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(Q.attributesRaw&&(Q.attributesRaw.Ancient_Rank&&1===Q.attributesRaw.Ancient_Rank.min?(isAncient="ancient",R.push(React.DOM.li({key:Q.key,className:itemQuality+" name"},isAncient+" "+p.leftFinger.name))):(isAncient="",R.push(React.DOM.li({key:Q.key,className:itemQuality+" name"},p.leftFinger.name)))),Q.attributes&&(Q.attributes.primary&&Q.attributes.primary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"primary"},a.text))}),Q.attributes.secondary&&Q.attributes.secondary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"secondary"},a.text))}),Q.attributes.passive?Q.attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"passive"},a.text))}):isAncient=""),Q.set&&Q.set.ranks)for(i=0;i<Q.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)Q.set.name===setPool[m][0]&&this.state.setRing?ringLCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:Q.set.name!==setPool[m][0]||this.state.setRing||(ringLCount=setPool[m][1]);Q.set.ranks[i].required===k&&Q.set.ranks[i].required<=ringLCount?Q.set.ranks[i].attributes.primary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+k},a.text))}):Q.set.ranks[i].required===k&&Q.set.ranks[i].attributes.primary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+k+" inactive"},a.text))}),Q.set.ranks[i].required===k&&Q.set.ranks[i].required<=ringLCount?Q.set.ranks[i].attributes.secondary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+k},a.text))}):Q.set.ranks[i].required===k&&Q.set.ranks[i].attributes.secondary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+k+" inactive"},a.text))}),Q.set.ranks[i].required===k&&Q.set.ranks[i].required<=ringLCount?Q.set.ranks[i].attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+k},a.text))}):Q.set.ranks[i].required===k&&Q.set.ranks[i].attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+k+" inactive"},a.text))})}Q.attributesRaw&&Q.attributesRaw.Sockets&&Q.gems[0]&&Q.gems[0].attributesRaw.Jewel_Rank?(gemLink=$.concat(Q.gems[0].item.icon,".png"),R.push(React.DOM.li({key:Q.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}},React.DOM.span({key:Q.key,className:"gem-level"},Q.gems[0].attributesRaw.Jewel_Rank.min))),Q.gems[0].attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"gem-passive unique"},a.text))})):Q.attributesRaw&&Q.attributesRaw.Sockets&&R.push(React.DOM.li({key:Q.key,className:"socket"})),Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" leftFinger",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:Q.key,className:"desc"},React.DOM.ul({key:Q.key,className:"stats"},R))))}if(X&&X.neck&&O){switch(constructedLink=$.concat(X.neck.icon,".png"),p.neck.displayColor){case"green":itemQuality="set";break;case"orange":itemQuality="unique";break;case"blue":itemQuality="magic";break;case"yellow":itemQuality="rare";break;case"white":itemQuality="white";break;case"gray":itemQuality="common"}if(O.attributesRaw&&(O.attributesRaw.Ancient_Rank&&1===O.attributesRaw.Ancient_Rank.min?(isAncient="ancient",P.push(React.DOM.li({key:O.key,className:itemQuality+" name"},isAncient+" "+p.neck.name))):(isAncient="",P.push(React.DOM.li({key:O.key,className:itemQuality+" name"},p.neck.name)))),O.attributes&&(O.attributes.primary&&O.attributes.primary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"primary"},a.text))}),O.attributes.secondary&&O.attributes.secondary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"secondary"},a.text))}),O.attributes.passive&&O.attributes.passive.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"passive"},a.text))})),O.set&&O.set.ranks)for(i=0;i<O.set.ranks.length;i++)for(k=1;6>=k;k++){for(m=0;m<setPool.length;m++)O.set.name===setPool[m][0]&&this.state.setRing?neckCount=setPool[m][1]>=2?setPool[m][1]++:setPool[m][1]:O.set.name!==setPool[m][0]||this.state.setRing||(neckCount=setPool[m][1]);O.set.ranks[i].required===k&&O.set.ranks[i].required<=neckCount?O.set.ranks[i].attributes.primary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+k},a.text))}):O.set.ranks[i].required===k&&O.set.ranks[i].attributes.primary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+k+" inactive"},a.text))}),O.set.ranks[i].required===k&&O.set.ranks[i].required<=neckCount?O.set.ranks[i].attributes.secondary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+k},a.text))}):O.set.ranks[i].required===k&&O.set.ranks[i].attributes.secondary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+k+" inactive"},a.text))}),O.set.ranks[i].required===k&&O.set.ranks[i].required<=neckCount?O.set.ranks[i].attributes.passive.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+k},a.text))}):O.set.ranks[i].required===k&&O.set.ranks[i].attributes.passive.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+k+" inactive"},a.text))})}O.attributesRaw&&O.attributesRaw.Sockets&&O.gems[0]&&O.gems[0].attributesRaw.Jewel_Rank?(gemLink=$.concat(O.gems[0].item.icon,".png"),P.push(React.DOM.li({key:O.key,className:"socket",style:{backgroundImage:"url("+gemLink+")"}},React.DOM.span({key:O.key,className:"gem-level"},O.gems[0].attributesRaw.Jewel_Rank.min))),O.gems[0].attributes.passive.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"gem-passive unique"},a.text))})):O.attributesRaw&&O.attributesRaw.Sockets&&P.push(React.DOM.li({key:O.key,className:"socket"})),Y.push(React.DOM.div({key:X.key,className:_+" "+isAncient+" "+itemQuality+" neck",onClick:this.handleItemClick,style:{backgroundImage:"url("+constructedLink+")"}},React.DOM.div({key:O.key,className:"desc"},React.DOM.ul({key:O.key,className:"stats"},P))))}if(t.attributes&&p&&t.attributes.passive[0]&&-1!==t.attributes.passive[0].text.search("passive")&&p.neck&&"Hellfire Amulet"===p.neck.name){switch(hellfirePassiveLink=t.attributes.passive[0].text.substring(9).replace(" passive.","").replace(/ /g,"").toLowerCase(),hellfirePassiveDisplay=t.attributes.passive[0].text.substring(9).replace(" passive.",""),q){case"demon-hunter":constructedLink=Z.concat("demonhunter_passive_",hellfirePassiveLink);break;case"witch-doctor":constructedLink=Z.concat("witchdoctor_passive_",hellfirePassiveLink);break;case"barbarian":constructedLink=Z.concat("barbarian_passive_",hellfirePassiveLink);break;case"crusader":constructedLink=Z.concat("crusader_passive_",hellfirePassiveLink);break;case"monk":constructedLink=Z.concat("monk_passive_",hellfirePassiveLink);break;case"wizard":constructedLink=Z.concat("wizard_passive_",hellfirePassiveLink);break;default:console.log("new class?")}U.push(React.DOM.div({key:t.key,className:"hasIcon"},hellfirePassiveDisplay," (HA)",React.DOM.div({key:t.key,className:"icon",style:{backgroundImage:"url("+constructedLink+".png)"}})))}if(g&&g.life&&g.damage&&g.toughness&&g.vitality&&(h.push(React.DOM.div({key:g.key},"Life: ",Math.round(g.life+g.life*Aa/100).toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),h.push(React.DOM.div({key:g.key},"Toughness: ",Math.round(g.toughness).toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),"demon-hunter"===q||"monk"===q?(h.push(React.DOM.div({key:g.key},"Dexterity: ",g.dexterity.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),g.strength>1e3&&h.push(React.DOM.div({key:g.key},"Strength: ",g.strength.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),g.intelligence>1e3&&h.push(React.DOM.div({key:g.key},"Intelligence: ",g.intelligence.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")))):"witch-doctor"===q||"wizard"===q?(h.push(React.DOM.div({key:g.key},"Intelligence: ",g.intelligence.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),g.strength>1e3&&h.push(React.DOM.div({key:g.key},"Strength: ",g.strength.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),g.dexterity>1e3&&h.push(React.DOM.div({key:g.key},"Dexterity: ",g.dexterity.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")))):("barbarian"===q||"crusader"===q)&&(h.push(React.DOM.div({key:g.key},"Strength: ",g.strength.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),g.dexterity>1e3&&h.push(React.DOM.div({key:g.key},"Dexterity: ",g.dexterity.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),g.intelligence>1e3&&h.push(React.DOM.div({key:g.key},"Intelligence: ",g.intelligence.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")))),h.push(React.DOM.div({key:g.key},"Vitality: ",g.vitality.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),h.push(React.DOM.div({key:g.key},"Armor: ",Math.round(g.armor+g.armor*za/100))),0!==g.damageIncrease&&h.push(React.DOM.div({key:g.key},"Damage Increase: ",g.damageIncrease)),0!==g.damageReduction&&h.push(React.DOM.div({key:g.key},"Damage Increase: ",g.damageReduction))),ba&&g&&(g.critChance?ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Critical Hit Chance: "+Math.round(1e3*(100*g.critChance+va))/1e3+"%")):g.critChance||0===va||ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Critical Hit Chance: "+Math.round(1e3*va)/1e3+"%")),g.critDamage?ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Critical Damage increase: "+Math.round(1e3*(100*g.critDamage+ua-100))/1e3+"%")):g.critDamage||0===ua||ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Critical Damage increase: "+Math.round(1e3*(ua-100))/1e3+"%")),1!==da&&ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Cooldown Reduction: "+Math.round(100*(1-da)*100)/100+"%")),1!==ea&&ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Resource Cost Reduction: "+Math.round(100*(1-ea)*100)/100+"%")),I.attacksPerSecond&&K.attacksPerSecond?(Ba=I.attacksPerSecond.max+I.attacksPerSecond.max*(.15+pa+sa/100),ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Attacks per Second: "+Math.round(100*Ba)/100))):I.attacksPerSecond?(Ba=I.attacksPerSecond.max+I.attacksPerSecond.max*(pa+sa/100),ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Attacks per Second: "+Math.round(100*Ba)/100))):I.attacksPerSecond||0===sa||(Ba=sa/100,ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Attacks per Second: "+Math.round(100*Ba)/100))),0!==fa&&ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Bonus Damage to Elites: "+fa+"%")),0!==ha?ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Area Bonus Damage: "+(ha+wa)+"%")):0!==wa&&ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Area Bonus Damage: "+wa+"%")),0!==la&&ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},la)),g.primaryResource?ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Primary Resource: "+(g.primaryResource+xa))):0!==xa&&ba.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Primary Resource: "+xa)),na&&ba.push(React.DOM.div({dangerouslySetInnerHTML:{__html:"Skill Damage: "+na},key:ba.key,className:"bonusstat"}))),g&&g.critDamage&&g.critChance&&Ba&&0!==Ca&&0!==Da){var Ka,La,Ma,Na,Oa,Pa=.5*(Ca+Da),Qa=g.critChance+va/100,Ra=g.critDamage-1+ua/100,Sa=Qa,Ta=Ra,Ua=0,Va=0,Wa=3,Xa=1,Ya=[];if("demon-hunter"===q||"monk"===q?Ka=g.dexterity/100:"barbarian"===q||"crusader"===q?Ka=g.strength/100:"wizard"===q||"witch-doctor"===q?Ka=g.intelligence/100:(Ka=1,console.log("new class?")),La=(1+Ka)*Pa,this.state.skillDmgRaw)for(i=0;i<this.state.skillDmgRaw.length;i++)a.forEach(function(a){a.skill&&-1!=oa[i].search(a.skill.name.toString())&&Ya.push([Wa,oa[i]])});for(i=0;i<passiveBuffPool.length;i++)d.forEach(function(a){a.skill&&a.skill.name===passiveBuffPool[i][0]&&("Damage"===passiveBuffPool[i][1]&&(Ua+=passiveBuffPool[i][2]),"Crit Chance"===passiveBuffPool[i][1]&&(Sa+=passiveBuffPool[i][2]))});for(i=0;i<skillBuffPool.length;i++)a.forEach(function(a){a.skill&&a.rune?(a.skill.name===skillBuffPool[i][0]||a.rune.name===skillBuffPool[i][0])&&"Damage"===skillBuffPool[i][1]&&(Ua+=skillBuffPool[i][2]):a.skill&&a.skill.name===skillBuffPool[i][0]&&"Damage"===skillBuffPool[i][1]&&(Ua+=skillBuffPool[i][2])});this.state.maxEleDmgValue&&(Va+=this.state.maxEleDmgValue/100),Na=Ya.sort(),Oa=Na[0]?Na[0][0]*(1+parseFloat(Na[0][1]))*(1+Va):1,Ma=La*Ba*(Sa*Ta+1)*Oa*(1+Ua)*(1+Xa),Ma?h.push(React.DOM.div({key:"dps"},"DPS: ",Math.round(La*Ba*(Qa*Ra+1)).toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")," | EDPS: ",Math.round(Ma).toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))):h.push(React.DOM.div({key:"dps"},"DPS: ",Math.round(La*Ba*(Qa*Ra+1)).toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")," | EDPS: ","Calculating EDPS.."))}return ca&&g&&(g.secondaryResource&&ca.push(React.DOM.div({key:ba.key,className:"bonusstat"},"Secondary Resource: "+g.secondaryResource)),g.physicalResist?ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Physical Resist: "+(g.physicalResist+ya))):0!==ya&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Physical Resist: "+ya)),g.fireResist?ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Fire Resist: "+(g.fireResist+ya))):0!==ya&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Fire Resist: "+ya)),g.coldResist?ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Cold Resist: "+(g.coldResist+ya))):0!==ya&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Cold Resist: "+ya)),g.lightningResist?ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Lighting Resist: "+(g.lightningResist+ya))):0!==ya&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Lighting Resist: "+ya)),g.poisonResist?ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Poison Resist: "+(g.poisonResist+ya))):0!==ya&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Poison Resist: "+ya)),0!==ia&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Gold Pick-up Radius: "+ia+" yards")),1!==ja&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Melee Damage Reduction: "+Math.round(100*(1-ja)*1e3)/1e3+"%")),1!==ka&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Ranged Damage Reduction: "+Math.round(100*(1-ka)*1e3)/1e3+"%")),0!==ga&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Damage Reduction from Elites: "+ga+"%")),ma?ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Bonus Max Health: "+ma+"%")):0!==Aa&&ca.push(React.DOM.div({key:ca.key,className:"bonusstat"},"Bonus Max Health: "+Aa+"%"))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat cdr"},"cdr: "+Math.round(10*ra)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat resred"},"res: "+Math.round(10*ta)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat atkspd"},"atkspd: "+Math.round(10*sa)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat critdmg"},"critdmg: "+Math.round(ua)+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat critchance"},"critchance: "+Math.round(10*va)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat areadmg"},"areadmg: "+Math.round(wa)+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat resource"},"resource: "+Math.round(xa),React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat resistall"},"allres: "+Math.round(ya),React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat armor"},"armor: "+Math.round(10*za)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),qa.push(React.DOM.div({key:qa.key,className:"paragon-stat maxlife"},"maxlife: "+Math.round(10*Aa)/10+"%",React.DOM.span({key:qa.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:qa.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:qa.key,className:"paragon-stat-max",onClick:this.handleParagon}))),localStorage.setItem("paragonCdr",this.state.paragonCdr),localStorage.setItem("paragonResRed",this.state.paragonResRed),localStorage.setItem("paragonAtkSpd",this.state.paragonAtkSpd),localStorage.setItem("paragonCritDmg",this.state.paragonCritDmg),localStorage.setItem("paragonCritChance",this.state.paragonCritChance),localStorage.setItem("paragonAreaDmg",this.state.paragonAreaDmg),localStorage.setItem("paragonResource",this.state.paragonResource),localStorage.setItem("paragonResistAll",this.state.paragonResistAll),localStorage.setItem("paragonArmor",this.state.paragonArmor),localStorage.setItem("paragonMaxHealth",this.state.paragonMaxHealth),React.DOM.div({className:"d3-container"},React.DOM.div({className:"d3-item-wrapper"},Y),React.DOM.div({className:"d3-char-bg",style:W}),React.DOM.div({className:"d3-realm-wrapper"},"1 - Realm: ",React.DOM.select({className:"d3-realm",ref:"select",value:this.state.realm,onChange:this.setRealm},n)),React.DOM.div({className:"d3-api-url"},"2 - Enter your BattleTag: ",React.DOM.input({value:this.state.battleTag,placeholder:"NAME#1234",onChange:this.handleChange})),React.DOM.div({className:"d3-char-wrapper"},"3 - Click below to select your hero: ",React.DOM.select({className:"d3-chars",ref:"select",value:this.state.selected,onChange:this.setSelect},l)),React.DOM.div({className:this.state.panels,id:"panel-left"},"General",V,React.DOM.div({className:"d3-paragon-selector"},"Paragon Points: ",qa)),React.DOM.div({className:this.state.skillDescOpen+" "+this.state.panels,title:"click to open detailed description",id:"panel-bottom-left"},React.DOM.button({onClick:this.handleSkillDescClick},"show details"),"Skills",b),React.DOM.div({className:this.state.skillDescOpen,id:"panel-bottom-left-desc"},React.DOM.button({onClick:this.handleSkillDescClick,title:"click to close"},"close"),c),React.DOM.div({className:this.state.passiveDescOpen+" "+this.state.panels,title:"click to open detailed description",id:"panel-bottom-right"},React.DOM.button({onClick:this.handlePassiveDescClick},"show details"),"Passives",e,U),React.DOM.div({className:this.state.passiveDescOpen,id:"panel-bottom-right-desc"},React.DOM.button({onClick:this.handlePassiveDescClick,title:"click to close"},"close"),f,"Note: your Hellfire Passive cannot be displayed here, courtesy of blizzard"),React.DOM.div({className:this.state.toggle+" "+this.state.panels,id:"panel-right"},React.DOM.button({onClick:this.handleBonusStatsClick,title:"click to show/hide more stats"},"show "+this.state.toggle),"Stats",h),React.DOM.div({id:"panel-right-additional"},"Offensive Stats",ba,"Defensive Stats",ca))}});React.render(React.createElement(DataWrapper,{pollInterval:6e5}),document.getElementById("profile-data"));