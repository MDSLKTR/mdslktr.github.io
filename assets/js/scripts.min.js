var DataWrapper=React.createClass({displayName:"DataWrapper",getInitialState:function(){return{skills:[],passives:[],stats:[],heroes:{},items:{},attributes:[],"class":"",name:"",level:"",paragon:"",helmItem:{},amuletItem:{},shouldersItem:{},bracersItem:{},chestItem:{},ringItemLeft:{},ringItemRight:{},mainItem:{},offItem:{},legsItem:{},bootsItem:{},glovesItem:{},beltItem:{},additionalStats:[],atkSpd:0,eliteDmg:0,eliteDmgRed:0,areaDmg:0,goldPickup:0,dmgRedMelee:0,dmgRedRanged:0,maxEleDmg:0,maxHealth:0,trigger:!0,count:0,toggleItem:"toggle",paragonCdr:parseInt(localStorage.getItem("paragonCdr")),paragonResRed:parseInt(localStorage.getItem("paragonResRed")),paragonAtkSpd:parseInt(localStorage.getItem("paragonAtkSpd")),paragonCritDmg:parseInt(localStorage.getItem("paragonCritDmg")),paragonCritChance:parseInt(localStorage.getItem("paragonCritChance")),paragonAreaDmg:parseInt(localStorage.getItem("paragonAreaDmg")),paragonResource:parseInt(localStorage.getItem("paragonResource")),paragonResistAll:parseInt(localStorage.getItem("paragonResistAll")),paragonArmor:parseInt(localStorage.getItem("paragonArmor")),paragonMaxHealth:parseInt(localStorage.getItem("paragonMaxHealth")),invalid:!1,setRing:!1,time:0,toggle:"more",skillDescOpen:"",passiveDescOpen:"",hellfire_clear:"",url:"",itemUrl:"",battleTag:localStorage.getItem("battleTag"),apiKey:"?locale=en_GB&apikey=65d63bvh7spjgmce3gjq2mv5nzjfsggy",profile:"https://eu.api.battle.net/d3/profile/",itemIconBase:"http://media.blizzard.com/d3/icons/items/large/",skillIconBase:"http://media.blizzard.com/d3/icons/skills/64/",itemToolTipBase:"https://eu.api.battle.net/d3/data/"}},loadHeroesData:function(){this.state.battleTag&&(this.setState({url:this.state.profile.concat(this.state.battleTag.replace(/#/g,"-"),"/",this.state.apiKey)}),$.ajax({url:this.state.url,dataType:"jsonp",success:function(a){this.setState({heroes:a})}.bind(this),error:function(a,b,c){console.error(this.state.url,b,c.toString())}.bind(this)}),console.log(this.state.url))},loadHeroData:function(){this.state.selected&&(this.setState({url:this.state.profile.concat(this.state.battleTag.replace(/#/g,"-"),"/hero/",this.state.selected,this.state.apiKey)}),$.ajax({url:this.state.url,dataType:"jsonp",success:function(a){this.setState({name:a.name,"class":a["class"],level:a.level,paragon:a.paragonLevel,stats:a.stats,items:a.items,time:a["last-updated"]}),a.skills&&this.setState({skills:a.skills.active,passives:a.skills.passive})}.bind(this),error:function(a,b,c){console.error(this.state.url,b,c.toString())}.bind(this)}),console.log(this.state.url))},loadItemData:function(a){this.setState({item:a}),this.setState({itemUrl:this.state.itemToolTipBase.concat(this.state.item,this.state.apiKey)}),$.ajax({url:this.state.itemUrl,dataType:"jsonp",success:function(a){switch(a.type.id){case"GenericHelm":case"Helm":case"Helm_Barbarian":case"Helm_DemonHunter":case"Helm_WitchDoctor":case"Helm_Crusader":case"Helm_Wizard":case"Helm_Monk":case"VoodooMask":this.setState({helmItem:a});break;case"GenericShoulders":case"Shoulders":case"Shoulders_Barbarian":case"Shoulders_DemonHunter":case"Shoulders_WitchDoctor":case"Shoulders_Crusader":case"Shoulders_Wizard":case"Shoulders_Monk":this.setState({shouldersItem:a});break;case"Bracers":this.setState({bracersItem:a});break;case"ChestArmor":case"GenericChestArmor":case"ChestArmor_Barbarian":case"ChestArmor_DemonHunter":case"ChestArmor_WitchDoctor":case"ChestArmor_Crusader":case"ChestArmor_Wizard":case"ChestArmor_Monk":case"Cloak":this.setState({chestItem:a});break;case"GenericLegs":case"Legs":case"Legs_Barbarian":case"Legs_DemonHunter":case"Legs_WitchDoctor":case"Legs_Crusader":case"Legs_Wizard":case"Legs_Monk":this.setState({legsItem:a});break;case"GenericBoots":case"Boots":case"Boots_Barbarian":case"Boots_DemonHunter":case"Boots_WitchDoctor":case"Boots_Crusader":case"Boots_Wizard":case"Boots_Monk":this.setState({bootsItem:a});break;case"Polearm":case"Crossbow":case"Dagger":case"Sword":case"Sword2H":case"Mace":case"Axe":case"FistWeapon":case"CeremonialKnife":case"MightyWeapon1H":case"Flail2H":case"Flail1H":case"HandXbow":case"Bow2H":case"Bow":case"Wand":case"Staff":case"Staff2H":case"CeremonialDagger":case"MightyWeapon2H":case"Mace2H":this.setState({mainItem:a});break;case"GenericGloves":case"Gloves":case"Gloves_Barbarian":case"Gloves_DemonHunter":case"Gloves_WitchDoctor":case"Gloves_Crusader":case"Gloves_Wizard":case"Gloves_Monk":this.setState({glovesItem:a});break;case"Belt":case"GenericBelt":case"Belt_Barbarian":this.setState({beltItem:a});break;case"Amulet":this.setState({amuletItem:a})}}.bind(this),error:function(a,b,c){console.error(this.state.url,b,c.toString())}.bind(this)}),console.log(this.state.itemUrl)},loadItemDataWithProps:function(a,b){this.setState({item:a}),this.setState({itemUrl:this.state.itemToolTipBase.concat(this.state.item,this.state.apiKey)}),$.ajax({url:this.state.itemUrl,dataType:"jsonp",success:function(a){switch(a.type.id){case"Ring":b===!0?this.setState({ringItemLeft:a}):this.setState({ringItemRight:a});break;case"Quiver":case"CrusaderShield":case"Shield":case"Orb":case"Source":case"Mojo":this.setState({offItem:a});break;case"Dagger":case"Sword":case"Mace":case"Axe":case"FistWeapon":case"MightyWeapon1H":case"Flail1H":case"HandXbow":case"Bow":case"Wand":case"Staff":this.setState({offItem:a})}}.bind(this),error:function(a,b,c){console.error(this.state.url,b,c.toString())}.bind(this)}),console.log(this.state.itemUrl)},checkTrigger:function(){this.state.trigger===!0&&this.state.count<2&&(setTimeout(function(){this.loadHeroesData(),this.loadHeroData(),this.getItemData()}.bind(this),250),this.setState({count:this.state.count+1}))},triggerStatCollector:function(){this.collectStats(),console.log("manual stat collector")},componentDidMount:function(){setInterval(this.checkTrigger,2e3),setInterval(this.loadHeroesData,this.props.pollInterval),setInterval(this.loadHeroData,this.props.pollInterval),setInterval(this.getItemData,this.props.pollInterval),parseInt(localStorage.getItem("paragonCdr"))||this.setState({paragonCdr:0}),parseInt(localStorage.getItem("paragonResRed"))||this.setState({paragonResRed:0}),parseInt(localStorage.getItem("paragonAtkSpd"))||this.setState({paragonAtkSpd:0}),parseInt(localStorage.getItem("paragonCritChance"))||this.setState({paragonCritChance:0}),parseInt(localStorage.getItem("paragonCritDmg"))||this.setState({paragonCritDmg:0}),parseInt(localStorage.getItem("paragonAreaDmg"))||this.setState({paragonAreaDmg:0}),parseInt(localStorage.getItem("paragonResource"))||this.setState({paragonResource:0}),parseInt(localStorage.getItem("paragonResistAll"))||this.setState({paragonResistAll:0}),parseInt(localStorage.getItem("paragonArmor"))||this.setState({paragonArmor:0}),parseInt(localStorage.getItem("paragonMaxHealth"))||this.setState({paragonMaxHealth:0})},handleChange:function(a){var b=a.target.value;this.setState({battleTag:b}),localStorage.setItem("battleTag",b),this.setState({heroes:{},count:0,items:{},skills:[],passives:[],stats:[],attributes:[],"class":{},name:{},level:{},paragon:{},time:0,toggle:"more",skillDescOpen:"",passiveDescOpen:"",setRing:!1})},setSelect:function(){var a=this.refs.select.getDOMNode().value;this.setState({selected:a}),this.setState({trigger:!0}),this.setState({count:0}),this.setState({panels:"visible"}),this.state.heroes.code?this.setState({invalid:!0}):this.setState({invalid:!1}),setInterval(function(){this.collectStats(),console.log("stat collector worker")}.bind(this),4e3)},handleBonusStatsClick:function(){return this.triggerStatCollector(),"more"!==this.state.toggle?this.setState({toggle:"more"}):this.setState({toggle:"less"})},handleSkillDescClick:function(){return"open"===this.state.skillDescOpen?this.setState({skillDescOpen:""}):this.setState({skillDescOpen:"open"})},handlePassiveDescClick:function(){return"open"===this.state.passiveDescOpen?this.setState({passiveDescOpen:""}):this.setState({passiveDescOpen:"open"})},handleItemClick:function(a){!$(a.target).hasClass("open")&&$(a.target).hasClass("toggle")?($(a.target).addClass("open"),$(a.target).parent().children().hasClass("open")&&$(a.target).parent().children().not($(a.target)).removeClass("open")):$(a.target).removeClass("open")},handleParagon:function(a){var b=$(a.target).parent(),c=$(a.target);b.hasClass("cdr")?c.hasClass("paragon-stat-increment")?this.state.paragonCdr<10&&this.setState({paragonCdr:Math.round(10*(this.state.paragonCdr+.2))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonCdr:10})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonCdr:0})):this.state.paragonCdr>0&&this.setState({paragonCdr:Math.round(10*(this.state.paragonCdr-.2))/10}):b.hasClass("resred")?c.hasClass("paragon-stat-increment")?this.state.paragonResRed<10&&this.setState({paragonResRed:Math.round(10*(this.state.paragonResRed+.2))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonResRed:10})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonResRed:0})):this.state.paragonResRed>0&&this.setState({paragonResRed:Math.round(10*(this.state.paragonResRed-.2))/10}):b.hasClass("atkspd")?c.hasClass("paragon-stat-increment")?this.state.paragonAtkSpd<10&&this.setState({paragonAtkSpd:Math.round(10*(this.state.paragonAtkSpd+.2))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonAtkSpd:10})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonAtkSpd:0})):this.state.paragonAtkSpd>0&&this.setState({paragonAtkSpd:Math.round(10*(this.state.paragonAtkSpd-.2))/10}):b.hasClass("critdmg")?c.hasClass("paragon-stat-increment")?this.state.paragonCritDmg<50&&this.setState({paragonCritDmg:Math.round(10*(this.state.paragonCritDmg+1))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonCritDmg:50})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonCritDmg:0})):this.state.paragonCritDmg>0&&this.setState({paragonCritDmg:Math.round(10*(this.state.paragonCritDmg-1))/10}):b.hasClass("critchance")?c.hasClass("paragon-stat-increment")?this.state.paragonCritChance<5&&this.setState({paragonCritChance:Math.round(10*(this.state.paragonCritChance+.1))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonCritChance:5})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonCritChance:0})):this.state.paragonCritChance>0&&this.setState({paragonCritChance:Math.round(10*(this.state.paragonCritChance-.1))/10}):b.hasClass("areadmg")?c.hasClass("paragon-stat-increment")?this.state.paragonAreaDmg<50&&this.setState({paragonAreaDmg:Math.round(10*(this.state.paragonAreaDmg+1))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonAreaDmg:50})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonAreaDmg:0})):this.state.paragonAreaDmg>0&&this.setState({paragonAreaDmg:Math.round(10*(this.state.paragonAreaDmg-1))/10}):b.hasClass("resource")?c.hasClass("paragon-stat-increment")?this.state.paragonResource<25&&this.setState({paragonResource:Math.round(10*(this.state.paragonResource+.5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonResource:25})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonResource:0})):this.state.paragonResource>0&&this.setState({paragonResource:Math.round(10*(this.state.paragonResource-.5))/10}):b.hasClass("resistall")?c.hasClass("paragon-stat-increment")?this.state.paragonResistAll<250&&this.setState({paragonResistAll:Math.round(10*(this.state.paragonResistAll+5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonResistAll:250})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonResistAll:0})):this.state.paragonResistAll>0&&this.setState({paragonResistAll:Math.round(10*(this.state.paragonResistAll-5))/10}):b.hasClass("armor")?c.hasClass("paragon-stat-increment")?this.state.paragonArmor<25&&this.setState({paragonArmor:Math.round(10*(this.state.paragonArmor+.5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonArmor:25})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonArmor:0})):this.state.paragonArmor>0&&this.setState({paragonArmor:Math.round(10*(this.state.paragonArmor-.5))/10}):b.hasClass("maxlife")&&(c.hasClass("paragon-stat-increment")?this.state.paragonMaxHealth<25&&this.setState({paragonMaxHealth:Math.round(10*(this.state.paragonMaxHealth+.5))/10}):c.hasClass("paragon-stat-max")&&!c.hasClass("maxed")?(c.addClass("maxed"),this.setState({paragonMaxHealth:25})):c.hasClass("paragon-stat-max")&&c.hasClass("maxed")?(c.removeClass("maxed"),this.setState({paragonMaxHealth:0})):this.state.paragonMaxHealth>0&&this.setState({paragonMaxHealth:Math.round(10*(this.state.paragonMaxHealth-.5))/10})),this.triggerStatCollector()},getItemData:function(){var a,b;if(this.setState({helmItem:{},amuletItem:{},chestItem:{},bootsItem:{},glovesItem:{},shouldersItem:{},legsItem:{},bracersItem:{},mainItem:{},offItem:{},beltItem:{},ringItemLeft:{},ringItemRight:{}}),this.state.items){var c=[this.state.items.neck,this.state.items.head,this.state.items.torso,this.state.items.feet,this.state.items.hands,this.state.items.shoulders,this.state.items.legs,this.state.items.bracers,this.state.items.mainHand,this.state.items.waist],d=[[this.state.items.leftFinger,"left"],[this.state.items.rightFinger,"right"],[this.state.items.offHand,null]];for(a=0;a<c.length;a++)c[a]&&(b=c[a].tooltipParams,this.loadItemData(b));for(a=0;a<d.length;a++)d[a][0]&&(b=d[a][0].tooltipParams,"left"===d[a][1]?this.loadItemDataWithProps(b,!0):this.loadItemDataWithProps(b,!1))}},skillDmgSanitize:function(a){var b="",c="",d=0,e=[];for(var f in a)a.hasOwnProperty(f)&&(c=f.toString().slice(4),parseFloat(f)&&(d=parseFloat(f)*parseFloat(a[f])),0!==d&&(b+=c+" "+Math.round(1e4*d)/100+"%<br>",e.push(d+" "+c)));return""!==b?(this.setState({skillDmgRaw:e}),b):void 0},collectStats:function(){var a,b,c,d,e,f,g=["Damage_Dealt_Percent_Bonus#Fire","Damage_Dealt_Percent_Bonus#Physical","Damage_Dealt_Percent_Bonus#Cold","Damage_Dealt_Percent_Bonus#Poison","Damage_Dealt_Percent_Bonus#Lightning","Power_Cooldown_Reduction_Percent_All","Resource_Cost_Reduction_Percent_All","Damage_Percent_Bonus_Vs_Elites","Damage_Percent_Reduction_From_Elites","Splash_Damage_Effect_Percent","Gold_PickUp_Radius","Damage_Percent_Reduction_From_Melee","Damage_Percent_Reduction_From_Ranged","Hitpoints_Max_Percent_Bonus_Item","Attacks_Per_Second_Percent"],h=[],i=1,j=1,k=1,l=1,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=[["Cain's Fate",0],["Bastions of Will",0],["Aughild's Victory",0],["Aughild's Authority",0],["Guardian's Contingency",0],["Immortal King's Call",0],["Natalya's Vengeance",0],["Tal Rasha's Elements",0],["Sage's Plight",0],["Sage's Journey",0],["Born's Defiance",0],["Born's Command",0],["Unhallowed Essence",0],["Aughild's Authority",0],["Cain's Destiny",0],["Thorns of the Invoker",0],["Might of the Earth",0],["Firebird's Finery",0],["Guardian's Jeopardy",0],["Helltooth Harness",0],["Armor of Akkhan",0],["Wrath of the Wastes",0],["Raiment of the Jade Harvester",0],["Embodiment of the Marauder",0],["Raiment of a Thousand Storms",0],["The Legacy of Raekor",0],["Roland's Legacy",0],["Delsere's Magnum Opus",0],["Monkey King's Garb",0],["Asheara's Uniform",0],["Demon's Skin",0],["Demon's Hide",0],["Asheara's Vestments",0],["Thorns of the Invoker",0],["Delsere's Magnum Opus",0],["Blackthorne's Battlegear",0],["Inna's Mantra",0],["Vyr's Amazing Arcana",0],["Krelm's Buff Bulwark",0],["The Shadow’s Mantle",0],["Endless Walk",0],["Legacy of Nightmares",0],["Hallowed Defenders",0],["Hallowed Protectors",0],["Manajuma's Way",0],["Zunimassa's Haunt",0],["Chantodo's Resolve",0],["Istvan's Paired Blades",0],["Shenlong's Spirit",0],["Bul-Kathos's Oath",0],["Danetta's Hatred",0],["Captain Crimson's Trimmings",0]];if(this.state.items){var y=[this.state.helmItem,this.state.amuletItem,this.state.chestItem,this.state.bootsItem,this.state.glovesItem,this.state.shouldersItem,this.state.legsItem,this.state.bracersItem,this.state.mainItem,this.state.offItem,this.state.beltItem,this.state.ringItemLeft,this.state.ringItemRight];for(a=0;a<y.length;a++)if(y[a]&&y[a].attributesRaw)for(b=0;b<g.length;b++)if(y[a].attributesRaw[g[b]]&&y[a].attributesRaw[g[b]].min)switch(h[b]=Math.round(1e3*y[a].attributesRaw[g[b]].min)/1e3,g[b]){case"Damage_Dealt_Percent_Bonus#Fire":p+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Cold":q+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Lightning":r+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Physical":s+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Poison":t+=100*h[b];break;case"Power_Cooldown_Reduction_Percent_All":i*=1-h[b];break;case"Resource_Cost_Reduction_Percent_All":j*=1-h[b];break;case"Damage_Percent_Bonus_Vs_Elites":m+=100*h[b];break;case"Damage_Percent_Reduction_From_Elites":n+=100*h[b];break;case"Splash_Damage_Effect_Percent":o+=100*h[b];break;case"Gold_PickUp_Radius":u+=h[b];break;case"Damage_Percent_Reduction_From_Melee":k*=1-h[b];break;case"Damage_Percent_Reduction_From_Ranged":l*=1-h[b];break;case"Hitpoints_Max_Percent_Bonus_Item":v+=100*h[b];break;case"Attacks_Per_Second_Percent":w+=h[b];break;default:console.log("default")}if(this.state["class"]&&this.state.skills&&this.state.skills.length>0){var z=[];for(d=0;d<this.state.skills.length;d++)if(this.state.skills[d].skill)switch(this.state["class"]){case"demon-hunter":z.push("Power_Damage_Percent_Bonus#DemonHunter_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"witch-doctor":z.push("Power_Damage_Percent_Bonus#Witchdoctor_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"barbarian":z.push("Power_Damage_Percent_Bonus#Barbarian_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"crusader":z.push("Power_Damage_Percent_Bonus#Crusader_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"monk":z.push("Power_Damage_Percent_Bonus#Monk_"+this.state.skills[d].skill.name.replace(/ /g,""));break;case"wizard":z.push("Power_Damage_Percent_Bonus#Wizard_"+this.state.skills[d].skill.name.replace(/ /g,""))}var A=[],B=[];for(a=0;a<y.length;a++)if(y[a]&&y[a].attributesRaw)for(b=0;b<z.length;b++)y[a].attributesRaw[z[b]]&&y[a].attributesRaw[z[b]].min&&(h[b]=Math.round(1e3*y[a].attributesRaw[z[b]].min)/1e3,Object.getOwnPropertyNames(y[a].attributesRaw[z[b]]===z[b])&&(A.push(this.state.skills[b].skill.name+" "+Math.round(1e4*y[a].attributesRaw[z[b]].min)/100+"%"),B.push(y[a].attributesRaw[z[b]].min+this.state.skills[b].skill.name),f=B.reduce(function(a,b){return b in a?a[b]++:a[b]=1,a},{})))}var C=[],D=[];for(a=0;a<y.length;a++)C.push(y[a].name),C.indexOf("Ring of Royal Grandeur")>-1?this.setState({setRing:!0}):this.setState({setRing:!1});for(a=0;a<y.length;a++)if(y[a]&&y[a].set&&y[a].set.ranks){for(d=0;d<x.length;d++)for(y[a].set.name===x[d][0]&&x[d][1]++,c=0;c<y[a].set.ranks.length;c++)if(this.state.setRing===!0&&y[a].set.name===x[d][0]&&y[a].set.ranks[c].required<=x[d][1]+1&&x[d][1]>=2){for(b=0;b<g.length;b++)if(y[a].set.ranks[c].attributesRaw[g[b]]&&y[a].set.ranks[c].attributesRaw[g[b]].min)switch(h[b]=Math.round(1e3*y[a].set.ranks[c].attributesRaw[g[b]].min)/1e3,g[b]){case"Damage_Dealt_Percent_Bonus#Fire":p+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Cold":q+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Lightning":r+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Physical":s+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Poison":t+=100*h[b];break;case"Power_Cooldown_Reduction_Percent_All":i*=1-h[b];break;case"Resource_Cost_Reduction_Percent_All":j*=1-h[b];break;case"Damage_Percent_Bonus_Vs_Elites":m+=100*h[b];break;case"Damage_Percent_Reduction_From_Elites":n+=100*h[b];break;case"Splash_Damage_Effect_Percent":o+=100*h[b];break;case"Gold_PickUp_Radius":u+=h[b];break;case"Damage_Percent_Reduction_From_Melee":k*=1-h[b];break;case"Damage_Percent_Reduction_From_Ranged":l*=1-h[b];break;case"Hitpoints_Max_Percent_Bonus_Item":v+=100*h[b];break;case"Attacks_Per_Second_Percent":w+=h[b]}}else if(this.state.setRing===!1&&y[a].set.name===x[d][0]&&y[a].set.ranks[c].required<=x[d][1])for(b=0;b<g.length;b++)if(y[a].set.ranks[c].attributesRaw[g[b]]&&y[a].set.ranks[c].attributesRaw[g[b]].min)switch(h[b]=Math.round(1e3*y[a].set.ranks[c].attributesRaw[g[b]].min)/1e3,g[b]){case"Damage_Dealt_Percent_Bonus#Fire":p+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Cold":q+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Lightning":r+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Physical":s+=100*h[b];break;case"Damage_Dealt_Percent_Bonus#Poison":t+=100*h[b];break;case"Power_Cooldown_Reduction_Percent_All":i*=1-h[b];break;case"Resource_Cost_Reduction_Percent_All":j*=1-h[b];break;case"Damage_Percent_Bonus_Vs_Elites":m+=100*h[b];break;case"Damage_Percent_Reduction_From_Elites":n+=100*h[b];break;case"Splash_Damage_Effect_Percent":o+=100*h[b];break;case"Gold_PickUp_Radius":u+=h[b];break;case"Damage_Percent_Reduction_From_Melee":k*=1-h[b];break;case"Damage_Percent_Reduction_From_Ranged":l*=1-h[b];break;case"Hitpoints_Max_Percent_Bonus_Item":v+=100*h[b];break;case"Attacks_Per_Second_Percent":w+=h[b]}if(D.indexOf(y[a].set.name)>-1)continue;D.push(y[a].set.name)}this.state.helmItem&&this.state.helmItem.gems&&this.state.helmItem.gems[0]&&this.state.helmItem.attributesRaw&&(this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All&&this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier?i*=1-this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All.min-this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All.min*this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier.min:this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All&&!this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier&&(i*=1-this.state.helmItem.gems[0].attributesRaw.Power_Cooldown_Reduction_Percent_All.min),this.state.helmItem.gems[0].attributesRaw.Hitpoints_Max_Percent_Bonus_Item&&this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier?v+=100*this.state.helmItem.gems[0].Hitpoints_Max_Percent_Bonus_Item.min+100*this.state.helmItem.gems[0].Hitpoints_Max_Percent_Bonus_Item.min*this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier.min:this.state.helmItem.gems[0].attributesRaw.Hitpoints_Max_Percent_Bonus_Item&&!this.state.helmItem.attributesRaw.Gem_Attributes_Multiplier&&(v+=100*this.state.helmItem.gems[0].Hitpoints_Max_Percent_Bonus_Item.min));var E,F=[p,t,r,s,q],G=F.reduce(function(a,b){return a>=b?a:b},-(1/0));switch(G){case p:E="Fire Damage Increase: "+Math.round(100*G)/100+"%";break;case q:E="Cold Damage Increase: "+Math.round(100*G)/100+"%";break;case s:E="Physical Damage Increase: "+Math.round(100*G)/100+"%";break;case r:E="Lightning Damage Increase: "+Math.round(100*G)/100+"%";break;case t:E="Poison Damage Increase: "+Math.round(100*G)/100+"%"}i*=1-this.state.paragonCdr/100,j*=1-this.state.paragonResRed/100,v+=this.state.paragonMaxHealth,e=this.skillDmgSanitize(f),0!==G?(this.setState({maxEleDmg:E}),this.setState({maxEleDmgValue:G})):(this.setState({maxEleDmg:""}),this.setState({maxEleDmgValue:0})),this.setState({cdrRed:i}),this.setState({resRed:j}),this.setState({eliteDmg:m}),this.setState({eliteDmgRed:n}),this.setState({areaDmg:o}),this.setState({goldPickup:u}),this.setState({dmgRedMelee:k}),this.setState({dmgRedRanged:l}),this.setState({maxHealth:v}),this.setState({skillDmg:e}),this.setState({atkSpd:w})}},render:function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w=this.state.skills,x=[],y=[],z=this.state.passives,A=[],B=[],C=this.state.stats,D=[],E=this.state.name,F=[],G=this.state.heroes,H=this.state.items,I=this.state["class"],J=this.state.level,K=this.state.paragon,L=this.state.amuletItem,M=this.state.shouldersItem,N=[],O=this.state.helmItem,P=[],Q=this.state.chestItem,R=[],S=this.state.glovesItem,T=[],U=this.state.bootsItem,V=[],W=this.state.bracersItem,X=[],Y=this.state.legsItem,Z=[],$=this.state.mainItem,_=[],aa=this.state.offItem,ba=[],ca=this.state.beltItem,da=[],ea=this.state.amuletItem,fa=[],ga=this.state.ringItemLeft,ha=[],ia=[],ja=this.state.ringItemRight,ka=[],la=[],ma=[],na=this.state.items,oa=[],pa=this.state.skillIconBase,qa=this.state.itemIconBase,ra=this.state.toggleItem,sa=this.state.time,ta=[],ua=[],va=this.state.cdrRed,wa=this.state.resRed,xa=this.state.eliteDmg,ya=this.state.eliteDmgRed,za=this.state.areaDmg,Aa=this.state.goldPickup,Ba=this.state.dmgRedMelee,Ca=this.state.dmgRedRanged,Da=this.state.maxEleDmg,Ea=this.state.maxHealth,Fa=this.state.skillDmg,Ga=this.state.skillDmgRaw,Ha=this.state.atkSpd,Ia=[],Ja=this.state.paragonCdr,Ka=this.state.paragonAtkSpd,La=this.state.paragonResRed,Ma=this.state.paragonCritDmg,Na=this.state.paragonCritChance,Oa=this.state.paragonAreaDmg,Pa=this.state.paragonResource,Qa=this.state.paragonResistAll,Ra=this.state.paragonArmor,Sa=this.state.paragonMaxHealth,Ta="Damage_Weapon_Percent_All",Ua="Damage_Weapon_Bonus_Min_X1#Physical",Va=0,Wa=0,Xa=0,Ya=["Damage_Weapon_Min#Arcane","Damage_Weapon_Min#Fire","Damage_Weapon_Min#Lightning","Damage_Weapon_Min#Cold","Damage_Weapon_Min#Poison","Damage_Weapon_Bonus_Min_X1#Physical"],Za=["Damage_Weapon_Delta#Arcane","Damage_Weapon_Delta#Fire","Damage_Weapon_Delta#Lightning","Damage_Weapon_Delta#Cold","Damage_Weapon_Delta#Poison","Damage_Weapon_Bonus_Delta_X1#Physical"],$a=[["Cain's Fate",0],["Bastions of Will",0],["Aughild's Victory",0],["Aughild's Authority",0],["Guardian's Contingency",0],["Immortal King's Call",0],["Natalya's Vengeance",0],["Tal Rasha's Elements",0],["Sage's Plight",0],["Sage's Journey",0],["Born's Defiance",0],["Born's Command",0],["Unhallowed Essence",0],["Aughild's Authority",0],["Cain's Destiny",0],["Thorns of the Invoker",0],["Might of the Earth",0],["Firebird's Finery",0],["Guardian's Jeopardy",0],["Helltooth Harness",0],["Armor of Akkhan",0],["Wrath of the Wastes",0],["Raiment of the Jade Harvester",0],["Embodiment of the Marauder",0],["Raiment of a Thousand Storms",0],["The Legacy of Raekor",0],["Roland's Legacy",0],["Delsere's Magnum Opus",0],["Monkey King's Garb",0],["Asheara's Uniform",0],["Demon's Skin",0],["Demon's Hide",0],["Asheara's Vestments",0],["Thorns of the Invoker",0],["Delsere's Magnum Opus",0],["Blackthorne's Battlegear",0],["Inna's Mantra",0],["Vyr's Amazing Arcana",0],["Krelm's Buff Bulwark",0],["The Shadow's Mantle",0],["Endless Walk",0],["Legacy of Nightmares",0],["Hallowed Defenders",0],["Hallowed Protectors",0],["Manajuma's Way",0],["Zunimassa's Haunt",0],["Chantodo's Resolve",0],["Istvan's Paired Blades",0],["Shenlong's Spirit",0],["Bul-Kathos's Oath",0],["Danetta's Hatred",0],["Captain Crimson's Trimmings",0]],_a=[["Cull the Weak","Damage",.2],["Single Out","Crit Chance",.25],["Archery","Damage",.08],["Archery","Crit Damage",.5],["Archery","Crit Chance",.05],["Custom Engineering","Sentries",2],["Ambush","Damage",.4],["Ballistics","Damage",1],["Sharpshooter","Crit Chance",.04],["Grenadier","Damage",.1],["Steady Aim","Damage",.2]],ab=[["Bait the Trap","Crit Chance",.1],["Wolf Companion","Damage",.3]],bb=[this.state.helmItem,this.state.amuletItem,this.state.chestItem,this.state.bootsItem,this.state.glovesItem,this.state.shouldersItem,this.state.legsItem,this.state.bracersItem,this.state.mainItem,this.state.offItem,this.state.beltItem,this.state.ringItemLeft,this.state.ringItemRight];for(r=0;r<bb.length;r++)for(t=0;t<$a.length;t++)bb[r]&&bb[r].set&&bb[r].set.name===$a[t][0]&&$a[t][1]++;switch(I){case"demon-hunter":ma={backgroundImage:'url("../../assets/images/dh.png")'};break;case"witch-doctor":ma={backgroundImage:'url("../../assets/images/wd.png")'};break;case"barbarian":ma={backgroundImage:'url("../../assets/images/barbarian.png")'};break;case"crusader":ma={backgroundImage:'url("../../assets/images/crusader.png")'};break;case"monk":ma={backgroundImage:'url("../../assets/images/monk.png")'};break;case"wizard":ma={backgroundImage:'url("../../assets/images/wiz.jpg")'};break;default:ma={backgroundImage:"none"}}if(G.heroes?(F.push(React.DOM.option({key:G.heroes.key,value:"",style:{display:"none"}},"click to select hero")),G.heroes.forEach(function(a){F.push(React.DOM.option({key:G.heroes.key,value:a.id},"["+a["class"]+"] "+a.name+" (id: "+a.id+")"))})):G.code?F.push(React.DOM.option({key:G.code.key,value:"",style:{display:"none"}},"invalid battleTag")):null===this.state.battleTag||""===this.state.battleTag?F.push(React.DOM.option({value:"",style:{display:"none"}},"enter your battleTag in the field below")):F.push(React.DOM.option({value:"",style:{display:"none"}},"loading herolist...")),E&&I&&J&&(la.push(React.DOM.div({key:E.key},"Name: ",E)),la.push(React.DOM.div({key:I.key},"Class: ",I.toString().replace(/-/g,"").charAt(0).toUpperCase()+I.toString().replace(/-/g,"").slice(1).toLowerCase())),la.push(React.DOM.div({key:J.key},"Level: ",J)),K&&la.push(React.DOM.div({key:K.key},"Paragon: ",K))),sa&&1e3*sa!==0){var cb=new Date(1e3*sa),db=cb.toLocaleDateString()+" - "+cb.toLocaleTimeString();la.push(React.DOM.div({key:sa.key,className:"last-updated"},"last-updated on: "+db))}if(w!==[]&&w.forEach(function(b){var c;if(b.rune){switch(a=pa.concat(b.skill.icon),b.rune.type){case"a":c={backgroundPosition:"0 0"};break;case"b":c={backgroundPosition:"0 25%"};break;case"c":c={backgroundPosition:"0 49%"};break;case"d":c={backgroundPosition:"0 73%"};break;case"e":c={backgroundPosition:"0 97%"}}x.push(React.DOM.div({key:w.key,className:"hasIcon"},b.skill.name," with ",b.rune.name,React.DOM.div({key:w.key,className:"icon-front",style:{backgroundImage:"url("+a+".png)"}}),React.DOM.div({key:w.key,className:"icon-back",style:c}))),y.push(React.DOM.div({key:w.key,className:"description"},React.DOM.div({key:w.key,className:"desc-icon",style:{backgroundImage:"url("+a+".png)"}}),b.skill.name+" with "+b.rune.name,React.DOM.p({dangerouslySetInnerHTML:{__html:b.skill.description.replace(/\n/g,"<br/>")},key:w.key,className:"skill-desc"}),React.DOM.p({dangerouslySetInnerHTML:{__html:b.rune.description.replace(/\n/g,"<br/>")},key:w.key,className:"rune-desc"})))}else b.skill&&(a=pa.concat(b.skill.icon),x.push(React.DOM.div({key:w.key,className:"hasIcon"},b.skill.name,React.DOM.div({key:w.key,className:"icon-front no-rune",style:{backgroundImage:"url("+a+".png)"}}))),y.push(React.DOM.div({key:w.key,className:"description"},React.DOM.div({key:w.key,className:"desc-icon",style:{backgroundImage:"url("+a+".png)"}}),b.skill.name,React.DOM.p({dangerouslySetInnerHTML:{__html:b.skill.description.replace(/\n/g,"<br/>")},key:w.key,className:"skill-desc"}))))}),z!==[]&&z.forEach(function(b){b.skill&&(a=pa.concat(b.skill.icon),A.push(React.DOM.div({key:z.key,className:"hasIcon"},b.skill.name,React.DOM.div({key:z.key,className:"icon",style:{backgroundImage:"url("+a+".png)"}}))),B.push(React.DOM.div({key:z.key,className:"description"},React.DOM.div({key:z.key,className:"desc-icon",style:{backgroundImage:"url("+a+".png)"}}),b.skill.name,React.DOM.p({dangerouslySetInnerHTML:{__html:b.skill.description.replace(/\n/g,"<br/>")},key:z.key,className:"passive-desc"}))))}),na&&na.head&&O){switch(a=qa.concat(na.head.icon,".png"),H.head.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(O.attributesRaw&&(O.attributesRaw.Ancient_Rank&&1===O.attributesRaw.Ancient_Rank.min?(c="ancient",P.push(React.DOM.li({key:O.key,className:b+" name"},c+" "+H.head.name))):(c="",
P.push(React.DOM.li({key:O.key,className:b+" name"},H.head.name)))),O.attributes&&(O.attributes.primary&&O.attributes.primary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"primary"},a.text))}),O.attributes.secondary&&O.attributes.secondary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"secondary"},a.text))}),O.attributes.passive&&O.attributes.passive.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"passive"},a.text))})),O.set&&O.set.ranks)for(r=0;r<O.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)O.set.name===$a[t][0]&&this.state.setRing?e=$a[t][1]>=2?$a[t][1]++:$a[t][1]:O.set.name!==$a[t][0]||this.state.setRing||(e=$a[t][1]);O.set.ranks[r].required===s&&O.set.ranks[r].required<=e?O.set.ranks[r].attributes.primary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+s},a.text))}):O.set.ranks[r].required===s&&O.set.ranks[r].attributes.primary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+s+" inactive"},a.text))}),O.set.ranks[r].required===s&&O.set.ranks[r].required<=e?O.set.ranks[r].attributes.secondary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+s},a.text))}):O.set.ranks[r].required===s&&O.set.ranks[r].attributes.secondary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+s+" inactive"},a.text))}),O.set.ranks[r].required===s&&O.set.ranks[r].required<=e?O.set.ranks[r].attributes.passive.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+s},a.text))}):O.set.ranks[r].required===s&&O.set.ranks[r].attributes.passive.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"set-bonus-"+s+" inactive"},a.text))})}O.attributesRaw&&O.attributesRaw.Sockets&&O.gems[0]&&(d=qa.concat(O.gems[0].item.icon,".png"),P.push(React.DOM.li({key:O.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),O.gems[0].attributes.primary&&O.gems[0].attributes.primary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"gem-passive"},a.text))}),O.gems[0].attributes.secondary&&O.gems[0].attributes.secondary.forEach(function(a){P.push(React.DOM.li({key:O.key,className:"gem-passive"},a.text))})),oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" head",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:O.key,className:"desc"},React.DOM.ul({key:O.key,className:"stats"},P))))}if(na&&na.torso&&Q){switch(a=qa.concat(na.torso.icon,".png"),H.torso.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(Q.attributesRaw&&(Q.attributesRaw.Ancient_Rank&&1===Q.attributesRaw.Ancient_Rank.min?(c="ancient",R.push(React.DOM.li({key:Q.key,className:b+" name"},c+" "+H.torso.name))):(c="",R.push(React.DOM.li({key:Q.key,className:b+" name"},H.torso.name)))),Q.attributes&&(Q.attributes.primary&&Q.attributes.primary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"primary"},a.text))}),Q.attributes.secondary&&Q.attributes.secondary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"secondary"},a.text))}),Q.attributes.passive&&Q.attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"passive"},a.text))})),Q.set&&Q.set.ranks)for(r=0;r<Q.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)Q.set.name===$a[t][0]&&this.state.setRing?f=$a[t][1]>=2?$a[t][1]++:$a[t][1]:Q.set.name!==$a[t][0]||this.state.setRing||(f=$a[t][1]);Q.set.ranks[r].required===s&&Q.set.ranks[r].required<=f?Q.set.ranks[r].attributes.primary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+s},a.text))}):Q.set.ranks[r].required===s&&Q.set.ranks[r].attributes.primary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+s+" inactive"},a.text))}),Q.set.ranks[r].required===s&&Q.set.ranks[r].required<=f?Q.set.ranks[r].attributes.secondary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+s},a.text))}):Q.set.ranks[r].required===s&&Q.set.ranks[r].attributes.secondary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+s+" inactive"},a.text))}),Q.set.ranks[r].required===s&&Q.set.ranks[r].required<=f?Q.set.ranks[r].attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+s},a.text))}):Q.set.ranks[r].required===s&&Q.set.ranks[r].attributes.passive.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"set-bonus-"+s+" inactive"},a.text))})}Q.attributesRaw&&Q.attributesRaw.Sockets&&Q.gems[0]?(d=qa.concat(Q.gems[0].item.icon,".png"),Q.gems[0].attributes.primary&&Q.gems[0].attributes.primary.forEach(function(a){R.push(React.DOM.li({key:Q.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),R.push(React.DOM.li({key:Q.key,className:"gem-passive"},a.text)),R.push(React.DOM.li({key:Q.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),R.push(React.DOM.li({key:Q.key,className:"gem-passive"},a.text)),R.push(React.DOM.li({key:Q.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),R.push(React.DOM.li({key:Q.key,className:"gem-passive"},a.text))})):Q.attributesRaw&&Q.attributesRaw.Sockets&&(R.push(React.DOM.li({key:Q.key,className:"socket"})),R.push(React.DOM.li({key:Q.key,className:"socket"})),R.push(React.DOM.li({key:Q.key,className:"socket"}))),oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" torso",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:Q.key,className:"desc"},React.DOM.ul({key:Q.key,className:"stats"},R))))}if(na&&na.hands&&S){switch(a=qa.concat(na.hands.icon,".png"),H.hands.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(S.attributesRaw&&(S.attributesRaw.Ancient_Rank&&1===S.attributesRaw.Ancient_Rank.min?(c="ancient",T.push(React.DOM.li({key:S.key,className:b+" name"},c+" "+H.hands.name))):(c="",T.push(React.DOM.li({key:S.key,className:b+" name"},H.hands.name)))),S.attributes&&(S.attributes.primary&&S.attributes.primary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"primary"},a.text))}),S.attributes.secondary&&S.attributes.secondary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"secondary"},a.text))}),S.attributes.passive&&S.attributes.passive.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"passive"},a.text))})),S.set&&S.set.ranks)for(r=0;r<S.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)S.set.name===$a[t][0]&&this.state.setRing?g=$a[t][1]>=2?$a[t][1]++:$a[t][1]:S.set.name!==$a[t][0]||this.state.setRing||(g=$a[t][1]);S.set.ranks[r].required===s&&S.set.ranks[r].required<=g?S.set.ranks[r].attributes.primary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"set-bonus-"+s},a.text))}):S.set.ranks[r].required===s&&S.set.ranks[r].attributes.primary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"set-bonus-"+s+" inactive"},a.text))}),S.set.ranks[r].required===s&&S.set.ranks[r].required<=g?S.set.ranks[r].attributes.secondary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"set-bonus-"+s},a.text))}):S.set.ranks[r].required===s&&S.set.ranks[r].attributes.secondary.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"set-bonus-"+s+" inactive"},a.text))}),S.set.ranks[r].required===s&&S.set.ranks[r].required<=g?S.set.ranks[r].attributes.passive.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"set-bonus-"+s},a.text))}):S.set.ranks[r].required===s&&S.set.ranks[r].attributes.passive.forEach(function(a){T.push(React.DOM.li({key:S.key,className:"set-bonus-"+s+" inactive"},a.text))})}oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" hands",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:S.key,className:"desc"},React.DOM.ul({key:S.key,className:"stats"},T))))}if(na&&na.feet&&U){switch(a=qa.concat(na.feet.icon,".png"),H.feet.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(U.attributesRaw&&(U.attributesRaw.Ancient_Rank&&1===U.attributesRaw.Ancient_Rank.min?(c="ancient",V.push(React.DOM.li({key:U.key,className:b+" name"},c+" "+H.feet.name))):(c="",V.push(React.DOM.li({key:U.key,className:b+" name"},H.feet.name)))),U.attributes&&(U.attributes.primary&&U.attributes.primary.forEach(function(a){V.push(React.DOM.li({key:U.key,className:"primary"},a.text))}),U.attributes.secondary&&U.attributes.secondary.forEach(function(a){V.push(React.DOM.li({key:U.key,className:"secondary"},a.text))}),U.attributes.passive&&U.attributes.passive.forEach(function(a){V.push(React.DOM.li({key:U.key,className:"passive"},a.text))})),U.set&&U.set.ranks)for(r=0;r<U.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)U.set.name===$a[t][0]&&this.state.setRing?h=$a[t][1]>=2?$a[t][1]++:$a[t][1]:U.set.name!==$a[t][0]||this.state.setRing||(h=$a[t][1]);U.set.ranks[r].required===s&&U.set.ranks[r].required<=h?U.set.ranks[r].attributes.primary.forEach(function(a){V.push(React.DOM.li({key:U.key,className:"set-bonus-"+s},a.text))}):U.set.ranks[r].required===s&&U.set.ranks[r].attributes.primary.forEach(function(a){V.push(React.DOM.li({key:U.key,className:"set-bonus-"+s+" inactive"},a.text))}),U.set.ranks[r].required===s&&U.set.ranks[r].required<=h?U.set.ranks[r].attributes.secondary.forEach(function(a){V.push(React.DOM.li({key:U.key,className:"set-bonus-"+s},a.text))}):U.set.ranks[r].required===s&&U.set.ranks[r].attributes.secondary.forEach(function(a){V.push(React.DOM.li({key:U.key,className:"set-bonus-"+s+" inactive"},a.text))}),U.set.ranks[r].required===s&&U.set.ranks[r].required<=h?U.set.ranks[r].attributes.passive.forEach(function(a){V.push(React.DOM.li({key:U.key,className:"set-bonus-"+s},a.text))}):U.set.ranks[r].required===s&&U.set.ranks[r].attributes.passive.forEach(function(a){V.push(React.DOM.li({key:U.key,className:"set-bonus-"+s+" inactive"},a.text))})}oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" feet",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:U.key,className:"desc"},React.DOM.ul({key:U.key,className:"stats"},V))))}if(na&&na.shoulders&&M){switch(a=qa.concat(na.shoulders.icon,".png"),H.shoulders.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(M.attributesRaw&&(M.attributesRaw.Ancient_Rank&&1===M.attributesRaw.Ancient_Rank.min?(c="ancient",N.push(React.DOM.li({key:M.key,className:b+" name"},c+" "+H.shoulders.name))):(c="",N.push(React.DOM.li({key:M.key,className:b+" name"},H.shoulders.name)))),M.attributes&&(M.attributes.primary&&M.attributes.primary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"primary"},a.text))}),M.attributes.secondary&&M.attributes.secondary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"secondary"},a.text))}),M.attributes.passive&&M.attributes.passive.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"passive"},a.text))})),M.set&&M.set.ranks)for(r=0;r<M.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)M.set.name===$a[t][0]&&this.state.setRing?i=$a[t][1]>=2?$a[t][1]++:$a[t][1]:M.set.name!==$a[t][0]||this.state.setRing||(i=$a[t][1]);M.set.ranks[r].required===s&&M.set.ranks[r].required<=i?M.set.ranks[r].attributes.primary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+s},a.text))}):M.set.ranks[r].required===s&&M.set.ranks[r].attributes.primary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+s+" inactive"},a.text))}),M.set.ranks[r].required===s&&M.set.ranks[r].required<=i?M.set.ranks[r].attributes.secondary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+s},a.text))}):M.set.ranks[r].required===s&&M.set.ranks[r].attributes.secondary.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+s+" inactive"},a.text))}),M.set.ranks[r].required===s&&M.set.ranks[r].required<=i?M.set.ranks[r].attributes.passive.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+s},a.text))}):M.set.ranks[r].required===s&&M.set.ranks[r].attributes.passive.forEach(function(a){N.push(React.DOM.li({key:M.key,className:"set-bonus-"+s+" inactive"},a.text))})}oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" shoulders",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:M.key,className:"desc"},React.DOM.ul({key:M.key,className:"stats"},N))))}if(na&&na.legs&&Y){switch(a=qa.concat(na.legs.icon,".png"),H.legs.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(Y.attributesRaw&&(Y.attributesRaw.Ancient_Rank&&1===Y.attributesRaw.Ancient_Rank.min?(c="ancient",Z.push(React.DOM.li({key:Y.key,className:b+" name"},c+" "+H.legs.name))):(c="",Z.push(React.DOM.li({key:Y.key,className:b+" name"},H.legs.name)))),Y.attributes&&(Y.attributes.primary&&Y.attributes.primary.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"primary"},a.text))}),Y.attributes.secondary&&Y.attributes.secondary.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"secondary"},a.text))}),Y.attributes.passive&&Y.attributes.passive.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"passive"},a.text))})),Y.set&&Y.set.ranks)for(r=0;r<Y.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)Y.set.name===$a[t][0]&&this.state.setRing?j=$a[t][1]>=2?$a[t][1]++:$a[t][1]:Y.set.name!==$a[t][0]||this.state.setRing||(j=$a[t][1]);Y.set.ranks[r].required===s&&Y.set.ranks[r].required<=j?Y.set.ranks[r].attributes.primary.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"set-bonus-"+s},a.text))}):Y.set.ranks[r].required===s&&Y.set.ranks[r].attributes.primary.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"set-bonus-"+s+" inactive"},a.text))}),Y.set.ranks[r].required===s&&Y.set.ranks[r].required<=j?Y.set.ranks[r].attributes.secondary.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"set-bonus-"+s},a.text))}):Y.set.ranks[r].required===s&&Y.set.ranks[r].attributes.secondary.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"set-bonus-"+s+" inactive"},a.text))}),Y.set.ranks[r].required===s&&Y.set.ranks[r].required<=j?Y.set.ranks[r].attributes.passive.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"set-bonus-"+s},a.text))}):Y.set.ranks[r].required===s&&Y.set.ranks[r].attributes.passive.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"set-bonus-"+s+" inactive"},a.text))})}Y.attributesRaw&&Y.attributesRaw.Sockets&&Y.gems[0]?(d=qa.concat(Y.gems[0].item.icon,".png"),Y.gems[0].attributes.primary&&Y.gems[0].attributes.primary.forEach(function(a){Z.push(React.DOM.li({key:Y.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),Z.push(React.DOM.li({key:Y.key,className:"gem-passive"},a.text)),Z.push(React.DOM.li({key:Y.key,className:"socket",style:{backgroundImage:"url("+d+")"}})),Z.push(React.DOM.li({key:Y.key,className:"gem-passive"},a.text))})):Y.attributesRaw&&Y.attributesRaw.Sockets&&(Z.push(React.DOM.li({key:Y.key,className:"socket"})),Z.push(React.DOM.li({key:Y.key,className:"socket"}))),oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" legs",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:Y.key,className:"desc"},React.DOM.ul({key:Y.key,className:"stats"},Z))))}if(na&&na.bracers&&W){switch(a=qa.concat(na.bracers.icon,".png"),H.bracers.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(W.attributesRaw&&(W.attributesRaw.Ancient_Rank&&1===W.attributesRaw.Ancient_Rank.min?(c="ancient",X.push(React.DOM.li({key:W.key,className:b+" name"},c+" "+H.bracers.name))):(c="",X.push(React.DOM.li({key:W.key,className:b+" name"},H.bracers.name)))),W.attributes&&(W.attributes.primary&&W.attributes.primary.forEach(function(a){X.push(React.DOM.li({key:W.key,className:"primary"},a.text))}),W.attributes.secondary&&W.attributes.secondary.forEach(function(a){X.push(React.DOM.li({key:W.key,className:"secondary"},a.text))}),W.attributes.passive&&W.attributes.passive.forEach(function(a){X.push(React.DOM.li({key:W.key,className:"passive"},a.text))})),W.set&&W.set.ranks)for(r=0;r<W.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)W.set.name===$a[t][0]&&this.state.setRing?k=$a[t][1]>=2?$a[t][1]++:$a[t][1]:W.set.name!==$a[t][0]||this.state.setRing||(k=$a[t][1]);W.set.ranks[r].required===s&&W.set.ranks[r].required<=k?W.set.ranks[r].attributes.primary.forEach(function(a){X.push(React.DOM.li({key:W.key,className:"set-bonus-"+s},a.text))}):W.set.ranks[r].required===s&&W.set.ranks[r].attributes.primary.forEach(function(a){X.push(React.DOM.li({key:W.key,className:"set-bonus-"+s+" inactive"},a.text))}),W.set.ranks[r].required===s&&W.set.ranks[r].required<=k?W.set.ranks[r].attributes.secondary.forEach(function(a){X.push(React.DOM.li({key:W.key,className:"set-bonus-"+s},a.text))}):W.set.ranks[r].required===s&&W.set.ranks[r].attributes.secondary.forEach(function(a){X.push(React.DOM.li({key:W.key,className:"set-bonus-"+s+" inactive"},a.text))}),W.set.ranks[r].required===s&&W.set.ranks[r].required<=k?W.set.ranks[r].attributes.passive.forEach(function(a){X.push(React.DOM.li({key:W.key,className:"set-bonus-"+s},a.text))}):W.set.ranks[r].required===s&&W.set.ranks[r].attributes.passive.forEach(function(a){X.push(React.DOM.li({key:W.key,className:"set-bonus-"+s+" inactive"},a.text))})}oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" bracers",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:W.key,className:"desc"},React.DOM.ul({key:W.key,className:"stats"},X))))}if(na&&na.mainHand&&$){switch(a=qa.concat(na.mainHand.icon,".png"),H.mainHand.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if($.attributesRaw&&$.type){var eb="";eb=$.type.twoHanded===!0?"(2h)":"(1h)",$.attributesRaw.Ancient_Rank&&1===$.attributesRaw.Ancient_Rank.min?(c="ancient",_.push(React.DOM.li({key:$.key,className:b+" name"},c+" "+H.mainHand.name+" "+eb))):(c="",_.push(React.DOM.li({key:$.key,className:b+" name"},H.mainHand.name+" "+eb)))}if($.dps&&_.push(React.DOM.li({key:$.key,className:"dps"},$.dps.max.toString().substring(0,7)+" DPS")),$.minDamage&&$.maxDamage&&$.attributesRaw)for(r=0;r<Ya.length;r++)$.attributesRaw[Ya[r]]&&($.attributesRaw[Ta]&&!$.attributesRaw[Ua]?(Wa=$.minDamage.max+$.attributesRaw[Ya[r]].max+$.attributesRaw[Ya[r]].max*$.attributesRaw[Ta].max,Xa=$.maxDamage.max+$.attributesRaw[Ya[r]].max+$.attributesRaw[Za[r]].max+($.attributesRaw[Ya[r]].max+$.attributesRaw[Za[r]].max)*$.attributesRaw[Ta].max,_.push(React.DOM.li({key:$.key,className:"raw-damage"},Math.round(Wa)+" - "+Math.round(Xa)+" Damage"))):$.attributesRaw[Ta]||$.attributesRaw[Ua]?(Wa=$.minDamage.max,Xa=$.maxDamage.max,_.push(React.DOM.li({key:$.key,className:"raw-damage"},Math.round(Wa)+" - "+Math.round(Xa)+" Damage"))):(Wa=$.minDamage.max+$.attributesRaw[Ya[r]].max,Xa=$.maxDamage.max+$.attributesRaw[Ya[r]].max+$.attributesRaw[Za[r]].max,_.push(React.DOM.li({key:$.key,className:"raw-damage"},Math.round(Wa)+" - "+Math.round(Xa)+" Damage"))));if($.attributes&&($.attributes.primary&&$.attributes.primary.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"primary"},a.text))}),$.attributes.secondary&&$.attributes.secondary.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"secondary"},a.text))}),$.attributes.passive&&$.attributes.passive.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"passive"},a.text))})),$.set&&$.set.ranks)for(r=0;r<$.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)$.set.name===$a[t][0]&&this.state.setRing?l=$a[t][1]>=2?$a[t][1]++:$a[t][1]:$.set.name!==$a[t][0]||this.state.setRing||(l=$a[t][1]);$.set.ranks[r].required===s&&$.set.ranks[r].required<=l?$.set.ranks[r].attributes.primary.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"set-bonus-"+s},a.text))}):$.set.ranks[r].required===s&&$.set.ranks[r].attributes.primary.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"set-bonus-"+s+" inactive"},a.text))}),$.set.ranks[r].required===s&&$.set.ranks[r].required<=l?$.set.ranks[r].attributes.secondary.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"set-bonus-"+s},a.text))}):$.set.ranks[r].required===s&&$.set.ranks[r].attributes.secondary.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"set-bonus-"+s+" inactive"},a.text))}),$.set.ranks[r].required===s&&$.set.ranks[r].required<=l?$.set.ranks[r].attributes.passive.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"set-bonus-"+s},a.text))}):$.set.ranks[r].required===s&&$.set.ranks[r].attributes.passive.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"set-bonus-"+s+" inactive"},a.text))})}$.attributesRaw&&$.attributesRaw.Sockets&&$.gems[0]?($.gems[0].attributesRaw.Jewel_Rank?$.gems[0].attributesRaw.Jewel_Rank&&(d=qa.concat($.gems[0].item.icon,".png"),_.push(React.DOM.li({key:$.key,className:"socket",style:{backgroundImage:"url("+d+")"}},React.DOM.span({key:$.key,className:"gem-level"},$.gems[0].attributesRaw.Jewel_Rank.min)))):(d=qa.concat($.gems[0].item.icon,".png"),_.push(React.DOM.li({key:$.key,className:"socket",style:{backgroundImage:"url("+d+")"}}))),$.gems[0].attributes.primary&&$.gems[0].attributes.primary.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"gem-passive"},a.text))}),$.gems[0].attributes.passive&&$.gems[0].attributes.passive.forEach(function(a){_.push(React.DOM.li({key:$.key,className:"gem-passive"},a.text))})):$.attributesRaw&&$.attributesRaw.Sockets&&_.push(React.DOM.li({key:$.key,className:"socket"})),oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" mainHand",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:$.key,className:"desc"},React.DOM.ul({key:$.key,className:"stats"},_))))}if(na&&na.offHand&&aa){switch(a=qa.concat(na.offHand.icon,".png"),H.offHand.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(aa.attributesRaw&&aa.type){var fb="";fb=aa.type.twoHanded===!0?"(2h)":aa.type.twoHanded!==!0&&aa.dps?"(1h)":"",aa.attributesRaw.Ancient_Rank&&1===aa.attributesRaw.Ancient_Rank.min?(c="ancient",ba.push(React.DOM.li({key:aa.key,className:b+" name"},c+" "+H.offHand.name+" "+fb))):(c="",ba.push(React.DOM.li({key:aa.key,className:b+" name"},H.offHand.name+" "+fb)))}if(aa.dps&&ba.push(React.DOM.li({key:aa.key,className:"dps"},aa.dps.max.toString().substring(0,8)+" DPS")),aa.minDamage&&aa.maxDamage&&aa.attributesRaw)for(r=0;r<Ya.length;r++)aa.attributesRaw[Ya[r]]&&(aa.attributesRaw[Ta]&&!aa.attributesRaw[Ua]?ba.push(React.DOM.li({key:aa.key,className:"raw-damage"},Math.round(aa.minDamage.max+aa.attributesRaw[Ya[r]].max+aa.attributesRaw[Ya[r]].max*aa.attributesRaw[Ta].max)+" - "+Math.round(aa.maxDamage.max+aa.attributesRaw[Ya[r]].max+aa.attributesRaw[Za[r]].max+(aa.attributesRaw[Ya[r]].max+aa.attributesRaw[Za[r]].max)*aa.attributesRaw[Ta].max)+" Damage")):aa.attributesRaw[Ta]||aa.attributesRaw[Ua]?ba.push(React.DOM.li({key:aa.key,className:"raw-damage"},Math.round(aa.minDamage.max)+" - "+Math.round(aa.maxDamage.max)+" Damage")):ba.push(React.DOM.li({key:aa.key,className:"raw-damage"},Math.round(aa.minDamage.max+aa.attributesRaw[Ya[r]].max)+" - "+Math.round(aa.maxDamage.max+aa.attributesRaw[Ya[r]].max+aa.attributesRaw[Za[r]].max)+" Damage")));if(aa.attributes&&(aa.attributes.primary&&aa.attributes.primary.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"primary"},a.text))}),aa.attributes.secondary&&aa.attributes.secondary.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"secondary"},a.text))}),aa.attributes.passive&&aa.attributes.passive.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"passive"},a.text))})),aa.set&&aa.set.ranks)for(r=0;r<aa.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)aa.set.name===$a[t][0]&&this.state.setRing?m=$a[t][1]>=2?$a[t][1]++:$a[t][1]:aa.set.name!==$a[t][0]||this.state.setRing||(m=$a[t][1]);aa.set.ranks[r].required===s&&aa.set.ranks[r].required<=m?aa.set.ranks[r].attributes.primary.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"set-bonus-"+s},a.text))}):aa.set.ranks[r].required===s&&aa.set.ranks[r].attributes.primary.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"set-bonus-"+s+" inactive"},a.text))}),aa.set.ranks[r].required===s&&aa.set.ranks[r].required<=m?aa.set.ranks[r].attributes.secondary.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"set-bonus-"+s},a.text))}):aa.set.ranks[r].required===s&&aa.set.ranks[r].attributes.secondary.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"set-bonus-"+s+" inactive"},a.text))}),aa.set.ranks[r].required===s&&aa.set.ranks[r].required<=m?aa.set.ranks[r].attributes.passive.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"set-bonus-"+s},a.text))}):aa.set.ranks[r].required===s&&aa.set.ranks[r].attributes.passive.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"set-bonus-"+s+" inactive"},a.text))})}aa.attributesRaw&&aa.attributesRaw.Sockets&&aa.gems[0]?(aa.gems[0].attributesRaw.Jewel_Rank?aa.gems[0].attributesRaw.Jewel_Rank&&(d=qa.concat(aa.gems[0].item.icon,".png"),ba.push(React.DOM.li({key:aa.key,className:"socket",style:{backgroundImage:"url("+d+")"}},React.DOM.span({key:aa.key,className:"gem-level"},aa.gems[0].attributesRaw.Jewel_Rank.min)))):(d=qa.concat(aa.gems[0].item.icon,".png"),ba.push(React.DOM.li({key:aa.key,className:"socket",style:{backgroundImage:"url("+d+")"}}))),aa.gems[0].attributes.primary&&aa.gems[0].attributes.primary.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"gem-passive"},a.text))}),aa.gems[0].attributes.passive&&aa.gems[0].attributes.passive.forEach(function(a){ba.push(React.DOM.li({key:aa.key,className:"gem-passive"},a.text))})):aa.attributesRaw&&aa.attributesRaw.Sockets&&ba.push(React.DOM.li({key:aa.key,className:"socket"})),oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" offHand",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:aa.key,className:"desc"},React.DOM.ul({key:aa.key,className:"stats"},ba))))}if(na&&na.waist&&ca){switch(a=qa.concat(na.waist.icon,".png"),H.waist.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(ca.attributesRaw&&(ca.attributesRaw.Ancient_Rank&&1===ca.attributesRaw.Ancient_Rank.min?(c="ancient",da.push(React.DOM.li({key:ca.key,className:b+" name"},c+" "+H.waist.name))):(c="",da.push(React.DOM.li({key:ca.key,className:b+" name"},H.waist.name)))),ca.attributes&&(ca.attributes.primary&&ca.attributes.primary.forEach(function(a){da.push(React.DOM.li({key:ca.key,className:"primary"},a.text))}),ca.attributes.secondary&&ca.attributes.secondary.forEach(function(a){da.push(React.DOM.li({key:ca.key,className:"secondary"},a.text))}),ca.attributes.passive&&ca.attributes.passive.forEach(function(a){da.push(React.DOM.li({key:ca.key,className:"passive"},a.text))})),ca.set&&ca.set.ranks)for(r=0;r<ca.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)ca.set.name===$a[t][0]&&this.state.setRing?n=$a[t][1]>=2?$a[t][1]++:$a[t][1]:ca.set.name!==$a[t][0]||this.state.setRing||(n=$a[t][1]);ca.set.ranks[r].required===s&&ca.set.ranks[r].required<=n?ca.set.ranks[r].attributes.primary.forEach(function(a){da.push(React.DOM.li({key:ca.key,className:"set-bonus-"+s},a.text))}):ca.set.ranks[r].required===s&&ca.set.ranks[r].attributes.primary.forEach(function(a){da.push(React.DOM.li({key:ca.key,className:"set-bonus-"+s+" inactive"},a.text))}),ca.set.ranks[r].required===s&&ca.set.ranks[r].required<=n?ca.set.ranks[r].attributes.secondary.forEach(function(a){da.push(React.DOM.li({key:ca.key,className:"set-bonus-"+s},a.text))}):ca.set.ranks[r].required===s&&ca.set.ranks[r].attributes.secondary.forEach(function(a){da.push(React.DOM.li({key:ca.key,className:"set-bonus-"+s+" inactive"},a.text))}),ca.set.ranks[r].required===s&&ca.set.ranks[r].required<=n?ca.set.ranks[r].attributes.passive.forEach(function(a){da.push(React.DOM.li({key:ca.key,className:"set-bonus-"+s},a.text))}):ca.set.ranks[r].required===s&&ca.set.ranks[r].attributes.passive.forEach(function(a){da.push(React.DOM.li({key:ca.key,className:"set-bonus-"+s+" inactive"},a.text))})}oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" waist",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:ca.key,className:"desc"},React.DOM.ul({key:ca.key,className:"stats"},da))))}if(na&&na.rightFinger&&ja){switch(a=qa.concat(na.rightFinger.icon,".png"),H.rightFinger.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(ja.attributesRaw&&(ja.attributesRaw.Ancient_Rank&&1===ja.attributesRaw.Ancient_Rank.min?(c="ancient",ia.push(React.DOM.li({key:ja.key,className:b+" name"},c+" "+H.rightFinger.name))):(c="",ia.push(React.DOM.li({key:ja.key,className:b+" name"},H.rightFinger.name)))),ja.attributes&&(ja.attributes.primary&&ja.attributes.primary.forEach(function(a){ia.push(React.DOM.li({key:ja.key,className:"primary"},a.text))}),ja.attributes.secondary&&ja.attributes.secondary.forEach(function(a){"orange"!==a.color?ia.push(React.DOM.li({key:ja.key,className:"secondary"},a.text)):ia.push(React.DOM.li({key:ja.key,className:"passive"},a.text))}),ja.attributes.passive&&ja.attributes.passive.forEach(function(a){ia.push(React.DOM.li({key:ja.key,className:"passive"},a.text))})),ja.set&&ja.set.ranks)for(r=0;r<ja.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)ja.set.name===$a[t][0]&&this.state.setRing?o=$a[t][1]>=2?$a[t][1]++:$a[t][1]:ja.set.name!==$a[t][0]||this.state.setRing||(o=$a[t][1]);ja.set.ranks[r].required===s&&ja.set.ranks[r].required<=o?ja.set.ranks[r].attributes.primary.forEach(function(a){ia.push(React.DOM.li({key:ja.key,className:"set-bonus-"+s},a.text))}):ja.set.ranks[r].required===s&&ja.set.ranks[r].attributes.primary.forEach(function(a){ia.push(React.DOM.li({key:ja.key,className:"set-bonus-"+s+" inactive"},a.text))}),ja.set.ranks[r].required===s&&ja.set.ranks[r].required<=o?ja.set.ranks[r].attributes.secondary.forEach(function(a){ia.push(React.DOM.li({key:ja.key,className:"set-bonus-"+s},a.text))}):ja.set.ranks[r].required===s&&ja.set.ranks[r].attributes.secondary.forEach(function(a){ia.push(React.DOM.li({key:ja.key,className:"set-bonus-"+s+" inactive"},a.text))}),ja.set.ranks[r].required===s&&ja.set.ranks[r].required<=o?ja.set.ranks[r].attributes.passive.forEach(function(a){ia.push(React.DOM.li({key:ja.key,className:"set-bonus-"+s},a.text))}):ja.set.ranks[r].required===s&&ja.set.ranks[r].attributes.passive.forEach(function(a){ia.push(React.DOM.li({key:ja.key,className:"set-bonus-"+s+" inactive"},a.text))})}ja.attributesRaw&&ja.attributesRaw.Sockets&&ja.gems[0]&&ja.gems[0].attributesRaw.Jewel_Rank?(d=qa.concat(ja.gems[0].item.icon,".png"),ia.push(React.DOM.li({key:ja.key,className:"socket",style:{backgroundImage:"url("+d+")"}},React.DOM.span({key:ja.key,className:"gem-level"},ja.gems[0].attributesRaw.Jewel_Rank.min))),ja.gems[0].attributes.passive.forEach(function(a){
ia.push(React.DOM.li({key:ja.key,className:"gem-passive unique"},a.text))})):ja.attributesRaw&&ja.attributesRaw.Sockets&&ia.push(React.DOM.li({key:ja.key,className:"socket"})),oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" rightFinger",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:ja.key,className:"desc"},React.DOM.ul({key:ja.key,className:"stats"},ia))))}if(na&&na.leftFinger&&ga){switch(a=qa.concat(na.leftFinger.icon,".png"),H.leftFinger.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(ga.attributesRaw&&(ga.attributesRaw.Ancient_Rank&&1===ga.attributesRaw.Ancient_Rank.min?(c="ancient",ha.push(React.DOM.li({key:ga.key,className:b+" name"},c+" "+H.leftFinger.name))):(c="",ha.push(React.DOM.li({key:ga.key,className:b+" name"},H.leftFinger.name)))),ga.attributes&&(ga.attributes.primary&&ga.attributes.primary.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"primary"},a.text))}),ga.attributes.secondary&&ga.attributes.secondary.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"secondary"},a.text))}),ga.attributes.passive?ga.attributes.passive.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"passive"},a.text))}):c=""),ga.set&&ga.set.ranks)for(r=0;r<ga.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)ga.set.name===$a[t][0]&&this.state.setRing?p=$a[t][1]>=2?$a[t][1]++:$a[t][1]:ga.set.name!==$a[t][0]||this.state.setRing||(p=$a[t][1]);ga.set.ranks[r].required===s&&ga.set.ranks[r].required<=p?ga.set.ranks[r].attributes.primary.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"set-bonus-"+s},a.text))}):ga.set.ranks[r].required===s&&ga.set.ranks[r].attributes.primary.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"set-bonus-"+s+" inactive"},a.text))}),ga.set.ranks[r].required===s&&ga.set.ranks[r].required<=p?ga.set.ranks[r].attributes.secondary.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"set-bonus-"+s},a.text))}):ga.set.ranks[r].required===s&&ga.set.ranks[r].attributes.secondary.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"set-bonus-"+s+" inactive"},a.text))}),ga.set.ranks[r].required===s&&ga.set.ranks[r].required<=p?ga.set.ranks[r].attributes.passive.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"set-bonus-"+s},a.text))}):ga.set.ranks[r].required===s&&ga.set.ranks[r].attributes.passive.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"set-bonus-"+s+" inactive"},a.text))})}ga.attributesRaw&&ga.attributesRaw.Sockets&&ga.gems[0]&&ga.gems[0].attributesRaw.Jewel_Rank?(d=qa.concat(ga.gems[0].item.icon,".png"),ha.push(React.DOM.li({key:ga.key,className:"socket",style:{backgroundImage:"url("+d+")"}},React.DOM.span({key:ga.key,className:"gem-level"},ga.gems[0].attributesRaw.Jewel_Rank.min))),ga.gems[0].attributes.passive.forEach(function(a){ha.push(React.DOM.li({key:ga.key,className:"gem-passive unique"},a.text))})):ga.attributesRaw&&ga.attributesRaw.Sockets&&ha.push(React.DOM.li({key:ga.key,className:"socket"})),oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" leftFinger",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:ga.key,className:"desc"},React.DOM.ul({key:ga.key,className:"stats"},ha))))}if(na&&na.neck&&ea){switch(a=qa.concat(na.neck.icon,".png"),H.neck.displayColor){case"green":b="set";break;case"orange":b="unique";break;case"blue":b="magic";break;case"yellow":b="rare";break;case"white":b="white";break;case"gray":b="common"}if(ea.attributesRaw&&(ea.attributesRaw.Ancient_Rank&&1===ea.attributesRaw.Ancient_Rank.min?(c="ancient",fa.push(React.DOM.li({key:ea.key,className:b+" name"},c+" "+H.neck.name))):(c="",fa.push(React.DOM.li({key:ea.key,className:b+" name"},H.neck.name)))),ea.attributes&&(ea.attributes.primary&&ea.attributes.primary.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"primary"},a.text))}),ea.attributes.secondary&&ea.attributes.secondary.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"secondary"},a.text))}),ea.attributes.passive&&ea.attributes.passive.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"passive"},a.text))})),ea.set&&ea.set.ranks)for(r=0;r<ea.set.ranks.length;r++)for(s=1;6>=s;s++){for(t=0;t<$a.length;t++)ea.set.name===$a[t][0]&&this.state.setRing?q=$a[t][1]>=2?$a[t][1]++:$a[t][1]:ea.set.name!==$a[t][0]||this.state.setRing||(q=$a[t][1]);ea.set.ranks[r].required===s&&ea.set.ranks[r].required<=q?ea.set.ranks[r].attributes.primary.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"set-bonus-"+s},a.text))}):ea.set.ranks[r].required===s&&ea.set.ranks[r].attributes.primary.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"set-bonus-"+s+" inactive"},a.text))}),ea.set.ranks[r].required===s&&ea.set.ranks[r].required<=q?ea.set.ranks[r].attributes.secondary.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"set-bonus-"+s},a.text))}):ea.set.ranks[r].required===s&&ea.set.ranks[r].attributes.secondary.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"set-bonus-"+s+" inactive"},a.text))}),ea.set.ranks[r].required===s&&ea.set.ranks[r].required<=q?ea.set.ranks[r].attributes.passive.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"set-bonus-"+s},a.text))}):ea.set.ranks[r].required===s&&ea.set.ranks[r].attributes.passive.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"set-bonus-"+s+" inactive"},a.text))})}ea.attributesRaw&&ea.attributesRaw.Sockets&&ea.gems[0]?(d=qa.concat(ea.gems[0].item.icon,".png"),fa.push(React.DOM.li({key:ea.key,className:"socket",style:{backgroundImage:"url("+d+")"}},React.DOM.span({key:ea.key,className:"gem-level"},ea.gems[0].attributesRaw.Jewel_Rank.min))),ea.gems[0].attributes.passive.forEach(function(a){fa.push(React.DOM.li({key:ea.key,className:"gem-passive unique"},a.text))})):ea.attributesRaw&&ea.attributesRaw.Sockets&&fa.push(React.DOM.li({key:ea.key,className:"socket"})),oa.push(React.DOM.div({key:na.key,className:ra+" "+c+" "+b+" neck",onClick:this.handleItemClick,style:{backgroundImage:"url("+a+")"}},React.DOM.div({key:ea.key,className:"desc"},React.DOM.ul({key:ea.key,className:"stats"},fa))))}if(L.attributes&&H&&L.attributes.passive[0]&&-1!==L.attributes.passive[0].text.search("passive")&&H.neck&&"Hellfire Amulet"===H.neck.name){switch(v=L.attributes.passive[0].text.substring(9).replace(" passive.","").replace(/ /g,"").toLowerCase(),u=L.attributes.passive[0].text.substring(9).replace(" passive.",""),I){case"demon-hunter":a=pa.concat("demonhunter_passive_",v);break;case"witch-doctor":a=pa.concat("witchdoctor_passive_",v);break;case"barbarian":a=pa.concat("barbarian_passive_",v);break;case"crusader":a=pa.concat("crusader_passive_",v);break;case"monk":a=pa.concat("monk_passive_",v);break;case"wizard":a=pa.concat("wizard_passive_",v);break;default:console.log("new class?")}ka.push(React.DOM.div({key:L.key,className:"hasIcon"},u," (HA)",React.DOM.div({key:L.key,className:"icon",style:{backgroundImage:"url("+a+".png)"}})))}if(C&&C.life&&C.damage&&C.toughness&&C.vitality&&(D.push(React.DOM.div({key:C.key},"Life: ",Math.round(C.life+C.life*Sa/100).toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),D.push(React.DOM.div({key:C.key},"Toughness: ",Math.round(C.toughness).toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),"demon-hunter"===I||"monk"===I?(D.push(React.DOM.div({key:C.key},"Dexterity: ",C.dexterity.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),C.strength>1e3&&D.push(React.DOM.div({key:C.key},"Strength: ",C.strength.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),C.intelligence>1e3&&D.push(React.DOM.div({key:C.key},"Intelligence: ",C.intelligence.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")))):"witch-doctor"===I||"wizard"===I?(D.push(React.DOM.div({key:C.key},"Intelligence: ",C.intelligence.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),C.strength>1e3&&D.push(React.DOM.div({key:C.key},"Strength: ",C.strength.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),C.dexterity>1e3&&D.push(React.DOM.div({key:C.key},"Dexterity: ",C.dexterity.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")))):("barbarian"===I||"crusader"===I)&&(D.push(React.DOM.div({key:C.key},"Strength: ",C.strength.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),C.dexterity>1e3&&D.push(React.DOM.div({key:C.key},"Dexterity: ",C.dexterity.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),C.intelligence>1e3&&D.push(React.DOM.div({key:C.key},"Intelligence: ",C.intelligence.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")))),D.push(React.DOM.div({key:C.key},"Vitality: ",C.vitality.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))),D.push(React.DOM.div({key:C.key},"Armor: ",Math.round(C.armor+C.armor*Ra/100))),0!==C.damageIncrease&&D.push(React.DOM.div({key:C.key},"Damage Increase: ",C.damageIncrease)),0!==C.damageReduction&&D.push(React.DOM.div({key:C.key},"Damage Increase: ",C.damageReduction))),ta&&C&&(C.critChance?ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Critical Hit Chance: "+Math.round(1e3*(100*C.critChance+Na))/1e3+"%")):0!==Na&&ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Critical Hit Chance: "+Math.round(1e3*Na)/1e3+"%")),C.critDamage?ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Critical Damage increase: "+Math.round(1e3*(100*C.critDamage+Ma-100))/1e3+"%")):0!==Ma&&ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Critical Damage increase: "+Math.round(1e3*(Ma-100))/1e3+"%")),1!==va&&ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Cooldown Reduction: "+Math.round(100*(1-va)*100)/100+"%")),1!==wa&&ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Resource Cost Reduction: "+Math.round(100*(1-wa)*100)/100+"%")),$.attacksPerSecond&&aa.attacksPerSecond?(Va=$.attacksPerSecond.max+$.attacksPerSecond.max*(.15+Ha+Ka/100),ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Attacks per Second: "+Math.round(100*Va)/100))):$.attacksPerSecond?(Va=$.attacksPerSecond.max+$.attacksPerSecond.max*(Ha+Ka/100),ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Attacks per Second: "+Math.round(100*Va)/100))):0!==Ka&&(Va=Ka/100,ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Attacks per Second: "+Math.round(100*Va)/100))),0!==xa&&ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Bonus Damage to Elites: "+xa+"%")),0!==za?ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Area Bonus Damage: "+(za+Oa)+"%")):0!==Oa&&ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Area Bonus Damage: "+Oa+"%")),0!==Da&&ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},Da)),C.primaryResource?ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Primary Resource: "+(C.primaryResource+Pa))):0!==Pa&&ta.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Primary Resource: "+Pa)),Fa&&ta.push(React.DOM.div({dangerouslySetInnerHTML:{__html:"Skill Damage: "+Fa},key:ta.key,className:"bonusstat"}))),C&&C.critDamage&&C.critChance&&Va&&0!==Wa&&0!==Xa){var gb,hb,ib,jb=1+C.dexterity/100,kb=.5*(Wa+Xa),lb=C.critChance+Na/100,mb=C.critDamage-1+Ma/100,nb=jb*kb,ob=lb,pb=mb,qb=0,rb=0,sb=3,tb=1,ub=[];if(this.state.skillDmgRaw)for(r=0;r<this.state.skillDmgRaw.length;r++)w.forEach(function(a){a.skill&&-1!=Ga[r].search(a.skill.name.toString())&&ub.push([sb,Ga[r]])});for(r=0;r<_a.length;r++)z.forEach(function(a){a.skill.name===_a[r][0]&&("Damage"===_a[r][1]&&(qb+=_a[r][2]),"Crit Chance"===_a[r][1]&&(ob+=_a[r][2]))});for(r=0;r<ab.length;r++)w.forEach(function(a){a.skill&&a.rune?(a.skill.name===ab[r][0]||a.rune.name===ab[r][0])&&"Damage"===ab[r][1]&&(qb+=ab[r][2]):a.skill.name===ab[r][0]&&"Damage"===ab[r][1]&&(qb+=ab[r][2])});this.state.maxEleDmgValue&&(rb+=this.state.maxEleDmgValue/100),hb=ub.sort(),ib=hb[0]?hb[0][0]*(1+parseFloat(hb[0][1]))*(1+rb):1,gb=nb*Va*(ob*pb+1)*ib*(1+qb)*(1+tb),gb?D.push(React.DOM.div({key:C.key},"DPS: ",Math.round(nb*Va*(lb*mb+1)).toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")," | EDPS: ",Math.round(gb).toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."))):D.push(React.DOM.div({key:C.key},"DPS: ",Math.round(nb*Va*(lb*mb+1)).toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")," | EDPS: ","Calculating EDPS.."))}return ua&&C&&(C.secondaryResource&&ua.push(React.DOM.div({key:ta.key,className:"bonusstat"},"Secondary Resource: "+C.secondaryResource)),C.physicalResist?ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Physical Resist: "+(C.physicalResist+Qa))):0!==Qa&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Physical Resist: "+Qa)),C.fireResist?ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Fire Resist: "+(C.fireResist+Qa))):0!==Qa&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Fire Resist: "+Qa)),C.coldResist?ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Cold Resist: "+(C.coldResist+Qa))):0!==Qa&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Cold Resist: "+Qa)),C.lightningResist?ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Lighting Resist: "+(C.lightningResist+Qa))):0!==Qa&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Lighting Resist: "+Qa)),C.poisonResist?ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Poison Resist: "+(C.poisonResist+Qa))):0!==Qa&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Poison Resist: "+Qa)),0!==Aa&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Gold Pick-up Radius: "+Aa+" yards")),1!==Ba&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Melee Damage Reduction: "+Math.round(100*(1-Ba)*1e3)/1e3+"%")),1!==Ca&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Ranged Damage Reduction: "+Math.round(100*(1-Ca)*1e3)/1e3+"%")),0!==ya&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Damage Reduction from Elites: "+ya+"%")),0!==Ea&&ua.push(React.DOM.div({key:ua.key,className:"bonusstat"},"Bonus Max Health: "+Ea+"%"))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat cdr"},"cdr: "+Math.round(10*Ja)/10+"%",React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat resred"},"res: "+Math.round(10*La)/10+"%",React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat atkspd"},"atkspd: "+Math.round(10*Ka)/10+"%",React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat critdmg"},"critdmg: "+Math.round(Ma)+"%",React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat critchance"},"critchance: "+Math.round(10*Na)/10+"%",React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat areadmg"},"areadmg: "+Math.round(Oa)+"%",React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat resource"},"resource: "+Math.round(Pa),React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat resistall"},"allres: "+Math.round(Qa),React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat armor"},"armor: "+Math.round(10*Ra)/10+"%",React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),Ia.push(React.DOM.div({key:Ia.key,className:"paragon-stat maxlife"},"maxlife: "+Math.round(10*Sa)/10+"%",React.DOM.span({key:Ia.key,className:"paragon-stat-increment",onClick:this.handleParagon},"+"),React.DOM.span({key:Ia.key,className:"paragon-stat-decrement",onClick:this.handleParagon},"-"),React.DOM.span({key:Ia.key,className:"paragon-stat-max",onClick:this.handleParagon}))),localStorage.setItem("paragonCdr",this.state.paragonCdr),localStorage.setItem("paragonResRed",this.state.paragonResRed),localStorage.setItem("paragonAtkSpd",this.state.paragonAtkSpd),localStorage.setItem("paragonCritDmg",this.state.paragonCritDmg),localStorage.setItem("paragonCritChance",this.state.paragonCritChance),localStorage.setItem("paragonAreaDmg",this.state.paragonAreaDmg),localStorage.setItem("paragonResource",this.state.paragonResource),localStorage.setItem("paragonResistAll",this.state.paragonResistAll),localStorage.setItem("paragonArmor",this.state.paragonArmor),localStorage.setItem("paragonMaxHealth",this.state.paragonMaxHealth),React.DOM.div({className:"d3-container"},React.DOM.div({className:"d3-item-wrapper"},oa),React.DOM.div({className:"d3-char-bg",style:ma}),React.DOM.div({className:"d3-api-url"},"1 - Enter your BattleTag: ",React.DOM.input({value:this.state.battleTag,placeholder:"NAME#1234",onChange:this.handleChange})),React.DOM.div({className:"d3-char-wrapper"},"2 - Click below to select your hero: ",React.DOM.select({className:"d3-chars",ref:"select",value:this.state.selected,onChange:this.setSelect},F)),React.DOM.div({className:this.state.panels,id:"panel-left"},"General",la,React.DOM.div({className:"d3-paragon-selector"},"Paragon Points: ",Ia)),React.DOM.div({className:this.state.skillDescOpen+" "+this.state.panels,title:"click to open detailed description",id:"panel-bottom-left"},React.DOM.button({onClick:this.handleSkillDescClick},"show details"),"Skills",x),React.DOM.div({className:this.state.skillDescOpen,id:"panel-bottom-left-desc"},React.DOM.button({onClick:this.handleSkillDescClick,title:"click to close"},"close"),y),React.DOM.div({className:this.state.passiveDescOpen+" "+this.state.panels,title:"click to open detailed description",id:"panel-bottom-right"},React.DOM.button({onClick:this.handlePassiveDescClick},"show details"),"Passives",A,ka),React.DOM.div({className:this.state.passiveDescOpen,id:"panel-bottom-right-desc"},React.DOM.button({onClick:this.handlePassiveDescClick,title:"click to close"},"close"),B,"Note: your Hellfire Passive cannot be displayed here, courtesy of blizzard"),React.DOM.div({className:this.state.toggle+" "+this.state.panels,id:"panel-right"},React.DOM.button({onClick:this.handleBonusStatsClick,title:"click to show/hide more stats"},"show "+this.state.toggle),"Stats",D),React.DOM.div({id:"panel-right-additional"},"Offensive Stats",ta,"Defensive Stats",ua))}});React.render(React.createElement(DataWrapper,{pollInterval:6e5}),document.getElementById("profile-data"));